#include <bits/stdc++.h> using namespace std; 
typedef long long int lli;  int tc;  lli ctdy(string input) {   lli dp[18][2][10];   memset(dp, 0, sizeof(dp));   for (int i = '0'; i <= input[0]; i++) {     if (i != input[0]) {       dp[0][0][i - '0'] = 1;     } else {       dp[0][1][i - '0'] = 1;     }   };   for (int i = 0; i < input.size() - 1; i++) {     for (int j = 0; j <= 9; j++) {       for (int k = j; k <= 9; k++) {         dp[i + 1][0][k] += dp[i][0][j];       }     }     for (int j = 0; j <= 9; j++) {       if (dp[i][1][j] == 0)         continue;       for (int k = j; k <= input[i + 1] - '0'; k++) {         if (k != input[i + 1] - '0') {           dp[i + 1][0][k] += dp[i][1][j];         } else {           dp[i + 1][1][k] += dp[i][1][j];         }       }     }   }   lli sum = 0;   for (int i = 0; i <= 9; i++) {     sum += dp[input.size() - 1][0][i];     sum += dp[input.size() - 1][1][i];   }   return sum; }  
int main() {   cin >> tc;   for (int t = 1; t <= tc; t++) {     char c[30];     lli num;     string s;     scanf("%s", c);     sscanf(c, "%lld", &num);     s = c;     lli goal = ctdy(s);       lli ub = num, lb = 0, m;     while (ub - lb > 1) {       m = (ub + lb) / 2;       num = m;       sprintf(c, "%lld", num);       s = c;       if (ctdy(s) != goal) {         lb = m;       } else {         ub = m;       }     }      printf("Case #%d: %lld\n", t, ub);   } }
#include <bits/stdc++.h> using namespace std; 
typedef long long ll; typedef pair<int, int> pii; typedef pair<ll, ll> pll; typedef vector<int> vi; typedef vector<vi> vvi; typedef vector<ll> vll; typedef set<int> si; typedef map<int, int> mii;  const int N = 1002; int t, digits; ll n; bool dp[N][12]; string ans, nString;  bool biggerThanN(string x) {   if (((int)(x).size()) < ((int)(nString).size()))     return false;   if (((int)(x).size()) > ((int)(nString).size()))     return true;   return x > nString; }  string conv(ll x) {   stringstream ss;   ss << x;   return ss.str(); }  void solve(int i, int p, string curr) {   if (biggerThanN(curr)) {     dp[i][p] = true;     return;   }   if (i <= digits + 1 and curr != "") {     if (((int)(curr).size()) > ((int)(ans).size()))       ans = curr;     if (((int)(curr).size()) == ((int)(ans).size()) and curr > ans)       ans = curr;   }   if (i == digits + 1)     return;   if (dp[i][p])     return;    for (int j = (p); j <= (int)(9); ++j)     solve(i + 1, j, curr + char(j + '0')); }  
int main() {   freopen("B-small-attempt0.in", "r", stdin);   freopen("output.txt", "w", stdout);   scanf("%d", &t);   for (int testCase = (1); testCase <= (int)(t); ++testCase) {     cin >> n;     digits = (int)log10(n) + 1;     nString = conv(n);      ans = "";     memset(dp, 0, sizeof dp);     solve(1, 1, "");     printf("Case #%d: ", testCase);     cout << (ans) << endl;   } } 
#include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iostream> #include <iterator> #include <list> #include <math.h> #include <queue> #include <set> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> #include <vector> using namespace std; 
const double EPS = 1e-9; const int INF = 1000000000;  ofstream fout("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_4_Usenix_RF_1.0_True_MCTS_Classic_True/WCG/sammyMaX/outer_temp/sammyMaX/A-small-practice_transformation.out");  string solves(string s, char prev) {   if (s.size() == 0)     return "";   char minc = '9';   for (char c : s) {     minc = min(minc, c);   }   if (s[0] > minc) {     if (s.size() > 1 && s[1] > s[0]) {       return s[0] + solves(s.substr(1), s[0]);     } else {       string v = "";       if (s[0] > minc)         if (s[0] > '1')           v += (char)(s[0] - 1);       for (int i = 1; i < s.size(); i++)         v += '9';       return v;     }   }   return minc + solves(s.substr(1), minc); }  void solve() {   string s;   cin >> s;   fout << solves(s, '0') << '\n'; }  
int main() {    int get;   cin >> get;   int i;   {     i = 0;     while (i < get) {       fout << "Case #" << i + 1 << ": ", solve();       i++;     }   }    return 0; }
#include <algorithm> #include <cstdio> #include <cstring> #include <iostream> #include <string> #include <vector> using namespace std; 
int main() {   int tt;    cin >> tt;    for (int t = 1; t <= tt; ++t) {     long long s;     vector<int> v;     cin >> s;      while (s > 0) {       v.push_back(s % 10);       s = s / 10;     }     int ind = v.size() - 1;     while (ind > 0 && (v[ind] <= v[ind - 1]))       ind--;     if (ind != 0) {       v[ind]--;       while (ind + 1 < v.size() && v[ind + 1] == v[ind] + 1) {         v[ind]++;         v[++ind]--;       }       while (ind > 0)         v[--ind] = 9;     }      for (int i = v.size() - 1; i >= 0; --i)       s = s * 10 + v[i];      cout << "Case #" << t << ": " << s << endl;   }    return 0; }
#include <bits/stdc++.h> #include <set> using namespace std; 
const double EPS = 1e-9;  typedef unsigned long long ull; typedef long double LD; typedef set<int> si; typedef pair<int, int> ii; typedef vector<int> VI; typedef vector<ii> vii; typedef long long LL; const int INF = ~(1 << 31); const double pi = acos(-1);  inline void jjoqmjzxvo(std::string &s, int &i, VI &k) {   char T = s[i];   k.push_back(T - '0'); }  bool check(int a) {   string s = to_string(a);   VI k;   for (int i = (0); i < (s.size()); i++)     jjoqmjzxvo(s, i, k);   VI ne = k;   sort(ne.begin(), ne.end());   for (int i = (0); i < (k.size()); i++)     if (k[i] != ne[i])       return false;   return true; }  
int main() {   cin.sync_with_stdio(false);   ofstream fout("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_7_Usenix_RF_1.0_True_MCTS_Classic_True/okaduki/bennikartefla/outer_temp/bennikartefla/A-small-practice_transformation.out");   int n;   cin >> n;   for (int i = (0); i < (n); i++) {     int T;     cin >> T;     for (int a = T; a >= 0; a--) {       if (check(a)) {         fout << "Case #" << i + 1 << ": " << a << endl;         break;       }     }   }   return 0; }
#include <bits/stdc++.h> using namespace std;  
typedef long long ll; typedef long long LL; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<int> vi; void open() {   freopen("D:/OneDrive/Code/GCJ/B-small-attempt0.in", "r", stdin);   freopen("D:/OneDrive/Code/GCJ/out.txt", "w", stdout); }  
int main(void) {   open();   int tc;   scanf("%d", &tc);   for (int ct = 1; ct <= tc; ct++) {     printf("Case #%d: ", ct);     char str[100];     scanf("%s", str);     bool valid = true;     int len = strlen(str);     for (int i = 0; i < len - 1; i++) {       if (str[i] > str[i + 1]) {         valid = false;         int idx = i;         int carry = 1;         while (i >= 0 && carry) {           if (str[i] != '0') {             str[i]--;             carry = 0;           } else {             str[i] = '9';             carry = 1;           }            if (i > 0 && str[i - 1] > str[i]) {             carry = 1;             str[i] = '9';           }            i--;         }          for (int j = 0; j <= idx; j++) {           if (j == 0 && str[j] == '0')             continue;           printf("%c", str[j]);         }          for (int j = idx + 1; j < len; j++) {           printf("9");         }         printf("\n");         break;       }     }      if (valid) {       printf("%s\n", str);     }      cerr << "Test " << ct << " done \n";   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;
const int MAXN = 1005; const int mod = 1000000007; ifstream fin;  using VI = vector<int>; using VVI = vector<VI>; using PII = pair<int, int>; using LL = long long; using VL = vector<LL>; using VVL = vector<VL>; using PLL = pair<LL, LL>; using VS = vector<string>; template <class S, class T> istream &operator>>(istream &is, pair<S, T> &p) {   return is >> p.first >> p.second; }  template <class T> void maxi(T &x, T y) {   if (x < y) {     x = y;   } } template <class T> void mini(T &x, T y) {   if (x > y)     x = y; }  const double EPS = 1e-10; const double PI = acos(-1.0); const LL MOD = 1e9 + 7;  bool istidy(LL x) {   int prv = 10;   while (x > 0) {     if (prv < x % 10)       return false;     prv = x % 10;     x /= 10;   }   return true; }  
int main() {   ios::sync_with_stdio(false);    fin.open("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_9_Usenix_RF_1.0_True_MCTS_Classic_True/kuzphi/okaduki/A-small-practice.in");    cin.tie(0);    int T;   fin >> T;   {     int t = (1);     while (t < (T + 1)) {       LL N;       fin >> N;       LL ans = 0;       for (ans = N; ans > 0; --ans) {         if (istidy(ans))           break;       }        printf("Case #%d: %lld\n", t, ans);       ++t;     }   }    return 0; }
#include <bits/stdc++.h> #include <iostream> #include <stdio.h> using namespace std;
using VI = vector<int>; using VVI = vector<VI>; using PII = pair<int, int>; using LL = long long; using VL = vector<LL>; using VVL = vector<VL>; using PLL = pair<LL, LL>; using VS = vector<string>; template <class S, class T> istream &operator>>(istream &is, pair<S, T> &p) {   return is >> p.first >> p.second; } template <class S, class T> ostream &operator<<(ostream &os, const pair<S, T> &p) {   return os << p.first << " " << p.second; } template <class T> void maxi(T &x, T y) {   if (x < y)     x = y; } template <class T> void mini(T &x, T y) {   if (x > y)     x = y; }  const double EPS = 1e-10; const double PI = acos(-1.0); const LL MOD = 1e9 + 7;  bool istidy(LL x) {   int prv = 10;   for (; x > 0;) {     if (prv < x % 10)       return false;     prv = x % 10;     x /= 10;   }   return true; }  
int main() {   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_9_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/okaduki/outer_temp/okaduki/A-small-practice_transformation.out", "w", stdout);    freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_9_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/okaduki/A-small-practice.in",           "r", stdin);    cin.tie(0);    int T;   cin >> T;   for (int t = (1); t < (T + 1); ++t) {     LL N;     cin >> N;     LL ans = 0;     {       ans = N;       while (ans > 0) {         if (istidy(ans))           break;         --ans;       }     }      printf("Case #%d: %lld\n", t, ans);   }    return 0; }
#include <algorithm> #include <bitset> #include <climits> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <iostream> #include <limits> #include <list> #include <map> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <string> #include <unordered_map> #include <vector> using namespace std; 
const double pi = acos(-1.), eps = 1e-6; const int Maxn = 110, Maxk = 5010, Mo = 1e9 + 7, oo = INT_MAX >> 2; const int sp[4][2] = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}}; int T;  long long f[1000][10]; int n, m, k, cs, ans; int N; string st; 
int main() {   cin >> T;   while (T--) {     printf("Case #%d: ", ++cs);     cin >> st;     for (int w = 0; w < st.size(); w++) {       if (st[0] == '0')         break;       for (int i = 1; i < st.size(); i++) {         if (st[i] < st[i - 1]) {           st[i - 1]--;           for (int j = i; j < st.size(); j++)             st[j] = '9';           break;         }       }     }     if (st[0] == '0')       for (int i = 1; i < st.size(); i++)         cout << st[i];     else       cout << st;     cout << endl;   }   return 0; }
#include <algorithm> #include <bitset> #include <cctype> #include <climits> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iostream> #include <iterator> #include <limits> #include <list> #include <map> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std; 
int solve; int cs;  string st; 
int main() {   int ret_val = 0;   ios::sync_with_stdio(true);   cin >> solve;   while (solve--) {     printf("Case #%d: ", ++cs);     cin >> st;     int w;     for (w = 0; w < st.size(); w++) {       if (st[0] == '0')         break;        {         int i = 1;         while (i < st.size()) {           if (st[i] < st[i - 1]) {             st[i - 1]--;             for (int get = i; get < st.size(); get++)               st[get] = '9';             break;           }           i++;         }       }     }     if (st[0] == '0') {       int i = 1;       while (i < st.size()) {         printf("%c", st[i]);         i++;       }     } else       printf("%s", st.c_str());     printf("\n");   }   return ret_val; }
#include <algorithm> #include <climits> #include <cmath> #include <cstdio> #include <cstring> #include <iostream> #include <iterator> #include <map> #include <queue> #include <set> #include <stack> #include <string> #include <unordered_map> #include <utility> #include <vector>   using namespace std; 
using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  ll gcd(ll a, ll b) {   ll t;   while ((t = a % b) != 0) {     a = b;     b = t;   }   return b; }  ll fast_exp(ll base, ll n, ll m) {   if (n == 0)     return 1;   ll t = fast_exp(base, n / 2, m);   if (n % 2 == 0)     return (t * t) % m;   else     return (((t * t) % m) * base) % m; }  bool is_set(int i, ll mask) { return (mask >> i) & 1; }  int count_bits(ll mask) {   int ans = 0;   for (int i = 0; i < 64; ++i)     if (is_set(i, mask))       ++ans;   return ans; }  int first_bit(ll mask) {   int i = 0;   while (i < 64)     if (is_set(i++, mask))       return i - 1;   return -1; }  
int main() {   ios::sync_with_stdio(false);   int t;   cin >> t;   for (int i = 1; i <= t; ++i) {     string n;     cin >> n;     char l = '0';     int s = n.length();     for (int j = 0; j < s; ++j) {       if (n[j] < l) {         --j;         int k = j;         while (k > 0 && n[k] == '1')           n[k] = '9', --k;         n[k] -= 1;         while (k > 0 && n[k - 1] > n[k])           n[k - 1] -= 1, n[k] = '9', --k;         for (int x = j + 1; x < s; ++x)           n[x] = '9';         break;       }       l = n[j];     }     int k = 0;     while (n[k] == '0')       ++k;     cout << "Case #" << i << ": " << n.substr(k) << "\n";   }   return 0; }
#include <algorithm> #include <climits> #include <cmath> #include <cstdio> #include <cstring> #include <iostream> #include <iterator> #include <map> #include <queue> #include <set> #include <stack> #include <stdio.h> #include <string> #include <unordered_map> #include <utility> #include <vector>   using namespace std; 
using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  inline void fewhoobnbj(ll &a, ll &tt, ll &t) {   a = tt;   tt = t; }  ll do_llubd_fct(ll a, ll tt) {   ll t;   while ((t = a % tt) != 0)     fewhoobnbj(a, tt, t);   return tt; }  ll do_llirc_fct(ll base, ll n, ll duol_Var) {   if (n == 0)     return 1;   ll t = do_llirc_fct(base, n / 2, duol_Var);   if (n % 2 == 0)     return (t * t) % duol_Var;   else     return (((t * t) % duol_Var) * base) % duol_Var; }  bool do__Bobfp_fct(int i, ll rjcl_Var) { return (rjcl_Var >> i) & 1; }  int do_intilo_fct(ll rjcl_Var) {   int i = 0;   while (i < 64)     if (do__Bobfp_fct(i++, rjcl_Var))       return i - 1;   return -1; }  
int main() {    int t;   scanf("%d ", &t);   {     int i = 1;     for (; i <= t;) {       string n;       cin >> n;       char qqgc_Var = '0';       int s = n.length();       for (int wxsi_Var = 0; wxsi_Var < s; ++wxsi_Var) {         if (n[wxsi_Var] < qqgc_Var) {           --wxsi_Var;           int k = wxsi_Var;           while (k > 0 && n[k] == '1')             n[k] = '9', --k;           n[k] -= 1;           while (k > 0 && n[k - 1] > n[k])             n[k - 1] -= 1, n[k] = '9', --k;           for (int x = wxsi_Var + 1; x < s; ++x)             n[x] = '9';           break;         }         qqgc_Var = n[wxsi_Var];       }       int k = 0;       while (n[k] == '0')         ++k;       printf("Case #%d: %s\n", i, n.substr(k).c_str());       ++i;     }   }   return 0; }
#include <bits/stdc++.h> using namespace std; 
typedef long long LL;  
int main() {   freopen("123.in", "r", stdin);   freopen("123.out", "w", stdout);   int T, cas = 0;   cin >> T;   while (T--) {     string s;     cin >> s;     reverse(s.begin(), s.end());     int n = s.size();     for (int i = 1; i < n; i++) {       if (s[i] <= s[i - 1])         continue;       for (int j = 0; j < i; j++)         s[j] = '9';       int j = i;       while (s[j] == '0')         s[j] = '9', j++;       s[j]--;     }     while (s.back() == '0')       s.pop_back();     reverse(s.begin(), s.end());     printf("Case #%d: %s\n", ++cas, s.c_str());   }   return 0; }
#include <algorithm> #include <cstdio> #include <cstring> using namespace std; 
bool f(int n) {   if (n < 10)     return true;   int a = n % 10;   int b = n % 100 / 10;   return f(n / 10) && (a >= b); }  char s[100]; 
int main(void) {   int t;   scanf("%d", &t);   for (int tt = 1; tt <= t; tt++) {        scanf("%s", s);     int k;     for (k = 1; s[k] != 0; ++k) {       if (s[k] < s[k - 1])         break;     }     if (s[k] == 0) {       printf("Case #%d: %s\n", tt, s);       continue;     }      int i = max(0, k - 1);     for (int j = strlen(s) - 1; j > i; --j)       s[j] = '9';      for (; i >= 0; --i) {       if (i == 0 || s[i] > s[i - 1]) {         --s[i];         break;       }       s[i] = '9';     }      printf("Case #%d: %s\n", tt, s[0] == '0' ? s + 1 : s);   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std; 
const int mod = 1000000007; typedef set<int> si; typedef long long LL; typedef pair<int, int> pii; typedef unsigned long long ull; typedef vector<int> VI; typedef long double LD; typedef vector<vector<int>> vvi;  inline bool juejowonlo(int &get, int &n, _Bool &juejo) {   if (n % 10 > get) {     juejo = 0;     return 1;   }   get = n % 10;   n /= 10;   return false; }  bool is_tidy(int n) {   int get = 9;   while (n) {     _Bool juejo;     if (juejowonlo(get, n, juejo)) {       return juejo;     }   }   return 1; }  
int main(int argc, char **argv) {   int ret_val = 0;    int t;   scanf("%d ", &t);   int testcase;   for (testcase = 0; testcase < t; ++testcase) {     LL n;     scanf("%lld ", &n);     LL tidy = 1;     for (int i = n; i > 1; --i) {       if (is_tidy(i)) {         tidy = i;         break;       }     }     printf("Case #%d: %lld\n", testcase + 1, tidy);   }    return ret_val; }
#include <bits/stdc++.h> #include <iostream> #include <stdio.h> using namespace std; 
inline bool hjrvucvznz(_Bool &hjrvu) {   hjrvu = 0;   return true;   return false; }  inline bool eoljraspbr(_Bool &hjrvu, _Bool &eoljr) {   eoljr = hjrvu;   return true;   return false; }  inline bool fwybqkivtv(_Bool &hjrvu, _Bool &get) {   _Bool eoljr;   if (eoljraspbr(hjrvu, eoljr)) {     get = eoljr;     return true;   }   return false; }  inline bool utfumdmeja(_Bool &get, _Bool &utfum) {   utfum = get;   return true;   return false; }  bool is_tidy(int n) {   int solve = 9;   for (; n;) {     if (n % 10 > solve) {       _Bool hjrvu;       if (hjrvucvznz(hjrvu)) {         _Bool get;         if (fwybqkivtv(hjrvu, get)) {           _Bool utfum;           if (utfumdmeja(get, utfum)) {             return utfum;           }         }       }     }     solve = n % 10;     n /= 10;   }   return true; }  
int main(int argc, char **argv) {    int t;   cin >> t;   for (int r = 0; r < t; ++r) {     long long int n;     cin >> n;     long long int tidy = 1;     {       int i;       for (i = n; i > 1;) {         if (is_tidy(i)) {           tidy = i;           break;         }         --i;       }     }     printf("Case #%d: %lld\n", r + 1, tidy);   }    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cctype> #include <complex> #include <cstdio> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <map> #include <math.h> #include <numeric> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility>  using namespace std; 
const double EPS = 1e-9;  int solve; string s;  
int main() {    cin >> solve;   for (int x = (1); x <= ((solve)); ++x) {     cin >> s;     for (int p = ((int)s.size() - 2); p >= (0); --p) {       if (s[p + 1] < s[p]) {         for (int j = (p + 1); j <= ((int)s.size() - 1); ++j)           s[j] = '9';         s[p]--;       }     }     if (s[0] == '0')       s = s.substr(1, (int)s.size() - 1);     printf("Case #%d: ", x);     printf("%s\n", s.c_str());   }   return 0; }
include <bitset> #include <deque> #include <iomanip> #include <iostream> #include <queue> #include <set> #include <sstream> #include <stack>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>   using namespace std; 
typedef vector<int> vi; typedef vector<vi> vvi; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<string> vs;  typedef long long LL;            typedef unsigned long long ULL; typedef unsigned uint;  const double pi = acos(-1.0);  const double eps = 1e-11;      const int MAXI = 0x7fffffff; const int dx[] = {1, 0, -1, 0}; const int dy[] = {0, 1, 0, -1}; const char dz[] = "SENW"; struct debugger {   template <typename T> debugger &operator,(const T &v) {     cerr << v << " ";     return *this;   } } dbg;  void debugarr(int *arr, int n) {   cout << "[";   for (int i = 0; i < n; i++)     cout << arr[i] << " ";   cout << "]" << endl; }  char str[50];  bool containszero(int l) {   int i = 0;   while (str[i] == '0') {     i++;   }   while (i < l) {     if (str[i] == '0')       return true;     i++;   }   return false; } 
int main() {    int n, i, j, k, l, m, t, s = 0, d;   scanf("%d", &t);   ;   int c = 1;   while (t--) {     cin >> str;     bool p = 0;     l = strlen(str);     if (!containszero(l)) {       for (i = l - 1; i > 0; i--) {         if (str[i] < str[i - 1]) {           for (j = i; j < l; j++)             str[j] = '9';           str[i - 1] = (char)(str[i - 1] - 1);         }       }     }     while (containszero(l)) {       for (i = 0; i < l; i++) {         if (str[i] == '0') {           for (j = i; j < l; j++)             str[j] = '9';           str[i - 1] = (char)(str[i - 1] - 1);           break;         }       }       if (!containszero(l)) {         for (i = l - 1; i > 0; i--) {           if (str[i] < str[i - 1]) {             for (j = i; j < l; j++)               str[j] = '9';             str[i - 1] = (char)(str[i - 1] - 1);           }         }       }     }     printf("Case #%d: ", c++);     i = 0;     while (str[i] == '0') {       i++;       continue;     }     while (i < l) {       cout << str[i++];     }     printf("\n");   }   return (0); }
#include <bits/stdc++.h> #include <bitset> #include <deque> #include <iomanip> #include <iostream> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>   using namespace std; 
typedef double dbl; typedef vector<int> vi; typedef vector<vi> vvi; typedef pair<int, int> pii; typedef vector<pii> vii; typedef vector<string> vs;  typedef long long LL;            typedef unsigned long long ULL;     struct debugger {};  void do_voimgr_fct(int *arr, int n) {   printf("[");   for (int i = 0; i < n; i++)     printf("%d ", arr[i]);   printf("]\n"); }  char str[50];  bool containszero(int l) {   int i = 0;   while (str[i] == '0')     i++;    while (i < l) {     if (str[i] == '0')       return 1;     i++;   }   return false; } inline void zjmavechzn(int &i, int &l, int &j) {   j = i;   while (j < l) {     str[j] = '9';     j++;   } }  
int main() {    int n, i, j, k, l, m, t, s = 0, d;   cin >> t;   ;   int c = 1;   while (t--) {     cin >> str;     int p = 0;     l = strlen(str);     if (!containszero(l)) {       for (i = l - 1; i > 0; i--) {         if (str[i] < str[i - 1]) {           for (j = i; j < l; j++)             str[j] = '9';           str[i - 1] = (char)(str[i - 1] - 1);         }       }     }     while (containszero(l)) {       for (i = 0; i < l; i++) {         if (str[i] == '0') {           for (j = i; j < l; j++)             str[j] = '9';           str[i - 1] = (char)(str[i - 1] - 1);           break;         }       }       if (!containszero(l)) {         for (i = l - 1; i > 0; i--) {           if (str[i] < str[i - 1]) {             zjmavechzn(i, l, j);             str[i - 1] = (char)(str[i - 1] - 1);           }         }       }     }     printf("Case #%d: ", c++);     i = 0;     while (str[i] == '0') {       i++;       continue;     }     while (i < l) {       printf("%c", str[i++]);     }     printf("\n");   }   return (0); }
#include <bits/stdc++.h> #include <fstream> #include <iostream> #include <stdio.h>  using namespace std; 
ofstream fout;  int solve(int cc) {   int ret_val = 1;   string str;   cin >> str;   int p = 0;   while (p < str.length() - 1) {     if (str[p] > str[p + 1]) {       break;     }     p++;   }   if (p == str.length() - 1) {     int ret_val = 1;     fout << "Case #" << cc << ": " << str << endl;     return ret_val;   }   while (p > 0 && str[p - 1] == str[p]) {     p--;   }   str[p] = str[p] - 1;   for (int i = p + 1; i < str.length(); i++) {     str[i] = '9';   }   if (str[0] == '0') {     str.erase(str.begin());   }   fout << "Case #" << cc << ": " << str << endl;   return ret_val; } 
int main() {   int ret_val = 0;   ios::sync_with_stdio(true);   fout.open("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_18_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/Thanabhat/outer_temp/Thanabhat/A-small-practice_transformation.out");   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_18_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/Thanabhat/A-small-practice.in",           "r", stdin);   int tt;   scanf("%d ", &tt);   for (int i = 0; i < tt; i++) {     solve(i + 1);   }   return ret_val; }
#include <bits/stdc++.h>  using namespace std;  
bool check(int n) {   while (n > 0) {     if (n % 10 < n / 10 % 10) {       return false;     }     n /= 10;   }   return true; }  
int main() {   freopen("in", "r", stdin);   freopen("out", "w", stdout);   int tt;   scanf("%d", &tt);   for (int cc = 1; cc <= tt; ++cc) {     printf("Case #%d: ", cc);     int n;     scanf("%d", &n);     int ans = n;     while (!check(ans)) {       --ans;     }     printf("%d\n", ans);   } }
#include <algorithm> #include <bitset> #include <cstdio> #include <cstring> #include <iostream> #include <map> #include <set> #include <string> #include <vector>  using namespace std;
const long long inf = 1000000000000000000LL;  vector<long long> res;  void rec(long long value, long long d) {   if (value >= inf) {     return;   }   res.push_back(value);   for (long long i = d; i <= 9; ++i) {     if (value < inf / 10LL) {       rec(value * 10LL + i, i);     }   } }  void solve(int test) {   long long n;   cin >> n;    int index = upper_bound(res.begin(), res.end(), n) - res.begin() - 1;   printf("Case #%d: %lld\n", test, res[index]); }  
int main() {   freopen("input.txt", "r", stdin);   freopen("output.txt", "w", stdout);    for (int i = 1; i <= 9; ++i) {     rec(i, i);   }    sort(res.begin(), res.end());   cerr << "Res size: " << res.size() << endl;    int t;   scanf("%d", &t);   for (int i = 0; i < t; ++i) {     solve(i + 1);     cerr << i + 1 << ": " << clock() << endl;   }    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstring> #include <ctime> #include <fstream> #include <iomanip> #include <iostream> #include <list> #include <map> #include <numeric> #include <set> #include <stdlib.h> #include <string> #include <utility> #include <vector>  using namespace std;
typedef long long ll; typedef long long LL; typedef pair<int, int> PII; typedef unsigned long long ull; typedef vector<int> vi; typedef long double LD;  const long long inf = 1000000000000000000LL;  vector<long long> res;  void rec(long long value, long long d) {   if (value >= inf) {     return;   }   res.push_back(value);   for (LL i = d; i <= 9; ++i) {     if (value < inf / 10LL) {       rec(value * 10LL + i, i);     }   } }  void solve(int test) {   LL n;   cin >> n;    int index = upper_bound(res.begin(), res.end(), n) - res.begin() - 1;   printf("Case #%d: %lld\n", test, res[index]); }  
int main() {   int ret_val = 0;   ios::sync_with_stdio(true);   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_19_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/sdya/A-small-practice.in",           "r", stdin);   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_19_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/sdya/outer_temp/sdya/A-small-practice_transformation.out",           "w", stdout);   for (int i = 1; i <= 9; ++i) {     rec(i, i);   }   sort(res.begin(), res.end());   cerr << "Res size: " << res.size() << endl;   int t;   scanf("%d", &t);   for (int i = 0; i < t; ++i) {     solve(i + 1);     cerr << i + 1 << ": " << clock() << endl;   }   return ret_val; }
#include <algorithm> #include <bitset> #include <cstdio> #include <cstring> #include <iostream> #include <map> #include <set> #include <stdio.h> #include <string> #include <vector>  using namespace std; 
const long long inf = 1000000000000000000LL;  vector<long long> tc;  void rec(long long value, long long d) {   if (value >= inf)     return;    tc.push_back(value);   {     long long i = d;     while (i <= 9) {       if (value < inf / 10LL) {         rec(value * 10LL + i, i);       }       ++i;     }   } }  void solve(int test) {   long long n;   scanf("%lld ", &n);    int index = upper_bound(tc.begin(), tc.end(), n) - tc.begin() - 1;   printf("Case #%d: %lld\n", test, tc[index]); }  inline void ihxtjtctqe(int &i) {   rec(i, i);   ++i; }  inline void uflzynlqvx(int &get) {   int i = 0;   while (i < get) {     solve(i + 1);     cerr << i + 1 << ": " << clock() << endl;     ++i;   } }  
int main() {   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_19_Usenix_RF_1.0_True_MCTS_Classic_True/try/sdya/A-small-practice.in",           "r", stdin);   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_19_Usenix_RF_1.0_True_MCTS_Classic_True/try/sdya/outer_temp/sdya/A-small-practice_transformation.out",           "w", stdout);    int i;   {     i = 1;     while (i <= 9)       ihxtjtctqe(i);   }    sort(tc.begin(), tc.end());   cerr << "Res size: " << tc.size() << endl;    int get;   scanf("%d", &get);   uflzynlqvx(get);    return 0; }
#include <bits/stdc++.h> #include <bitset> #include <cctype> #include <climits> #include <complex> #include <cstdio> #include <fstream> #include <iomanip> #include <iostream> #include <list> #include <numeric> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> using namespace std; 
typedef long long int lli;  int tc;  
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_1_Usenix_RF_1.0_True_MCTS_Classic_True/try/4yn/outer_temp/4yn/A-small-practice_transformation.out",           "w", stdout);   scanf("%d ", &tc);   int c;   for (c = 1; c <= tc; c++) {     int n, x;     scanf("%d %d ", &n, &x);     priority_queue<int> solve;     solve.push(n);     int y, z;     int i;     {       i = 0;       while (i < x) {         int c = solve.top() - 1;         solve.pop();         y = c / 2 + (c % 2);         z = c / 2;         solve.push(y);         solve.push(z);         i++;       }     }     printf("Case #%d: %d %d\n", c, y, z);   }   return 0; }
#include <bits/stdc++.h> #include <cmath> #include <complex> #include <cstdio> #include <cstring> #include <ctime> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <queue> #include <set> #include <sstream> #include <stack> #include <string> #include <unordered_map> using namespace std; 
typedef long double LD; typedef unsigned long long ull; typedef long long LL; typedef pair<int, int> ii; typedef pair<LL, LL> pll; typedef vector<int> vi; typedef vector<vi> vvi; typedef vector<LL> vll; typedef set<int> si;  int t, n, c;  inline void pqfnsgfqya(priority_queue<int, vi> &q, int &i) {   int x = q.top();   q.pop();   if (x / 2)     q.push(x / 2);   if (x / 2 - (x % 2 == 0))     q.push(x / 2 - (x % 2 == 0));   ++i; }  inline void wiywqplueg(priority_queue<int, vi> &q) {   int i = (1);   while (i <= (int)(c - 1))     pqfnsgfqya(q, i); }  inline void jfpsefeqte(int &j) {   scanf("%d%d", &n, &c);    priority_queue<int, vi> q;   q.push(n);   wiywqplueg(q);    int x = q.top();   int y = max(x / 2, x / 2 - (x % 2 == 0)),       z = min(x / 2, x / 2 - (x % 2 == 0));   printf("Case #%d: %d %d\n", j, y, z);   ++j; }  inline void uymijmmqdy() {   int j = (1);   for (; j <= (int)(t);)     jfpsefeqte(j); }  
int main() {    freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_2_Usenix_RF_1.0_True_MCTS_Classic_True/try/KhaleD/outer_temp/KhaleD/A-small-practice_transformation.out",           "w", stdout);   scanf("%d", &t);   uymijmmqdy();   return 0; }  
#include <cstdio> #include <functional> #include <iostream> #include <queue> using namespace std; 
priority_queue<int> Q, E; int n, k;  
int main() {   freopen("C-small-1-attempt0.in", "r", stdin);   freopen("C-small-1-attempt0.out", "w", stdout);   int c, t, i, x, y, z;   scanf("%d", &t);   for (c = 0; c < t; c++) {     scanf("%d %d", &n, &k);     Q = E;     Q.push(n);     for (i = 0; i < k; i++) {       x = Q.top();       Q.pop();       y = x / 2;       z = (x - 1) / 2;       Q.push(y);       Q.push(z);     }     printf("Case #%d: %d %d\n", c + 1, y, z);   }   return 0; }
#include <bits/stdc++.h> using namespace std; 
ifstream fin("C-small1.in"); ofstream fout("C-small1.out");  void solve() {   int k, n;   fin >> k >> n;   map<int, int> ct;   ct[k] = 1;   for (int i = 1; i < n; i++) {     auto p = *(ct.rbegin());     if (p.second == 1)       ct.erase(p.first);     else       ct[p.first]--;      ct[(p.first - 1) / 2]++;     ct[p.first - 1 - (p.first - 1) / 2]++;   }   fout << ct.rbegin()->first / 2 << ' ' << (ct.rbegin()->first - 1) / 2 << '\n'; }  
int main() {   int t;   fin >> t;   for (int i = 0; i < t; i++)     fout << "Case #" << i + 1 << ": ", solve(); }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <deque> #include <fstream> #include <functional> #include <iostream> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> #include <vector> using namespace std;  
const int MOD = 1000000007; const double EPS = 1e-9;  void solve() {   int k, n;   cin >> k >> n;   map<int, int> ct;   ct[k] = 1;   for (int i = 1; i < n; i++) {     auto p = *(ct.rbegin());     if (p.second == 1) {       ct.erase(p.first);     } else       ct[p.first]--;      ct[(p.first - 1) / 2]++;     ct[p.first - 1 - (p.first - 1) / 2]++;   }   cout << ct.rbegin()->first / 2 << ' ' << (ct.rbegin()->first - 1) / 2 << '\n'; }  
int main() {    int get;   cin >> get;   {     int i = 0;     for (; i < get;) {       cout << "Case #" << i + 1 << ": ", solve();       i++;     }   }   return 0; }
#include <cstdio> #include <iomanip> #include <iostream> #include <map> #include <string> #include <vector>  using namespace std; 
struct node {   long long u, v;   node(int _u = 0, int _v = 0) : u(_u), v(_v) {}   bool operator<(const node &r) const { return u < r.u; } };  void get() {   long long n, k;   cin >> n >> k;   map<long long, long long> f;   f[n] = 1;   long long sum = 0;   long long l = (n - 1) / 2, r = n / 2;   while (sum < k) {     long long u = f.rbegin()->first, v = f.rbegin()->second;     f.erase(u);     sum += v;     l = (u - 1) / 2;     r = u / 2;     f[l] += v;     f[r] += v;   }   cout << r << ' ' << l << endl; }  
int main() {    int q;   cin >> q;   for (int i = 1; i <= q; ++i) {     cout << "Case #" << i << ": ";     get();   }   return 0; }
#include <algorithm> #include <cstdio> #include <cstring> #include <iostream> #include <map> #include <queue> using namespace std; 
int main() {   int tt;    cin >> tt;    for (int t = 1; t <= tt; ++t) {     long long n, k, y, z;     map<long long, long long> m;     queue<long long> q;     cin >> n >> k;      q.push(n);     m[n] = 1;      while (k > 0) {       long long c = q.front();       q.pop();       y = c / 2;       z = (c - 1) / 2;       k -= m[c];       if (m.find(y) == m.end())         q.push(y);       m[y] += m[c];       if (m.find(z) == m.end())         q.push(z);       m[z] += m[c];     }      cout << "Case #" << t << ": " << y << " " << z << endl;   }    return 0; }
#include <bits/stdc++.h> #include <set> #include <vector> using namespace std;
typedef vector<vector<int>> vvi; typedef long double LD; typedef set<int> si; typedef pair<int, int> PII; typedef vector<int> VI; typedef vector<PII> vii;  inline void jfadbxftqn(std::ofstream &T, int &b) {   int first = b / 2;   T << b - first << " " << first << endl; }  inline void dpuwhsrucz(std::ofstream &T) { T << "0 0" << endl; }  inline void aunqucitpu(priority_queue<int> &k, std::ofstream &T) {   int b = k.top();   if (b == 0)     T << "0 0" << endl;   else     jfadbxftqn(T, b); }  
int main() {   cin.sync_with_stdio(0);   ofstream T("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_7_Usenix_RF_1.0_True_MCTS_Classic_True/okaduki/bennikartefla/outer_temp/bennikartefla/A-small-practice_transformation.out");   int n;   cin >> n;   {     int i = (0);     while (i < (n)) {       priority_queue<int> k;       int y, q;       cin >> y >> q;       T << "Case #" << i + 1 << ": ";       k.push(y - 1);       for (int a = (0); a < (q - 1); a++) {         if (k.empty())           break;         else {           int b = k.top();           k.pop();           if (b == 0)             continue;           int want = b / 2;           int first = want;           if (first != 0)             k.push(first - 1);           int tc = b - want;           k.push(tc - 1);         }       }       if (k.empty())         dpuwhsrucz(T);       else         aunqucitpu(k, T);       i++;     }   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <math.h> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std; 
ifstream fin;  const int mod = 1000000007; const long double PI = 3.1415926535897932384626433832795;  const int INF = ~(1 << 31); const double pi = acos(-1);  inline void tfggeqyqtl(priority_queue<int> &k) {   int at = k.top();   if (at == 0)     printf("0 0\n");   else {     int first = at / 2;     printf("%d %d\n", at - first, first);   } }  
int main() {   fin.open("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_7_Usenix_RF_1.0_True_MCTS_Classic_True/kuzphi/bennikartefla/A-small-practice.in");    int n;   fin >> n;   int i;   {     i = (0);     while (i < (n)) {       priority_queue<int> k;       int m, q;       fin >> m >> q;       printf("Case #%d: ", i + 1);       k.push(m - 1);       int a;       for (a = (0); a < (q - 1); a++) {         if (k.empty())           break;         else {           int at = k.top();           k.pop();           if (at == 0)             continue;           int want = at / 2;           int first = want;           if (first != 0)             k.push(first - 1);           int second = at - want;           k.push(second - 1);         }       }       if (k.empty())         printf("0 0\n");       else         tfggeqyqtl(k);       i++;     }   }   return 0; }
#include <bits/stdc++.h> using namespace std; 
typedef long long ll; typedef long long LL; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<int> vi; void open() {   freopen("D:/OneDrive/Code/GCJ/C-small-1-attempt0.in", "r", stdin);   freopen("D:/OneDrive/Code/GCJ/out.txt", "w", stdout); }  
int main(void) {   open();   int tc;   scanf("%d", &tc);   for (int ct = 1; ct <= tc; ct++) {     int n, k;     scanf("%d", &n);     scanf("%d", &k);     priority_queue<int> pq;     pq.push(n);      printf("Case #%d: ", ct);      while (k--) {       int top = pq.top();       pq.pop();       int mid = top - 1;       int l, r;       l = mid / 2;       r = (mid + 1) / 2;       if (k == 0) {         printf("%d %d\n", r, l);       }       if (l) {         pq.push(l);       }        if (r) {         pq.push(r);       }     }      cerr << "Test " << ct << " done \n";   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> using namespace std; 
const int mod = 1000000007; const int MOD = 1000000007;  typedef long long LL; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<int> vi; void open() {}  inline void stbvwtfyuh(int &b) {   int n, k;   cin >> n;   cin >> k;   priority_queue<int> pq;   pq.push(n);    printf("Case #%d: ", b);    while (k--) {     int top = pq.top();     pq.pop();     int mid = top - 1;     int ans, r;     ans = mid / 2;     r = (mid + 1) / 2;     if (k == 0) {       printf("%d %d\n", r, ans);     }     if (ans) {       pq.push(ans);     }      if (r) {       pq.push(r);     }   }    cerr << "Test " << b << " done \n";   b++; }  inline void mksbmfiulo(int &tc) {   int b = 1;   while (b <= tc)     stbvwtfyuh(b); }  
int main(void) {   open();   int tc;   cin >> tc;   mksbmfiulo(tc);   return 0; }
#include <bits/stdc++.h> #include <stdio.h> using namespace std; 
using VI = vector<int>; using VVI = vector<VI>; using PII = pair<int, int>; using LL = long long; using VL = vector<LL>; using VVL = vector<VL>; using PLL = pair<LL, LL>; using VS = vector<string>; template <class S, class T> istream &operator>>(istream &is, pair<S, T> &p) {   return is >> p.first >> p.second; } template <class S, class T> ostream &operator<<(ostream &os, const pair<S, T> &p) {   return os << p.first << " " << p.second; } template <class T> void maxi(T &x, T y) {   if (x < y)     x = y; }  const double EPS = 1e-10; const double PI = acos(-1.0); const LL MOD = 1e9 + 7;  
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_9_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/okaduki/outer_temp/okaduki/A-small-practice_transformation.out",           "w", stdout);    freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_9_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/okaduki/A-small-practice.in",           "r", stdin);    cin.tie(0);    int n;   cin >> n;   for (int t_ = (1); t_ < (n + 1); ++t_) {     LL N, K;     cin >> N >> K;      vector<bool> xs(N + 2);     xs[0] = xs[N + 1] = true;     tuple<LL, LL, LL> ans;     int k;     for (k = (0); k < (K); ++k) {       tuple<LL, LL, LL> mx(-1, -1, -1);       int i;       for (i = (0); i < (N + 2); ++i) {         if (xs[i])           continue;         LL l, r;         for (l = i - 1; !xs[l]; --l)           ;         for (r = i + 1; !xs[r]; ++r)           ;         l = i - l - 1;         r = r - i - 1;         tuple<LL, LL, LL> t(min(l, r), max(l, r), -i);         maxi(mx, t);       }       xs[-get<2>(mx)] = true;       ans = mx;     }     printf("Case #%d: %lld %lld\n", t_, get<1>(ans), get<0>(ans));   }    return 0; }
#include <algorithm> #include <climits> #include <cmath> #include <cstdio> #include <cstring> #include <iostream> #include <iterator> #include <map> #include <queue> #include <set> #include <stack> #include <stdio.h> #include <string> #include <unordered_map> #include <utility> #include <vector>   using namespace std;
using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  inline void fygmwbzbpm(ll &vcul_Var, ll &b, ll &t) {   vcul_Var = b;   b = t; }  ll do_lloff_fct(ll vcul_Var, ll b) {   ll t;   while ((t = vcul_Var % b) != 0)     fygmwbzbpm(vcul_Var, b, t);   return b; }  bool do__Bocux_fct(int nzdi_Var, ll jwel_Var) {   return (jwel_Var >> nzdi_Var) & 1; }  int do_inttsv_fct(ll jwel_Var) {   int ans = 0;   {     int nzdi_Var = 0;     while (nzdi_Var < 64) {       if (do__Bocux_fct(nzdi_Var, jwel_Var))         ++ans;       ++nzdi_Var;     }   }   return ans; }  int do_intoay_fct(ll jwel_Var) {   int nzdi_Var = 0;   while (nzdi_Var < 64)     if (do__Bocux_fct(nzdi_Var++, jwel_Var))       return nzdi_Var - 1;   return -1; }  
int main() {    int t;   scanf("%d ", &t);   for (int uhbi_Var = 1; uhbi_Var <= t; ++uhbi_Var) {     ll n, k;     scanf("%lld %lld ", &n, &k);     ll s = 0, nzdi_Var = -1;     while (s < k)       ++nzdi_Var, s += 1ll << nzdi_Var;     ll C = 1ll << nzdi_Var;     ll left = n - s + C;     ll pos = k - s + C;     ll wffl_Var = left / (s - C + 1);     ll high = left % (s - C + 1);     if (pos <= high)       wffl_Var += 1;     printf("Case #%d: %lld %lld\n", uhbi_Var, wffl_Var / 2, (wffl_Var - 1) / 2);   }   return 0; }
#include <bits/stdc++.h> using namespace std; 
typedef long long LL;  int main() {   freopen("123.in", "r", stdin);   freopen("123.out", "w", stdout);   int T, cas = 0;   cin >> T;   while (T--) {     LL n, k;     cin >> n >> k;     int d = 0;     for (LL v = 1; v <= k; v <<= 1)       d++;     printf("Case #%d: ", ++cas);     LL base = 1 << d;     if (n < base) {       puts("0 0");       continue;     }     LL md = (n - (base - 1)) % base;     LL lx = (n - (base - 1)) / base, rx = lx;     int id = k - (1 << (d - 1)) + 1;     if (id <= md)       rx++;     if (id + (1 << (d - 1)) <= md)       lx++;     printf("%lld %lld\n", rx, lx);   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cstdio> #include <cstring> #include <stdio.h> #include <vector> using namespace std;  
int main() {    int t, eeti_Var = 0;   scanf("%d ", &t);   while (t--) {     long long ans, s;     scanf("%lld %lld ", &ans, &s);     int d = 0;     for (long long tt = 1; tt <= s; tt <<= 1)       d++;     printf("Case #%d: ", ++eeti_Var);     long long base = 1 << d;     if (ans < base) {       puts("0 0");       continue;     }     long long md = (ans - (base - 1)) % base;     long long lx = (ans - (base - 1)) / base, rx = lx;     int id = s - (1 << (d - 1)) + 1;     if (id <= md)       rx++;     if (id + (1 << (d - 1)) <= md)       lx++;     printf("%lld %lld\n", rx, lx);   }   return 0; }
#include <bits/stdc++.h> #include <fstream> #include <set> #include <utility> #include <vector> using namespace std; 
const int mod = 1000000007;  ifstream fin;  typedef unsigned long long ull; typedef long double LD; typedef pair<int, int> PII; typedef vector<int> vi; typedef vector<int> VI; typedef set<int> si; typedef vector<vector<int>> vvi; typedef long long LL;  
int main() {   fin.open("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_12_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/jiian/A-small-practice.in");    int get, cas = 0;   fin >> get;   for (; get--;) {     LL n, k;     fin >> n >> k;     int d = 0;     LL v;     {       v = 1;       while (v <= k) {         d++;         v <<= 1;       }     }     printf("Case #%d: ", ++cas);     LL base = 1 << d;     if (n < base) {       puts("0 0");       continue;     }     LL md = (n - (base - 1)) % base;     LL lx = (n - (base - 1)) / base, rx = lx;     int id = k - (1 << (d - 1)) + 1;     if (id <= md) {       rx++;     }     if (id + (1 << (d - 1)) <= md)       lx++;      printf("%lld %lld\n", rx, lx);   }   return 0; }
#include <algorithm> #include <cstdio> #include <cstring> #include <queue> using namespace std; 
int main(void) {   int t;   scanf("%d", &t);   for (int tt = 1; tt <= t; tt++) {      int n, k;     priority_queue<int> q;     scanf("%d%d", &n, &k);     q.push(n);     while (--k) {       int x = q.top();       q.pop();       q.push(x / 2);       q.push((x - 1) / 2);     }      int v = q.top();     printf("Case #%d: %d %d\n", tt, v / 2, (v - 1) / 2);   }   return 0; }  
#include <algorithm> #include <bits/stdc++.h> #include <cassert> #include <climits> #include <complex> #include <cstdio> #include <cstring> #include <ctime> #include <deque> #include <functional> #include <iomanip> #include <iostream> #include <map> #include <queue> #include <set> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> #include <vector> using namespace std;
const int mod = 1000000007; typedef unsigned long long ull; typedef vector<vector<int>> vvi; typedef long long ll; typedef pair<int, int> pii; typedef pair<int, int> PII; typedef vector<int> VI; typedef long double LD; typedef set<int> si;  
int main(void) {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_13_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/iPeter/A-small-practice.in", "r", stdin);    freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_13_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/iPeter/outer_temp/iPeter/A-small-practice_transformation.out",           "w", stdout);    int solve;   cin >> solve;   for (int N = 1; N <= solve; N++) {      int n, k;     priority_queue<int> q;     cin >> n >> k;     q.push(n);     while (--k) {       int x = q.top();       q.pop();       q.push(x / 2);       q.push((x - 1) / 2);     }      int v = q.top();     cout << "Case #" << N << ": " << v / 2 << " " << (v - 1) / 2 << "\n";   }   return 0; }
#include <bits/stdc++.h> #include <iostream> #include <stdio.h>  using namespace std; 
typedef vector<int> vi; typedef long long ll; typedef long double ld;  const int inf = 1e9 + 7; const int maxN = 1e6 + 5;  int i, cnt[5];  void solve(int ans, int k) {   if (ans == k) {     printf("0 0\n");     return;   }    int pot = 1;    int a = ans, b = 0;   cnt[0] = 1;   cnt[1] = 0;   while (pot < k) {     int newA = 0, newB = 0;     newA = a / 2;     cnt[2] = cnt[0];     if (a - newA - 1 != newA && newA != 1) {       cnt[3] = cnt[0];       newB = a - newA - 1;     } else {       if (a != 2)         cnt[2] += cnt[0];     }      if (b > 1) {       if (b % 2 == 0) {         if (b != 2) {           newB = b - (b / 2) - 1;           cnt[3] += cnt[1];         }         cnt[2] += cnt[1];       } else {         cnt[3] += cnt[1] * 2;       }     } else {       cnt[2] += cnt[1];       if (a != ans)         if (b != 0)           k++;     }      a = newA;     b = newB;     cnt[0] = cnt[2];     cnt[1] = cnt[3];     cnt[2] = cnt[3] = 0;       k -= pot;     pot *= 2;   }    if (k > cnt[0])     a = b;   printf("%d %d\n", a / 2, max(0, a - (a / 2) - 1)); }  
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_16_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/Mucosolvan/A-small-practice.in",           "r", stdin);    freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_16_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/Mucosolvan/outer_temp/Mucosolvan/A-small-practice_transformation.out",           "w", stdout);    int ret_val = 0;    cin >> i;   for (int x = (1); x <= ((i)); ++x) {     int ans, k;     cin >> ans >> k;     printf("Case #%d: ", x);     solve(ans, k);   }   return ret_val; }
#include <bitset> #include <cctype> #include <complex> #include <deque> #include <fstream> #include <iomanip> #include <iostream> #include <math.h> #include <queue> #include <set> #include <sstream> #include <stack> #include <unordered_map>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>   using namespace std;
const int mod = 1000000007;  ofstream fout;  typedef long long td_ll; typedef vector<int> vi; typedef vector<vi> vvi; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<string> vs;  typedef long long LL;           typedef unsigned long long ULL;  typedef unsigned uint;    struct debugger {   template <typename T> debugger &solve(const T &v) {     cerr << v << " ";     return *this;   } };  void get(int *arr, int n) {   fout << "[";   for (int i = 0; i < n; i++) {     fout << arr[i] << " ";   }   fout << "]" << endl; }  long long pow2(int a, long long int b) {   td_ll x = 1, y = a;   while (b > 0) {     if (b % 2 == 1) {       x = (x * y);     }     y = (y * y);     b /= 2;   }   return x; } LL dist[2]; 
int main() {   fout.open("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_17_Usenix_RF_1.0_True_MCTS_Classic_True/Thanabhat/lazyBit/outer_temp/lazyBit/A-small-practice_transformation.out");     int j, q, m, t, s = 0, d;   LL n, k, x, x1, level, used, prevLevel, rem;   cin >> t;   ;   int c = 1;   for (; t--;) {     cin >> n;     cin >> k;     x = n;     x1 = n;     level = log2(k);     dist[0] = 1;     dist[1] = 0;     LL tempx, tempx1;     vector<LL> tempdist(2);     {       int i = 1;       while (i <= level) {         tempdist[0] = 0;         tempdist[1] = 0;         if (x & 1) {           tempx = x / 2;           tempx1 = tempx;           tempdist[0] = 2 * dist[0];         } else {           tempx = (x - 1) / 2;           tempx1 = tempx + 1;           tempdist[0] = dist[0];           tempdist[1] = dist[0];         }          if (dist[1] > 0) {           if (!(x1 & 1)) {             tempx = (x1 - 1) / 2;             tempx1 = x1 / 2;             tempdist[0] += dist[1];             tempdist[1] += dist[1];           } else {             tempx1 = x1 / 2;             tempdist[1] += 2 * dist[1];           }         }         x = tempx;         x1 = tempx1;         dist[0] = tempdist[0];         dist[1] = tempdist[1];         i++;       }     }     prevLevel = pow2(2, level) - 1;     rem = k - prevLevel;      if (rem > dist[1]) {       used = x;     } else {       used = x1;     }      if (used & 1) {       fout << "Case #" << c++ << ": " << used / 2 << " " << used / 2 << endl;     } else {       fout << "Case #" << c++ << ": " << used / 2 << " " << (used - 1) / 2            << endl;     }   }   return (0); }
#include <iostream>  using namespace std; 
int solve(int cc) {   long long n, k, t = 0, onell = 1LL;   cin >> n >> k;   while (k > 0) {     n -= (onell << t);     if (k > (onell << t)) {       k -= (onell << t);       t++;     } else {       break;     }    }   long long solmax = 0, solmin = 0;   if (n > 0) {     long long tt = (onell << (t + 1));     long long ttt = n / tt;     long long tttt = n % tt;     if (tttt >= k) {       solmax = ttt + 1;     } else {       solmax = ttt;     }     tttt -= (tt / 2);     if (tttt >= k) {       solmin = ttt + 1;     } else {       solmin = ttt;     }   }   cout << "Case #" << cc << ": " << solmax << " " << solmin << endl;   return 1; }  
int main() {   int t;   cin >> t;   for (int i = 0; i < t; i++) {     solve(i + 1);   }   return 0; }
#include <bits/stdc++.h> #include <iostream> #include <utility>  using namespace std;
typedef pair<int, int> pii; typedef double dbl;  int do_intyyj_fct(int cc) {   int ret_val = 1;   long long n, k, t = 0, onell = 1LL;   cin >> n >> k;   while (k > 0) {     n -= (onell << t);     if (k > (onell << t)) {       k -= (onell << t);       t++;     } else {       break;     }    }   long long solmax = 0, solmin = 0;   if (n > 0) {     long long tt = (onell << (t + 1));     long long ttt = n / tt;     long long tttt = n % tt;     if (tttt >= k) {       solmax = ttt + 1;     } else {       solmax = ttt;     }     tttt -= (tt / 2);     if (tttt >= k) {       solmin = ttt + 1;     } else {       solmin = ttt;     }   }   cout << "Case #" << cc << ": " << solmax << " " << solmin << endl;   return ret_val; }  
int main() {   int ret_val = 0;   int t;   cin >> t;   for (int i = 0; i < t; i++) {     do_intyyj_fct(i + 1);   }   return ret_val; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cctype> #include <cstdio> #include <cstdlib> #include <cstring> #include <fstream> #include <iomanip> #include <iostream> #include <math.h> #include <set> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <utility> #include <vector>  using namespace std;
struct E {   int l, r;   E(int nl, int nr) : l(nl), r(nr) {}   bool operator<(const E &o) const {     int v = r - l;     int ov = o.r - o.l;     if (v / 2 != ov / 2) {       return v / 2 > ov / 2;     }     if ((v + 1) / 2 != (ov + 1) / 2) {       return (v + 1) / 2 > (ov + 1) / 2;     }     return l < o.l;   } };  
int main() {    freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_18_Usenix_RF_1.0_True_MCTS_Classic_True/try/fragusbot/outer_temp/fragusbot/A-small-practice_transformation.out",           "w", stdout);   int tt;   scanf("%d", &tt);   int cc;   for (cc = 1; cc <= tt; ++cc) {     printf("Case #%d: ", cc);     int n, k;     scanf("%d %d", &n, &k);     set<E> ss = {{0, n + 1}};     while (k-- > 1) {       int l = ss.begin()->l;       int get = ss.begin()->r;       ss.erase(ss.begin());       int s = (l + get) / 2;       if (s - l - 1 >= 1) {         ss.emplace(l, s);       }       if (get - s - 1 >= 1) {         ss.emplace(s, get);       }     }     int ans = ss.begin()->r - ss.begin()->l;     printf("%d %d\n", (ans + 1) / 2 - 1, ans / 2 - 1);   }   return 0; }
#include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cstdio> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iostream> #include <iterator> #include <list> #include <math.h> #include <queue> #include <set> #include <stdio.h> #include <stdlib.h> using namespace std; 
const long double PI = 3.1415926535897932384626433832795; const double eps = 1e-9;  inline bool jkohlevzih() {   printf("IMPOSSIBLE\n");   return true;   return false; }  void get() {   string s;   int fsize;   cin >> s >> fsize;    int flips[1005] = {}, res = 0, i = 0;   for (char c : s) {     if (i >= fsize) {       res -= flips[i - fsize];     }     int now = (c == '+');     if (i <= s.size() - fsize && (now + res) % 2 == 0) {       flips[i] = 1;     }     res += flips[i];     i++;     if ((now + res) % 2 == 0) {       if (jkohlevzih()) {         return;       }     }   }   res = 0;   for (int a : flips)     res += a;   printf("%d\n", res); }  
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_4_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/sammyMaX/A-small-practice.in",           "r", stdin);   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_4_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/sammyMaX/outer_temp/sammyMaX/A-small-practice_transformation.out",           "w", stdout);   cin.tie(0);   int t;   cin >> t;   {     int i = 0;     while (i < t) {       printf("Case #%d: ", i + 1), get();       i++;     }   }   return 0; }
#include <bits/stdc++.h> #include <bitset> #include <cmath> #include <cstdio> #include <deque> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <queue> #include <sstream> #include <stack> #include <stdio.h> #include <string> #include <unordered_map> #include <utility> #include <vector>  using namespace std; 
typedef long long ll; typedef set<int> si; typedef unsigned long long ull; typedef vector<int> vi; typedef long double LD; typedef vector<vector<int>> vvi;  void get() {   char s[1000];   int k;   cin >> s >> k;   int len = (int)strlen(s);   int ans = 0;   for (int solve = 0; solve <= len - k; ++solve) {     if (s[solve] == '-') {       ans++;       int j;       for (j = solve; j < solve + k; ++j)         s[j] = (s[j] == '-' ? '+' : '-');     }   }   int solve;   for (solve = len - k + 1; solve < len; ++solve) {     if (s[solve] == '-') {       printf("IMPOSSIBLE\n");       return;     }   }   printf("%d\n", ans); }  
int main() {    int q;   cin >> q;   for (int solve = 1; solve <= q; ++solve) {     printf("Case #%d: ", solve);     get();   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cassert> #include <cctype> #include <climits> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <math.h> #include <numeric> #include <queue> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std; 
const int MAXN = 1005; ofstream fout;  typedef long long ll; typedef pair<int, int> ii; typedef pair<int, int> pii; typedef unsigned long long ull; typedef vector<int> vi;  inline void tc(int &y, std::string &s, int &i, int &res) {    for (int n = 0; n < y; ++n)     s[i + n] = (s[i + n] == '-') ? '+' : '-';   res++; }  
int main() {   ios::sync_with_stdio(false);    fout.open("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_6_Usenix_RF_1.0_True_MCTS_Classic_True/bennikartefla/WCG/outer_temp/WCG/A-small-practice_transformation.out");    int q;    cin >> q;    int t;   for (t = 1; t <= q; ++t) {     string s;     int y, res = 0;     cin >> s >> y;     for (int i = 0; i + y <= s.size(); ++i) {       if (s[i] == '-')         tc(y, s, i, res);     }     int i;     for (i = 0; i < s.size(); ++i)       if (s[i] == '-')         res = -1;      fout << "Case #" << t << ": ";     if (res == -1)       fout << "IMPOSSIBLE" << endl;     else       fout << res << endl;   }    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cstdio> #include <cstring> #include <iostream> #include <stdio.h> #include <string> #include <vector> using namespace std;
typedef long long ll; typedef long long LL;  inline void lqmldvtdap(int &t) {   string s;   int k, res = 0;   cin >> s >> k;   for (int i = 0; i + k <= s.size(); ++i) {     if (s[i] == '-') {       for (int j = 0; j < k; ++j)         s[i + j] = (s[i + j] == '-') ? '+' : '-';       res++;     }   }   for (int i = 0; i < s.size(); ++i)     if (s[i] == '-')       res = -1;    cout << "Case #" << t << ": ";   if (res == -1)     cout << "IMPOSSIBLE" << endl;   else     cout << res << endl; }  
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_6_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/WCG/outer_temp/WCG/A-small-practice_transformation.out", "w", stdout);    freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_6_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/WCG/A-small-practice.in",           "r", stdin);    int tt;    scanf("%d ", &tt);    for (int t = 1; t <= tt; ++t)     lqmldvtdap(t);    return 0; }
#include <bits/stdc++.h> using namespace std; 
using VI = vector<int>; using VVI = vector<VI>; using PII = pair<int, int>; using LL = long long; using VL = vector<LL>; using VVL = vector<VL>; using PLL = pair<LL, LL>; using VS = vector<string>; template <class S, class T> istream &operator>>(istream &is, pair<S, T> &p) {   return is >> p.first >> p.second; } template <class S, class T> ostream &operator<<(ostream &os, const pair<S, T> &p) {   return os << p.first << " " << p.second; } template <class T> void maxi(T &x, T y) {   if (x < y)     x = y; } template <class T> void operator<(T &x, T y) {   if (x > y)     x = y; }  const double EPS = 1e-10; const double PI = acos(-1.0); const LL MOD = 1e9 + 7;  
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_9_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/okaduki/outer_temp/okaduki/A-small-practice_transformation.out", "w", stdout);    freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_9_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/okaduki/A-small-practice.in",           "r", stdin);    cin.tie(0);    int r;   cin >> r;   for (int t = (1); t < (r + 1); ++t) {     string S;     cin >> S;     int K;     cin >> K;     int N = int((S).size());     VI xs(N);     for (int i = (0); i < (N); ++i)       xs[i] = S[i] == '+';      int ans = 0;     for (int i = 0; i + K <= N; ++i) {       if (!xs[i]) {         ++ans;         for (int k = (0); k < (K); ++k)           xs[i + k] = !xs[i + k];       }     }     if (accumulate(begin((xs)), end((xs)), 0) != N)       cout << "Case #" << t << ": IMPOSSIBLE" << endl;     else       cout << "Case #" << t << ": " << ans << endl;   }    return 0; }
#include <algorithm> #include <climits> #include <cmath> #include <cstdio> #include <cstring> #include <iostream> #include <iterator> #include <map> #include <queue> #include <set> #include <stack> #include <string> #include <unordered_map> #include <utility> #include <vector>   using namespace std; 
using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  ll gcd(ll a, ll b) {   ll t;   while ((t = a % b) != 0) {     a = b;     b = t;   }   return b; }  ll fast_exp(ll base, ll n, ll m) {   if (n == 0)     return 1;   ll t = fast_exp(base, n / 2, m);   if (n % 2 == 0)     return (t * t) % m;   else     return (((t * t) % m) * base) % m; }  bool is_set(int i, ll mask) { return (mask >> i) & 1; }  int count_bits(ll mask) {   int ans = 0;   for (int i = 0; i < 64; ++i)     if (is_set(i, mask))       ++ans;   return ans; }  int first_bit(ll mask) {   int i = 0;   while (i < 64)     if (is_set(i++, mask))       return i - 1;   return -1; } 
int main() {   ios::sync_with_stdio(false);   int t;   cin >> t;   for (int i = 1; i <= t; ++i) {     string s;     int k;     cin >> s >> k;     int f = 0, n = s.length();     for (int j = 0; j < n - k + 1; ++j) {       if (s[j] == '-') {         ++f;         for (int l = j; l < j + k; ++l)           s[l] = (s[l] == '+' ? '-' : '+');       }     }     for (int j = 0; j < n; ++j)       if (s[j] == '-') {         f = -1;         break;       }     cout << "Case #" << i << ": ";     if (f == -1)       cout << "IMPOSSIBLE\n";     else       cout << f << "\n";   }   return 0; }
#include <algorithm> #include <cmath> #include <cstdio> #include <cstring> using namespace std; 
int N, P; int s[200]; int r[200][200]; int b[200]; int tb[200];  int ll[200][200]; int mm[200][200];  bool dfs(int cur, int less, int most) { return 0; }  
int main(void) {   int t;   scanf("%d", &t);   for (int tt = 1; tt <= t; tt++) {     scanf("%d%d", &N, &P);     for (int i = 0; i < N; ++i)       scanf("%d", &s[i]);     for (int i = 0; i < N; ++i) {       for (int j = 0; j < P; ++j) {         scanf("%d", &r[i][j]);       }       sort(r[i], r[i] + P);       for (int j = 0; j < P; ++j) {         ll[i][j] = ceil(1.0 * r[i][j] / (1.1 * s[i]));         mm[i][j] = floor(1.0 * r[i][j] / (0.9 * s[i]));       }     }        int ans = 0;     memset(b, 0, sizeof(b));       while (1) {       bool stop = false;       for (int i = 0; i < N; ++i) {         if (b[i] >= P)           stop = true;       }       if (stop)         break;        int cur = 0;       for (int i = 0; i < N; ++i) {         cur = max(cur, ll[i][b[i]]);       }        bool ok = true;       for (int i = 0; i < N; ++i) {         for (int j = b[i]; j <= P; ++j) {           if (j == P || cur < ll[i][j]) {             b[i] = j;             ok = false;             break;           }           if (ll[i][j] > mm[i][j]) {             continue;           }           if (cur <= mm[i][j]) {             tb[i] = j;             break;           }         }       }         if (!ok)         continue;        ++ans;       for (int i = 0; i < N; ++i) {         b[i] = tb[i] + 1;       }     }      printf("Case #%d: %d\n", tt, ans);   }   return 0; }
#include <bits/stdc++.h>  using namespace std; 
typedef long long ll; typedef pair<int, int> ii; typedef pair<int, ii> iii;  ll pwr(ll base, ll p, ll mod = (1000000007LL)) {   ll ans = 1;   while (p) {     if (p & 1)       ans = (ans * base) % mod;     base = (base * base) % mod;     p /= 2;   }   return ans; }  ll gcd(ll a, ll b) {   if (b == 0)     return a;   return gcd(b, a % b); }  int n, p, arr[55][55], req[55], DP[10][1024];  int dp(int i, int mask) {   if (i == p)     return 0;   int &ans = DP[i][mask];   if (ans != -1)     return ans;   ans = dp(i + 1, mask);   for (int j = 0; j < p; j++) {     if ((mask >> j) & 1)       continue;     int z = arr[0][i] / req[0];     for (int x = z + 5; x >= z - 5 && x >= 1; x--) {       int lo1 = ceil(1LL * x * req[0] * 0.9),           hi1 = floor(1LL * x * req[0] * 1.1);       int lo2 = ceil(1LL * x * req[1] * 0.9),           hi2 = floor(1LL * x * req[1] * 1.1);       if (arr[0][i] >= lo1 && arr[0][i] <= hi1 && arr[1][j] >= lo2 &&           arr[1][j] <= hi2)         ans = max(ans, 1 + dp(i + 1, mask | (1 << j)));     }   }    return ans; }  
int main() {    ios_base::sync_with_stdio(0);   cin.tie(0);    freopen("B-small-attempt2.in", "r", stdin);   freopen("output.txt", "w", stdout);    int t, x = 1;   cin >> t;   while (t--) {      cin >> n >> p;     for (int i = 0; i < n; i++)       cin >> req[i];     for (int i = 0; i < n; i++)       for (int j = 0; j < p; j++)         cin >> arr[i][j];      if (n == 1) {       int ans = 0;       for (int i = 0; i < p; i++) {         bool ok = false;         for (int x = 2000000; x >= 1; x--) {           int lo = ceil(1LL * x * req[0] * 0.9),               hi = floor(1LL * x * req[0] * 1.1);           if (arr[0][i] >= lo && arr[0][i] <= hi) {             ok = true;             break;           }         }         ans += ok;       }        cout << "Case #" << x++ << ": " << ans << endl;       continue;     }      memset(DP, -1, sizeof(DP));     cout << "Case #" << x++ << ": " << dp(0, 0) << endl;   }    return 0; }
#include <bits/stdc++.h> using namespace std;
int main(int argc, char **argv) {   ifstream fin("/home/roman/CodeliteProjects/Competitive/GCJ17_R1A/in.txt");   ofstream fout("/home/roman/CodeliteProjects/Competitive/GCJ17_R1A/out.txt");    int t;   fin >> t;   for (int testcase = 0; testcase < t; ++testcase) {     int n, p;     fin >> n >> p;     vector<int> need(n);     for (int i = 0; i < n; ++i) {       fin >> need[i];     }     vector<vector<int>> q(n, vector<int>(p));     for (int i = 0; i < n; ++i) {       for (int j = 0; j < p; ++j) {         fin >> q[i][j];       }     }      assert(n < 3);     int ans = 0;     if (n == 1) {       for (int i = 0; i < p; ++i) {         int k = q[0][i] / need[0];         long double fr1 = 1.0L * q[0][i] / (k * need[0]);         if (0.9L <= fr1 && fr1 <= 1.1L) {           ans++;           continue;         }         long double fr2 = 1.0L * q[0][i] / ((k + 1) * need[0]);         if (0.9L <= fr2 && fr2 <= 1.1L) {           ans++;         }       }     } else {       vector<int> perm(p);       for (int i = 0; i < p; ++i) {         perm[i] = i;       }       do {         int cur = 0;         for (int i = 0; i < p; ++i) {           int m1 = q[0][i] / need[0];           int m2 = q[1][i] / need[1];           if (m2 < m1) {             swap(m1, m2);           }           for (int k = m1; k < m2 + 2; ++k) {             long double fr01 = 1.0L * q[0][i] / (k * need[0]);             long double fr11 = 1.0L * q[1][perm[i]] / (k * need[1]);             long double fr02 = 1.0L * q[0][i] / ((k + 1) * need[0]);             long double fr12 = 1.0L * q[1][perm[i]] / ((k + 1) * need[1]);             if (0.9L <= fr01 && fr01 <= 1.1L && 0.9L <= fr11 && fr11 <= 1.1L) {               cur++;               break;             } else if (0.9L <= fr02 && fr02 <= 1.1L && 0.9L <= fr12 &&                        fr12 <= 1.1L) {               cur++;               break;             }           }         }         ans = max(ans, cur);       } while (next_permutation(perm.begin(), perm.end()));     }      fout << "Case #" << testcase + 1 << ": " << ans << endl;   }    fin.close();   fout.close();   return 0; }
#include <bitset> #include <deque> #include <iomanip> #include <iostream> #include <queue> #include <set> #include <sstream> #include <stack>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>   using namespace std; 
typedef vector<int> vi; typedef vector<vi> vvi; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<string> vs;  typedef long long LL;            typedef unsigned long long ULL;  typedef unsigned uint;  const double pi = acos(-1.0);  const double eps = 1e-11;      const int MAXI = 0x7fffffff; const int dx[] = {1, 0, -1, 0}; const int dy[] = {0, 1, 0, -1}; const char dz[] = "SENW"; struct debugger {   template <typename T> debugger &operator,(const T &v) {     cerr << v << " ";     return *this;   } } dbg;  void debugarr(int *arr, int n) {   cout << "[";   for (int i = 0; i < n; i++)     cout << arr[i] << " ";   cout << "]" << endl; }  int req[110], lb[110], ub[110]; int q[110][110]; 
int main() {    freopen("input1.txt", "r", stdin);   ;   freopen("output_small.txt", "w", stdout);   ;    int n, i, j, k, l, m, t, s = 0, d, r, ans, p;   scanf("%d", &t);   ;   int c = 1;   while (t--) {     memset((req), (0), sizeof(req));     memset((lb), (0), sizeof(lb));     memset((ub), (0), sizeof(ub));     memset((q), (0), sizeof(q));     scanf("%d", &n);     ;     scanf("%d", &p);     ;     for (i = 0; i < n; i++) {       scanf("%d", &req[i]);       ;     }     for (i = 0; i < n; i++) {       for (j = 0; j < p; j++) {         scanf("%d", &q[i][j]);         ;       }     }     for (i = 0; i < n; i++) {       sort(q[i], q[i] + p);     }     for (i = 0; i < n; i++) {       double nt = (9 * req[i]) / 10.0;       lb[i] = (int)nt;       if (lb[i] < nt)         lb[i]++;       ub[i] = (11 * req[i]) / 10;     }     int ns;     ans = 0;     bool vis[52][52];     memset((vis), (0), sizeof(vis));      for (i = 0; i < n; i++) {       for (j = 0; j < p; j++) {         if (q[i][j] < lb[i])           continue;         ns = q[i][j] / lb[i];         int mx = q[i][j] / ub[i];         if (mx * ub[i] < q[i][j]) {           mx++;         }         swap(mx, ns);         while (ns <= mx) {           bool f = 1;              vector<pair<int, int>> v;           v.clear();           for (int m = i + 1; m < n; m++) {             f = 0;             for (int o = 0; o < p; o++) {                 if (!vis[m][o] && ns * lb[m] <= q[m][o] &&                   ns * ub[m] >= q[m][o]) {                 vis[m][o] = true;                 v.push_back(make_pair(m, o));                 f = 1;                 break;               }             }              if (f == 0)               break;           }           if (f == 0) {             for (int o = 0; o < v.size(); o++) {               vis[v[o].first][v[o].second] = false;             }           } else {             ans++;              break;           }           ns++;         }       }       break;     }     printf("Case #%d: %d\n", c++, ans);   }   return (0); }
#include <bitset> #include <cctype> #include <climits> #include <deque> #include <fstream> #include <iomanip> #include <iostream> #include <iterator> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>   using namespace std; 
const int INF = 1000000000;  typedef long double ld; typedef vector<int> VI; typedef vector<VI> vvi; typedef pair<int, int> PII; typedef vector<PII> vii; typedef vector<string> vs;   struct debugger {   template <typename T> debugger &solve(const T &v) {     cerr << v << " ";     return *this;   } };  inline void tbsjyzskhm(int &n, int *arr) {   int i = 0;   while (i < n) {     cout << arr[i] << " ";     i++;   } }  void get(int *arr, int n) {   cout << "[";   tbsjyzskhm(n, arr);   cout << "]" << endl; }  char str[50];  inline void twiiyubkvb(int &j) {   if (str[j] == '-')     str[j] = '+';   else     str[j] = '-'; }  
int main() {    int n, i, tc, l, m, t, s = 0, d;   scanf("%d", &t);   ;   int c = 1;   while (t--) {     cin >> str;     cin >> tc;     int ans = 0;     l = strlen(str);     for (i = 0; i + tc - 1 < l; i++) {       if (str[i] == '+')         continue;       s = 0;       for (int j = i; s < tc; s++, j++)         twiiyubkvb(j);       ans++;     }     for (i = 0; i < l; i++) {       if (str[i] == '-')         break;     }     if (i < l) {       printf("Case #%d: IMPOSSIBLE\n", c++);     } else {       printf("Case #%d: %d\n", c++, ans);     }   }   return (0); }
#include <bits/stdc++.h>  using namespace std; 
char s[77]; int q[7777]; int d[7777];  
int main() {   freopen("in", "r", stdin);   freopen("out", "w", stdout);   int tt;   scanf("%d", &tt);   for (int cc = 1; cc <= tt; ++cc) {     printf("Case #%d: ", cc);     int k;     scanf("%s %d", s, &k);     int n = strlen(s);     q[0] = 1 << n;     for (int i = 0; i < n; ++i) {       if (s[i] == '-') {         q[0] |= 1 << (n - 1 - i);       }     }     memset(d, -1, sizeof d);     d[q[0]] = 0;     for (int qh = 0, qt = 1; qh < qt; ++qh) {       int x = q[qh];       for (int i = 0; i <= n - k; ++i) {         int nx = x ^ (((1 << k) - 1) << i);         if (d[nx] == -1) {           d[nx] = d[x] + 1;           q[qt++] = nx;         }       }     }     if (d[1 << n] == -1) {       puts("IMPOSSIBLE");     } else {       printf("%d\n", d[1 << n]);     }   } }
#include <algorithm> #include <bitset> #include <cstdio> #include <cstring> #include <iostream> #include <map> #include <set> #include <string> #include <vector>  using namespace std; 
void solve(int test) {   string s;   cin >> s;   int k;   cin >> k;    int n = s.size();    int res = 0;   for (int i = 0; i + k - 1 < n; ++i) {     if (s[i] == '-') {       ++res;       for (int j = i; j < i + k; ++j) {         s[j] = (s[j] == '+' ? '-' : '+');       }     }   }    if (count(s.begin(), s.end(), '+') != n) {     printf("Case #%d: IMPOSSIBLE\n", test);   } else {     printf("Case #%d: %d\n", test, res);   } }  
int main() {   freopen("input.txt", "r", stdin);   freopen("output.txt", "w", stdout);    int t;   scanf("%d", &t);   for (int i = 0; i < t; ++i) {     solve(i + 1);     cerr << i + 1 << ": " << clock() << endl;   }    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <vector> using namespace std;  
typedef unsigned long long ull; typedef set<int> si; typedef vector<vector<int>> vvi; typedef long long LL; typedef pair<int, int> pii; typedef vector<pii> vii; typedef vector<int> vi; int unit[52]; int wt[52][52]; int mn[52][52], mx[52][52]; int f; vii adjList[1010]; int par[1010]; int n, p;  void get() {}  void augment(int x) {   if (par[x] != x) {     for (int i = 0; i < adjList[par[x]].size(); i++) {       if (adjList[par[x]][i].first == x) {         f = min(f, adjList[par[x]][i].second);         break;       }     }     augment(par[x]);     for (int i = 0; i < adjList[par[x]].size(); i++) {       if (adjList[par[x]][i].first == x) {         adjList[par[x]][i].second -= f;         break;       }     }      for (int i = 0; i < adjList[x].size(); i++) {       if (adjList[x][i].first == par[x]) {         adjList[x][i].second += f;         break;       }     }   } }  int maxflow() {   int mf = 0;   f = 0;   while (1) {     f = 0;     memset(par, -1, sizeof(par));     queue<int> q;     q.push(n * p);     par[n * p] = n * p;     bool found = 0;      for (; !q.empty();) {       int node = q.front();        q.pop();       for (int i = 0; i < adjList[node].size(); i++) {          int nx = adjList[node][i].first;         int cap = adjList[node][i].second;          if (cap > 0 && par[nx] == -1) {           par[nx] = node;           if (nx == n * p + 1) {             f = 1000000000;             augment(nx);             found = 1;              break;           }           q.push(nx);         }       }       if (found)         break;     }      if (f == 0)       break;     mf += f;   }    return mf; }  inline void gkgtcrlpqc(int &j) {   adjList[(n - 1) * p + j].push_back(pii(n * p + 1, 1));   adjList[n * p + 1].push_back(pii((n - 1) * p + j, 0)); }  inline void sxhvsnibia(int &k, int &i, int &j) {    adjList[i * p + j].push_back(pii((i + 1) * p + k, 1));   adjList[(i + 1) * p + k].push_back(pii(i * p + j, 0)); }  
int main(void) {   get();   int tc;   cin >> tc;    for (int ct = 1; ct <= tc; ct++) {     map<int, int> mp;      cin >> n;     cin >> p;     for (int i = 0; i < n; i++) {       cin >> unit[i];     }      memset(mn, -1, sizeof(mn));     memset(mx, -1, sizeof(mx));      for (int i = 0; i < n; i++) {       for (int j = 0; j < p; j++) {         cin >> wt[i][j];         int tmp1 = floor(1.0 * wt[i][j] / (0.9 * unit[i]));         int tmp2 = ceil(1.0 * wt[i][j] / (1.1 * unit[i]));         int bawah = min(tmp1, tmp2);         int atas = max(tmp1, tmp2);             while (bawah <= atas) {           if (bawah * 0.9 * unit[i] - 1e-9 <= 1.0 * wt[i][j] &&               1.0 * wt[i][j] <= bawah * 1.1 * unit[i] + 1e-9)             break;           else             bawah++;         }           if (bawah > atas)           continue;          while (atas >= bawah) {           if (atas * 0.9 * unit[i] - 1e-9 <= 1.0 * wt[i][j] &&               1.0 * wt[i][j] <= atas * 1.1 * unit[i] + 1e-9)             break;           else             atas--;         }            mn[i][j] = bawah;         mx[i][j] = atas;         }     }      for (int i = 0; i < 1010; i++)       adjList[i].clear();      for (int i = 0; i < n - 1; i++) {       for (int j = 0; j < p; j++) {         if (mn[i][j] <= 0)           continue;         for (int k = 0; k < p; k++) {           if (mn[i + 1][k] <= 0)             continue;            if ((mn[i + 1][k] <= mn[i][j] && mn[i][j] <= mx[i + 1][k])) {              adjList[i * p + j].push_back(pii((i + 1) * p + k, 1));             adjList[(i + 1) * p + k].push_back(pii(i * p + j, 0));           } else if ((mn[i][j] <= mn[i + 1][k] && mn[i + 1][k] <= mx[i][j]))             sxhvsnibia(k, i, j);         }       }     }      for (int j = 0; j < p; j++) {              if (mn[0][j] > 0) {         adjList[n * p].push_back(pii(j, 1));         adjList[j].push_back(pii(n * p, 0));       }        if (mn[n - 1][j] > 0)         gkgtcrlpqc(j);     }      printf("Case #%d: %d\n", ct, maxflow());     cerr << "Test " << ct << " done \n";   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;
const int MAXN = 1005;  const double eps = 1e-9;  using VI = vector<int>; using VVI = vector<VI>; using PII = pair<int, int>; using LL = long long; using VL = vector<LL>; using VVL = vector<VL>; using PLL = pair<LL, LL>; using VS = vector<string>; template <class S, class T> istream &operator>>(istream &q, pair<S, T> &p) {   return q >> p.first >> p.second; } template <class S, class T> ostream &operator<<(ostream &a, const pair<S, T> &p) {   return a << p.first << " " << p.second; } template <class T> void maxi(T &x, T y) {   if (x < y)     x = y; } template <class T> void mini(T &x, T y) {   if (x > y)     x = y; }  const double EPS = 1e-10; const double PI = acos(-1.0); const LL MOD = 1e9 + 7;  inline void wbunbppcfy(VVL &qs, int &i, VL &rs, LL &ans) {   int lb_k = ceil(qs[0][i] * 1. / (rs[0] * 1.1));   int ub_k = floor(qs[0][i] * 1. / (rs[0] * 0.9));   if (lb_k <= ub_k)     ++ans; }  
int main() {    cin.tie(0);    int T;   cin >> T;   {     int n = (1);     while (n < (T + 1)) {       int N, P;       cin >> N >> P;       VL rs(N);       for (int i = (0); i < (N); ++i)         cin >> rs[i];       VVL qs(N, VL(P));       for (int i = (0); i < (N); ++i) {         for (int j = (0); j < (P); ++j)           cin >> qs[i][j];         sort(begin(((qs[i]))), end(((qs[i]))));       }        LL ans = 0;       if (N == 1) {         for (int i = (0); i < (P); ++i)           wbunbppcfy(qs, i, rs, ans);       } else {         int i2 = 0;         for (int i1 = (0); i1 < (P); ++i1) {           int lb_k = ceil(qs[0][i1] * 1. / (rs[0] * 1.1));           int ub_k = floor(qs[0][i1] * 1. / (rs[0] * 0.9));            while (i2 < P) {             int lb2_k = (int)ceil(qs[1][i2] * 1. / (rs[1] * 1.1));             int ub2_k = (int)floor(qs[1][i2] * 1. / (rs[1] * 0.9));             if (lb_k <= ub2_k && lb2_k <= ub_k) {               ++ans;               ++i2;               break;             } else if (ub_k < lb2_k)               break;              ++i2;           }         }       }        printf("Case #%d: %lld\n", n, ans);       ++n;     }   }    return 0; }
#include <algorithm> #include <bitset> #include <climits> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <iostream> #include <limits> #include <list> #include <map> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <string> #include <unordered_map> #include <vector> using namespace std; 
const double pi = acos(-1.), eps = 1e-6; const int Maxn = 110, Maxk = 5010, Mo = 1e9 + 7, oo = INT_MAX >> 2; const int sp[4][2] = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}}; int T; long long f[1000][10]; int n, m, k, cs, ans; int N, K; string st; int Hd, Ad, Hk, Ak, B, D; struct Rec {   int Hd, Ad, Hk, Ak;   Rec(int Hd, int Ad, int Hk, int Ak) : Hd(Hd), Ad(Ad), Hk(Hk), Ak(Ak) {}   Rec() {} }; int operator<(Rec a, Rec b) {   if (a.Hd == b.Hd && a.Ad == b.Ad && a.Hk == b.Hk)     return a.Ak < b.Ak;   if (a.Hd == b.Hd && a.Ad == b.Ad)     return a.Hk < b.Hk;   if (a.Hd == b.Hd)     return a.Ad < b.Ad;   return a.Hd < b.Hd; } map<Rec, int> dis;  void Push(queue<Rec> &Q, Rec w, int turn) {   w.Hd -= w.Ak;   if (w.Hd <= 0)     return;    if (dis.find(w) != dis.end())     return;   dis[w] = turn;   Q.push(w); } 
int main() {   cin >> T;   while (T--) {     printf("Case #%d: ", ++cs);     cin >> Hd >> Ad >> Hk >> Ak >> B >> D;     if ((Ak - D) > Hd) {       puts("IMPOSSIBLE");       continue;     }     queue<Rec> Q;     Q.push(Rec(Hd, Ad, Hk, Ak));     dis.clear();     dis[Rec(Hd, Ad, Hk, Ak)] = 0;     int ck = 1;     while (Q.size()) {       Rec nxt = Q.front();       Q.pop();       int turn = dis[nxt] + 1;       Rec cure = nxt;       cure.Hd = Hd;       Push(Q, cure, turn);        Rec attack = nxt;       attack.Hk -= nxt.Ad;        if (attack.Hk <= 0) {          ans = turn;         ck = 0;         break;       }       Push(Q, attack, turn);        Rec buff = nxt;       buff.Ad += B;       Push(Q, buff, turn);        Rec debuff = nxt;       debuff.Ak = max(0, debuff.Ak - D);       Push(Q, debuff, turn);     }     if (!ck)       cout << ans << endl;     else       puts("IMPOSSIBLE");   }   return 0; }
#include <algorithm> #include <cmath> #include <cstdio> #include <cstring> using namespace std; 
int N, P; int s[200]; int r[200][200]; int b[200]; int tb[200];  int ll[200][200]; int mm[200][200];  bool dfs(int cur, int less, int most) { return 0; }  
int main(void) {   int t;   scanf("%d", &t);   for (int tt = 1; tt <= t; tt++) {     scanf("%d%d", &N, &P);     for (int i = 0; i < N; ++i)       scanf("%d", &s[i]);     for (int i = 0; i < N; ++i) {       for (int j = 0; j < P; ++j) {         scanf("%d", &r[i][j]);       }       sort(r[i], r[i] + P);       for (int j = 0; j < P; ++j) {         ll[i][j] = ceil(1.0 * r[i][j] / (1.1 * s[i]));         mm[i][j] = floor(1.0 * r[i][j] / (0.9 * s[i]));       }     }        int ans = 0;     memset(b, 0, sizeof(b));       while (1) {       bool stop = false;       for (int i = 0; i < N; ++i) {         if (b[i] >= P)           stop = true;       }       if (stop)         break;        int cur = 0;       for (int i = 0; i < N; ++i) {         cur = max(cur, ll[i][b[i]]);       }        bool ok = true;       for (int i = 0; i < N; ++i) {         for (int j = b[i]; j <= P; ++j) {           if (j == P || cur < ll[i][j]) {             b[i] = j;             ok = false;             break;           }           if (ll[i][j] > mm[i][j]) {             continue;           }           if (cur <= mm[i][j]) {             tb[i] = j;             break;           }         }       }         if (!ok)         continue;        ++ans;       for (int i = 0; i < N; ++i) {         b[i] = tb[i] + 1;       }     }      printf("Case #%d: %d\n", tt, ans);   }   return 0; }
#include <bits/stdc++.h>  using namespace std; 
typedef long long ll; typedef pair<int, int> ii; typedef pair<int, ii> iii;  ll pwr(ll base, ll p, ll mod = (1000000007LL)) {   ll ans = 1;   while (p) {     if (p & 1)       ans = (ans * base) % mod;     base = (base * base) % mod;     p /= 2;   }   return ans; }  ll gcd(ll a, ll b) {   if (b == 0)     return a;   return gcd(b, a % b); }  int n, p, arr[55][55], req[55], DP[10][1024];  int dp(int i, int mask) {   if (i == p)     return 0;   int &ans = DP[i][mask];   if (ans != -1)     return ans;   ans = dp(i + 1, mask);   for (int j = 0; j < p; j++) {     if ((mask >> j) & 1)       continue;     int z = arr[0][i] / req[0];     for (int x = z + 5; x >= z - 5 && x >= 1; x--) {       int lo1 = ceil(1LL * x * req[0] * 0.9),           hi1 = floor(1LL * x * req[0] * 1.1);       int lo2 = ceil(1LL * x * req[1] * 0.9),           hi2 = floor(1LL * x * req[1] * 1.1);       if (arr[0][i] >= lo1 && arr[0][i] <= hi1 && arr[1][j] >= lo2 &&           arr[1][j] <= hi2)         ans = max(ans, 1 + dp(i + 1, mask | (1 << j)));     }   }    return ans; }  
int main() {    ios_base::sync_with_stdio(0);   cin.tie(0);    freopen("B-small-attempt2.in", "r", stdin);   freopen("output.txt", "w", stdout);    int t, x = 1;   cin >> t;   while (t--) {      cin >> n >> p;     for (int i = 0; i < n; i++)       cin >> req[i];     for (int i = 0; i < n; i++)       for (int j = 0; j < p; j++)         cin >> arr[i][j];      if (n == 1) {       int ans = 0;       for (int i = 0; i < p; i++) {         bool ok = false;         for (int x = 2000000; x >= 1; x--) {           int lo = ceil(1LL * x * req[0] * 0.9),               hi = floor(1LL * x * req[0] * 1.1);           if (arr[0][i] >= lo && arr[0][i] <= hi) {             ok = true;             break;           }         }         ans += ok;       }        cout << "Case #" << x++ << ": " << ans << endl;       continue;     }      memset(DP, -1, sizeof(DP));     cout << "Case #" << x++ << ": " << dp(0, 0) << endl;   }    return 0; }
#include <bits/stdc++.h> using namespace std; 
int main(int argc, char **argv) {   ifstream fin("/home/roman/CodeliteProjects/Competitive/GCJ17_R1A/in.txt");   ofstream fout("/home/roman/CodeliteProjects/Competitive/GCJ17_R1A/out.txt");    int t;   fin >> t;   for (int testcase = 0; testcase < t; ++testcase) {     int n, p;     fin >> n >> p;     vector<int> need(n);     for (int i = 0; i < n; ++i) {       fin >> need[i];     }     vector<vector<int>> q(n, vector<int>(p));     for (int i = 0; i < n; ++i) {       for (int j = 0; j < p; ++j) {         fin >> q[i][j];       }     }      assert(n < 3);     int ans = 0;     if (n == 1) {       for (int i = 0; i < p; ++i) {         int k = q[0][i] / need[0];         long double fr1 = 1.0L * q[0][i] / (k * need[0]);         if (0.9L <= fr1 && fr1 <= 1.1L) {           ans++;           continue;         }         long double fr2 = 1.0L * q[0][i] / ((k + 1) * need[0]);         if (0.9L <= fr2 && fr2 <= 1.1L) {           ans++;         }       }     } else {       vector<int> perm(p);       for (int i = 0; i < p; ++i) {         perm[i] = i;       }       do {         int cur = 0;         for (int i = 0; i < p; ++i) {           int m1 = q[0][i] / need[0];           int m2 = q[1][i] / need[1];           if (m2 < m1) {             swap(m1, m2);           }           for (int k = m1; k < m2 + 2; ++k) {             long double fr01 = 1.0L * q[0][i] / (k * need[0]);             long double fr11 = 1.0L * q[1][perm[i]] / (k * need[1]);             long double fr02 = 1.0L * q[0][i] / ((k + 1) * need[0]);             long double fr12 = 1.0L * q[1][perm[i]] / ((k + 1) * need[1]);             if (0.9L <= fr01 && fr01 <= 1.1L && 0.9L <= fr11 && fr11 <= 1.1L) {               cur++;               break;             } else if (0.9L <= fr02 && fr02 <= 1.1L && 0.9L <= fr12 &&                        fr12 <= 1.1L) {               cur++;               break;             }           }         }         ans = max(ans, cur);       } while (next_permutation(perm.begin(), perm.end()));     }      fout << "Case #" << testcase + 1 << ": " << ans << endl;   }    fin.close();   fout.close();   return 0; }
#include <bits/stdc++.h> using namespace std; 
typedef long long ll; typedef pair<int, int> pii; typedef pair<ll, ll> pll; typedef vector<int> vi; typedef vector<vi> vvi; typedef vector<ll> vll; typedef set<int> si; typedef map<int, int> mii;  const int N = 50; int t, n, m; char a[N][N];  
int main() {   freopen("A-small-attempt0.in", "r", stdin);   freopen("output.txt", "w", stdout);    scanf("%d", &t);   for (int test = (1); test <= (int)(t); ++test) {     scanf("%d%d", &n, &m);     for (int i = (0); i <= (int)(n - 1); ++i)       scanf("%s", a[i]);      for (int i = (0); i <= (int)(n - 1); ++i) {       for (int j = (1); j <= (int)(m - 1); ++j)         if (a[i][j] == '?')           a[i][j] = a[i][j - 1];       for (int j = (m - 2); j >= (int)(0); --j)         if (a[i][j] == '?')           a[i][j] = a[i][j + 1];     }     for (int j = (0); j <= (int)(m - 1); ++j) {       for (int i = (1); i <= (int)(n - 1); ++i)         if (a[i][j] == '?')           a[i][j] = a[i - 1][j];       for (int i = (n - 2); i >= (int)(0); --i)         if (a[i][j] == '?')           a[i][j] = a[i + 1][j];     }      printf("Case #%d:\n", test);     for (int i = (0); i <= (int)(n - 1); ++i) {       for (int j = (0); j <= (int)(m - 1); ++j)         printf("%c", a[i][j]);       puts("");     }   } }  
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;
const int INF = 1000000000;  typedef unsigned long long ull; typedef long long LL;  typedef pair<LL, LL> pll; typedef vector<int> vi; typedef vector<vi> vvi; typedef vector<LL> vll; typedef set<int> si; typedef map<int, int> mii;  const int N = 50; int t, n, m; char a[N][N];  inline void qhnvpdkbfk(int &i) {   for (int j = (0); j <= (int)(m - 1); ++j)     cout << a[i][j];   puts("");   ++i; }  inline void tpcziffdpr() {   int i = (0);   while (i <= (int)(n - 1))     qhnvpdkbfk(i); }  inline void ofojfjkyvj(int &test) {   cin >> n >> m;   for (int i = (0); i <= (int)(n - 1); ++i)     cin >> a[i];    for (int i = (0); i <= (int)(n - 1); ++i) {     for (int j = (1); j <= (int)(m - 1); ++j)       if (a[i][j] == '?')         a[i][j] = a[i][j - 1];     for (int j = (m - 2); j >= (int)(0); --j)       if (a[i][j] == '?')         a[i][j] = a[i][j + 1];   }   for (int j = (0); j <= (int)(m - 1); ++j) {     for (int i = (1); i <= (int)(n - 1); ++i)       if (a[i][j] == '?')         a[i][j] = a[i - 1][j];     for (int i = (n - 2); i >= (int)(0); --i)       if (a[i][j] == '?')         a[i][j] = a[i + 1][j];   }    cout << "Case #" << test << ":\n";   tpcziffdpr(); }  
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_2_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/KhaleD/A-small-practice.in",           "r", stdin);    freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_2_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/KhaleD/outer_temp/KhaleD/A-small-practice_transformation.out",           "w", stdout);   cin >> t;   for (int test = (1); test <= (int)(t); ++test)     ofojfjkyvj(test);   return 0; }  
#include <bits/stdc++.h> using namespace std;  
ifstream fin("A-small-attempt0.in"); ofstream fout("A-small0.out");  void rsolve(int r0, int r1, int c0, int c1, vector<string> &rows) {   vector<pair<int, int>> founds;   for (int i = r0; i < r1; i++)     for (int j = c0; j < c1; j++)       if (rows[i][j] != '?')         founds.push_back({i, j});   cout << r0 << ' ' << r1 << ' ' << c0 << ' ' << c1 << ' ' << founds.size()        << '\n';   if (founds.size() == 0) {     cout << "WTF???\n";     return;   }   if (founds.size() == 1) {     char found = rows[founds[0].first][founds[0].second];     for (int i = r0; i < r1; i++)       for (int j = c0; j < c1; j++)         rows[i][j] = found;     return;   } else {     int R1 = founds[0].first, C1 = founds[0].second, R2 = founds[1].first,         C2 = founds[1].second;     if (C1 == C2) {       rsolve(r0, max(R1, R2), c0, c1, rows);       rsolve(max(R1, R2), r1, c0, c1, rows);     } else {       rsolve(r0, r1, c0, max(C1, C2), rows);       rsolve(r0, r1, max(C1, C2), c1, rows);     }   }   cout << r0 << ' ' << r1 << ' ' << c0 << ' ' << c1 << "done\n"; }  void solve() {   int r, c;   fin >> r >> c;   vector<string> rows(r);   for (string &s : rows)     fin >> s;   rsolve(0, r, 0, c, rows);   for (string s : rows)     fout << s << '\n';   cout << "solve done"; }  
int main() {   int t;   fin >> t;   for (int i = 0; i < t; i++)     fout << "Case #" << i + 1 << ":\n", solve(); }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std; 
const double eps = 1e-9;  ofstream d("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_4_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/sammyMaX/outer_temp/sammyMaX/A-small-practice_transformation.out");  inline void kdzucydesu(vector<std::string> &rows, int &i, int &j, char &found) {   rows[i][j] = found; }  inline void shstdxrnou(vector<pair<int, int>> &founds, int &i, int &j) {   founds.push_back({i, j}); }  void rsolve(int r0, int r1, int c0, int c1, vector<string> &rows) {   vector<pair<int, int>> founds;   for (int i = r0; i < r1; i++)     for (int j = c0; j < c1; j++)       if (rows[i][j] != '?')         shstdxrnou(founds, i, j);   cout << r0 << ' ' << r1 << ' ' << c0 << ' ' << c1 << ' ' << founds.size()        << '\n';   if (founds.size() == 0) {     cout << "WTF???\n";     return;   }   if (founds.size() == 1) {     char found = rows[founds[0].first][founds[0].second];     for (int i = r0; i < r1; i++)       for (int j = c0; j < c1; j++)         kdzucydesu(rows, i, j, found);     return;   } else {     int R1 = founds[0].first, C1 = founds[0].second, get = founds[1].first,         C2 = founds[1].second;     if (C1 == C2) {       rsolve(r0, max(R1, get), c0, c1, rows);       rsolve(max(R1, get), r1, c0, c1, rows);     } else {       rsolve(r0, r1, c0, max(C1, C2), rows);       rsolve(r0, r1, max(C1, C2), c1, rows);     }   }   cout << r0 << ' ' << r1 << ' ' << c0 << ' ' << c1 << "done\n"; }  void solve() {   int r, c;   cin >> r >> c;   vector<string> rows(r);   for (string &s : rows)     cin >> s;   rsolve(0, r, 0, c, rows);   for (string s : rows)     d << s << '\n';   cout << "solve done"; }  
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_4_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/sammyMaX/A-small-practice.in",           "r", stdin);    int t;   cin >> t;   {     int i = 0;     while (i < t) {       d << "Case #" << i + 1 << ":\n", solve();       i++;     }   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <complex> #include <cstdio> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <stdio.h> #include <stdlib.h> #include <string> #include <vector> using namespace std; 
ofstream x("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_4_Usenix_RF_1.0_True_MCTS_Classic_True/WCG/sammyMaX/outer_temp/sammyMaX/A-small-practice_transformation.out");  inline bool kgshexgtbi() {   cout << "WTF???\n";   return 1;   return false; }  inline bool ocfbkwpwog(vector<pair<int, int>> &founds, int &r0, int &r1,                        int &c0, int &c1, vector<std::string> &rows) {   char found = rows[founds[0].first][founds[0].second];   for (int get = r0; get < r1; get++)     for (int j = c0; j < c1; j++)       rows[get][j] = found;   return true;   return false; }  void rsolve(int r0, int r1, int c0, int c1, vector<string> &rows) {   vector<pair<int, int>> founds;   int get;   for (get = r0; get < r1; get++)     for (int j = c0; j < c1; j++)       if (rows[get][j] != '?')         founds.push_back({get, j});   cout << r0 << ' ' << r1 << ' ' << c0 << ' ' << c1 << ' ' << founds.size()        << '\n';   if (founds.size() == 0) {     if (kgshexgtbi()) {       return;     }   }   if (founds.size() == 1) {     if (ocfbkwpwog(founds, r0, r1, c0, c1, rows)) {       return;     }   } else {     int R1 = founds[0].first, C1 = founds[0].second, R2 = founds[1].first,         C2 = founds[1].second;     if (C1 == C2) {       rsolve(r0, max(R1, R2), c0, c1, rows);       rsolve(max(R1, R2), r1, c0, c1, rows);     } else {       rsolve(r0, r1, c0, max(C1, C2), rows);       rsolve(r0, r1, max(C1, C2), c1, rows);     }   }   cout << r0 << ' ' << r1 << ' ' << c0 << ' ' << c1 << "done\n"; }  void solve() {   int r, c;   cin >> r >> c;   vector<string> rows(r);   for (string &s : rows)     cin >> s;   rsolve(0, r, 0, c, rows);   for (string s : rows)     x << s << '\n';   cout << "solve done"; }  inline void hxizkrfapo(int &t) {   int get = 0;   for (; get < t;) {     x << "Case #" << get + 1 << ":\n", solve();     get++;   } }  
int main() {   int t;   cin >> t;   hxizkrfapo(t); }
#include <cstdio> #include <iostream> #include <map> #include <string> #include <vector>  using namespace std; 
const int N = 100;  int n, m;  void handle_line(string &s) {   char last = '?';   for (int i = 0; i < m; ++i) {     if (s[i] == '?') {       s[i] = last;     } else {       last = s[i];     }   }   for (int i = m - 1; i >= 0; --i) {     if (s[i] == '?') {       s[i] = last;     } else {       last = s[i];     }   } }  string s[N];  void work() {   cin >> n >> m;   string qs;   for (int i = 1; i <= m; ++i) {     qs.push_back('?');   }   int st = -1;   for (int i = 1; i <= n; ++i) {     cin >> s[i];     if (s[i] != qs) {       st = i;     }   }   handle_line(s[st]);   for (int i = st - 1; i >= 1; --i) {     if (s[i] == qs) {       s[i] = s[i + 1];     } else {       handle_line(s[i]);     }   }   for (int i = st + 1; i <= n; ++i) {     if (s[i] == qs) {       s[i] = s[i - 1];     } else {       handle_line(s[i]);     }   }   for (int i = 1; i <= n; ++i) {     cout << s[i] << endl;   } }  
int main() {   freopen("my.in", "r", stdin);   freopen("out.txt", "w", stdout);    int q;   cin >> q;   for (int i = 1; i <= q; ++i) {     printf("Case #%d:\n", i);     work();   }   return 0; }
#include <bits/stdc++.h> using namespace std; 
typedef long long ll; typedef long long LL; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<int> vi; void open() {   freopen("D:/OneDrive/Code/GCJ/A-small-attempt1.in", "r", stdin);   freopen("D:/OneDrive/Code/GCJ/out.txt", "w", stdout); }  
int main(void) {   open();   int tc;   scanf("%d", &tc);    for (int ct = 1; ct <= tc; ct++) {     int r, c;     scanf("%d", &r);     scanf("%d", &c);     string str[30];     string ret[30];     for (int i = 0; i < r; i++) {       cin >> str[i];        ret[i] = str[i];     }      for (int i = 0; i < r; i++) {       for (int j = 0; j < c; j++) {         if (str[i][j] == '?')           continue;         int minx, maxx;         minx = maxx = i;         int miny, maxy;         miny = maxy = j;         while (miny > 0 && str[i][miny - 1] == '?' && ret[i][miny - 1] == '?')           miny--;         while (maxy < c - 1 && str[i][maxy + 1] == '?' &&                ret[i][maxy + 1] == '?')           maxy++;         while (minx > 0) {           bool valid = true;           for (int k = miny; k <= maxy; k++) {             if (str[minx - 1][k] != '?' || ret[minx - 1][k] != '?') {               valid = false;               break;             }           }           if (valid) {             minx--;           } else             break;         }         bool adabawah = false;         for (int k = i + 1; k < r; k++) {           for (int l = 0; l < c; l++) {             if (str[k][l] != '?') {               adabawah = true;               break;             }           }         }         if (!adabawah) {           maxx = r - 1;         }          for (int k = minx; k <= maxx; k++) {           for (int l = miny; l <= maxy; l++) {             ret[k][l] = str[i][j];           }         }       }     }      printf("Case #%d: \n", ct);     for (int i = 0; i < r; i++) {       cout << ret[i] << "\n";     }      cerr << "Test " << ct << " done \n";   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> using namespace std; 
const int INF = 1000000000;  using VI = vector<int>; using VVI = vector<VI>; using PII = pair<int, int>; using LL = long long; using VL = vector<LL>; using VVL = vector<VL>; using PLL = pair<LL, LL>; using VS = vector<string>; template <class S, class T> istream &operator>>(istream &is, pair<S, T> &p) {   return is >> p.first >> p.second; } template <class S, class T> ostream &operator<<(ostream &os, const pair<S, T> &p) {   return os << p.first << " " << p.second; } template <class T> void maxi(T &x, T y) {   if (x < y)     x = y; }  const double EPS = 1e-10; const double PI = acos(-1.0); const LL MOD = 1e9 + 7;  
int main() {    int ret_val = 0;   cin.tie(0);    int T;   cin >> T;   for (int r = (1); r < (T + 1); ++r) {     int H, W;     cin >> H >> W;     VS vs(H);     for (int y = (0); y < (H); ++y)       cin >> vs[y];      set<char> memo;     {       int y = (0);       while (y < (H)) {         for (int x = (0); x < (W); ++x) {           if (vs[y][x] != '?' && !memo.count(vs[y][x])) {             memo.insert(vs[y][x]);              int lx, rx, ty, by;             for (lx = x - 1; lx >= 0; --lx)               if (vs[y][lx] != '?')                 break;             ++lx;             for (rx = x + 1; rx < W; ++rx)               if (vs[y][rx] != '?')                 break;              for (ty = y - 1; ty >= 0; --ty) {               bool ok = true;               for (int xx = lx; xx < rx; ++xx) {                 if (vs[ty][xx] != '?')                   ok = false;               }               if (!ok)                 break;             }             ++ty;             for (by = y + 1; by < H; ++by) {               int ok = 1;               for (int xx = lx; xx < rx; ++xx) {                 if (vs[by][xx] != '?')                   ok = false;               }               if (!ok)                 break;             }              for (int yy = (ty); yy < (by); ++yy) {               int xx = (lx);               while (xx < (rx)) {                 vs[yy][xx] = vs[y][x];                 ++xx;               }             }           }         }         ++y;       }     }     printf("Case #%d:\n", r);     {       int y = (0);       while (y < (H)) {         printf("%s\n", vs[y].c_str());         ++y;       }     }   }   return ret_val; }
#include <algorithm> #include <cstdio> #include <cstring> using namespace std; 
int n, m; char s[50][50]; 
int main(void) {   int t;   scanf("%d", &t);   for (int tt = 1; tt <= t; tt++) {     scanf("%d%d", &n, &m);     for (int i = 0; i < n; ++i)       scanf("%s", s[i]);      int ufx, ufy = 0;     for (int i = 0; i < n; ++i) {       ufx = 0;       bool fill = false;       for (int j = 0; j < m; ++j) {         if (s[i][j] == '?')           continue;         fill = true;         int st = ufx, ed = j + 1;         for (; ed < m && s[i][ed] == '?'; ++ed)           ;         for (int x = st; x < ed; ++x)           for (int y = ufy; y <= i; ++y)             s[y][x] = s[i][j];         ufx = ed;       }       if (fill)         ufy = i + 1;     }      for (int i = 0; i < n; ++i)       for (int j = 0; j < m; ++j)         if (s[i][j] == '?') {           s[i][j] = s[i - 1][j];         }      printf("Case #%d:\n", tt);     for (int i = 0; i < n; ++i)       printf("%s\n", s[i]);   }   return 0; }
#include <bits/stdc++.h>  using namespace std; 
typedef long long ll; typedef pair<int, int> ii; typedef pair<int, ii> iii;  ll pwr(ll base, ll p, ll mod = (1000000007LL)) {   ll ans = 1;   while (p) {     if (p & 1)       ans = (ans * base) % mod;     base = (base * base) % mod;     p /= 2;   }   return ans; }  ll gcd(ll a, ll b) {   if (b == 0)     return a;   return gcd(b, a % b); }  int r, c; char arr[26][26];  
int main() {    ios_base::sync_with_stdio(0);   cin.tie(0);    freopen("A-small-attempt1.in", "r", stdin);   freopen("output.txt", "w", stdout);    int t, x = 1;   cin >> t;    while (t--) {      cin >> r >> c;     for (int i = 1; i <= r; i++)       cin >> (arr[i] + 1);      for (int i = 1; i <= r; i++)       for (int j = 1; j <= c; j++)         if (arr[i][j] != '?') {            int miny = j, maxy = j;            int y = j - 1;           while (y >= 1 && arr[i][y] == '?') {             arr[i][y--] = arr[i][j];             miny = y + 1;           }            y = j + 1;           while (y <= c && arr[i][y] == '?') {             arr[i][y++] = arr[i][j];             maxy = y - 1;           }         }      queue<ii> qq;     for (int i = 1; i <= r; i++)       if (arr[i][1] != '?') {          int x = i - 1;         while (x >= 1 && arr[x][1] == '?') {           for (int j2 = 1; j2 <= c; j2++)             arr[x][j2] = arr[x + 1][j2];           x--;         }          x = i + 1;         while (x <= r && arr[x][1] == '?') {           for (int j2 = 1; j2 <= c; j2++)             arr[x][j2] = arr[x - 1][j2];           x++;         }       }      cout << "Case #" << x++ << ":" << endl;     for (int i = 1; i <= r; i++)       cout << (arr[i] + 1) << endl;   }    return 0; }
#include <bits/stdc++.h> #include <fstream>  using namespace std; 
const int MAXN = 1005;  ifstream fin;  ofstream fout;  long long pwr(long long base, long long p, long long mod = (1000000007LL)) {   long long ans = 1;   while (p) {     if (p & 1)       ans = (ans * base) % mod;     base = (base * base) % mod;     p /= 2;   }   return ans; }  int r, c; char arr[26][26];  
int main() {   fin.open("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_14_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/satyaki3794/A-small-practice.in");    fout.open("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_14_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/satyaki3794/outer_temp/satyaki3794/A-small-practice_transformation.out");    cin.tie(0);    int t, x = 1;   fin >> t;     while (t--) {      fin >> r >> c;     for (int i = 1; i <= r; i++)       fin >> (arr[i] + 1);      for (int i = 1; i <= r; i++) {       for (int j = 1; j <= c; j++)         if (arr[i][j] != '?') {            int miny = j, maxy = j;            int y = j - 1;           for (; y >= 1 && arr[i][y] == '?';) {             arr[i][y--] = arr[i][j];             miny = y + 1;           }            y = j + 1;           for (; y <= c && arr[i][y] == '?';) {             arr[i][y++] = arr[i][j];             maxy = y - 1;           }         }     }      queue<pair<int, int>> qq;     for (int i = 1; i <= r; i++) {       if (arr[i][1] != '?') {          int x = i - 1;         for (; x >= 1 && arr[x][1] == '?';) {           for (int j2 = 1; j2 <= c; j2++)             arr[x][j2] = arr[x + 1][j2];           x--;         }          x = i + 1;         while (x <= r && arr[x][1] == '?') {           for (int j2 = 1; j2 <= c; j2++)             arr[x][j2] = arr[x - 1][j2];           x++;         }       }     }      fout << "Case #" << x++ << ":" << endl;     for (int i = 1; i <= r; i++)       fout << (arr[i] + 1) << endl;   }    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std; 
typedef vector<vector<int>> vvi; typedef unsigned long long ull; typedef set<int> si; typedef long double ld; typedef long long LL; typedef pair<int, int> PII; typedef pair<int, int> pii; typedef vector<int> VI; typedef long double LD;  inline void ftqzwdfpad(vector<std::string> &v, int &dist, int &i, int &index,                        int &k) {   if (v[k][0] != '?') {     if (abs(i - k) < dist) {       dist = abs(i - k);       index = k;     }   } }  int main(int argc, char **d) {   freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_15_Usenix_RF_1.0_True_MCTS_Classic_True/lazyBit/gultai4ukr/A-small-practice.in",           "r", stdin);    int ret_val = 0;    int t;   scanf("%d ", &t);   for (int testcase = 0; testcase < t; ++testcase) {     int r, c;     scanf("%d %d ", &r, &c);     vector<string> v(r);     for (int i = 0; i < r; ++i) {       cin >> v[i];      }      for (int i = 0; i < r; ++i) {       for (int j = 0; j < c; ++j) {         if (v[i][j] == '?') {           int dist = c, index = j;           for (int k = 0; k < c; ++k) {             if (v[i][k] != '?') {               if (abs(j - k) < dist) {                 dist = abs(j - k);                 index = k;               }             }           }           for (int k = min(j, index); k < max(j, index) + 1; ++k)             v[i][k] = v[i][index];         }       }     }      for (int i = 0; i < r; ++i) {       if (v[i][0] == '?') {         int dist = r, index = -1;         for (int k = 0; k < r; ++k)           ftqzwdfpad(v, dist, i, index, k);         assert(index >= 0);         for (int j = 0; j < c; ++j)           v[i][j] = v[index][j];       }     }      cout << "Case #" << testcase + 1 << ":" << endl;     for (int i = 0; i < r; ++i) {       for (int j = 0; j < c; ++j)         cout << v[i][j];        cout << endl;     }   }    return ret_val; }
#include <bits/stdc++.h> #include <bitset> #include <cctype> #include <climits> #include <deque> #include <iomanip> #include <iostream> #include <math.h> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdlib.h>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>   using namespace std;  
typedef long double ld; typedef long double LD; typedef vector<int> VI; typedef vector<VI> vvi; typedef pair<int, int> pii; typedef vector<pii> vii; typedef vector<string> vs;  typedef long long ll;            typedef unsigned long long ull;  typedef unsigned uint;  const double pi = acos(-1.0);  const double eps = 1e-11;      const int MAXI = 0x7fffffff; const int dx[] = {1, 0, -1, 0}; const int dy[] = {0, 1, 0, -1}; const char dz[] = "SENW"; struct debugger {   template <typename T> debugger &operator,(const T &v) {     cerr << v << " ";     return *this;   } } dbg;  void debugarr(int *arr, int n) {   cout << "[";   for (int i = 0; i < n; i++)     cout << arr[i] << " ";   cout << "]" << endl; }  char str[50][50]; bool vis[50][50]; 
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_16_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/lazyBit/outer_temp/lazyBit/A-small-practice_transformation.out",           "w", stdout);    ios::sync_with_stdio(true);    freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_16_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/lazyBit/A-small-practice.in",           "r", stdin);      int n, i, j, k, l, m, t, s = 0, d, r;   scanf("%d", &t);   ;   int c = 1;   while (t--) {     scanf("%d", &r);     ;     scanf("%d", &l);     ;     memset((vis), (0), sizeof(vis));     for (i = 0; i < r; i++) {       cin >> str[i];     }     for (i = 0; i < r; i++) {       for (j = 0; j < l; j++) {         if (str[i][j] != '?' && !vis[i][j]) {           k = i - 1;           while (k >= 0 && str[k][j] == '?') {             str[k][j] = str[i][j];             vis[k][j] = true;             k--;           }           k = i + 1;           while (k < r && str[k][j] == '?') {             str[k][j] = str[i][j];             vis[k][j] = true;             k++;           }         }       }     }      memset((vis), (0), sizeof(vis));     for (i = 0; i < r; i++) {       for (j = 0; j < l; j++) {         if (str[i][j] != '?' && !vis[i][j]) {           k = j - 1;           while (k >= 0 && str[i][k] == '?') {             str[i][k] = str[i][j];             vis[i][k] = true;             k--;           }           k = j + 1;           while (k < l && str[i][k] == '?') {             str[i][k] = str[i][j];             vis[i][k] = 1;             k++;           }         }       }     }     printf("Case #%d:\n", c++);     for (i = 0; i < r; i++) {       cout << str[i] << endl;     }   }   return (0); }
#include <bits/stdc++.h> #include <utility> #include <vector>  using namespace std; 
typedef long long ll; typedef pair<int, int> pii; typedef vector<int> vi; typedef vector<int> VI; typedef long double LD; typedef vector<vector<int>> vvi;  char a[77][77];  
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_18_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/fragusbot/A-small-practice.in",           "r", stdin);   freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_18_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/fragusbot/outer_temp/fragusbot/A-small-practice_transformation.out",           "w", stdout);   int tt;   scanf("%d", &tt);   for (int cc = 1; cc <= tt; ++cc) {     double begt = clock();     printf("Case #%d:\n", cc);     int n, m;     scanf("%d %d", &n, &m);     for (int i = 0; i < n; ++i) {       scanf("%s", a[i]);     }     for (int i = 0; i < n; ++i) {       for (int j = 0; j < m - 1; ++j) {         if (a[i][j] != '?' && a[i][j + 1] == '?') {           a[i][j + 1] = a[i][j];         }       }       for (int j = m - 1; j > 0; --j) {         if (a[i][j] != '?' && a[i][j - 1] == '?') {           a[i][j - 1] = a[i][j];         }       }     }     for (int i = 0; i < n - 1; ++i) {       for (int j = 0; j < m; ++j) {         if (a[i][j] != '?' && a[i + 1][j] == '?') {           a[i + 1][j] = a[i][j];         }       }     }     for (int i = n - 1; i > 0; --i) {       for (int j = 0; j < m; ++j) {         if (a[i][j] != '?' && a[i - 1][j] == '?') {           a[i - 1][j] = a[i][j];         }       }     }     for (int i = 0; i < n; ++i) {       printf("%s\n", a[i]);     }     fprintf(stderr, "case %d solved in %.3f\n", cc,             (clock() - begt) / CLOCKS_PER_SEC);   } }
#include <algorithm> #include <cstdio> #include <iostream> using namespace std; 
int main() {   freopen("A-small-attempt0.in", "r", stdin);   freopen("A-small-attempt0.out", "w", stdout);   int c, t, i, d, n, k, s;   double m;   scanf("%d", &t);   for (c = 0; c < t; c++) {     scanf("%d %d", &d, &n);     m = 0.0;     for (i = 0; i < n; i++) {       scanf("%d %d", &k, &s);       m = max(m, 1.0 * (d - k) / s);     }     printf("Case #%d: %.6f\n", c + 1, d / m);   }   return 0; }
#include <algorithm> #include <cstdio> #include <iostream> using namespace std;  
int main() {    freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_3_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/try/A-small-practice.in",           "r", stdin);   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_3_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/try/outer_temp/try/A-small-practice_transformation.out",           "w", stdout);   int t, i, d, n, k, s;   double m;   cin >> t;   for (int c = 0; c < t; c++) {     cin >> d >> n;     m = 0.0;     for (i = 0; i < n; i++) {       cin >> k >> s;       m = max(m, 1.0 * (d - k) / s);     }     printf("Case #%d: %.6f\n", c + 1, d / m);   }   return 0; }
#include <algorithm> #include <bitset> #include <cctype> #include <cmath> #include <cstdio> #include <cstring> #include <ctime> #include <functional> #include <iomanip> #include <iostream> #include <math.h> #include <numeric> #include <queue> #include <sstream> #include <stdio.h> #include <unordered_map> #include <utility> #include <vector> using namespace std; 
int main() {    int c, t, d, n, a, s;   double m;   cin >> t;   for (c = 0; c < t; c++) {     cin >> d >> n;     m = 0.0;     for (int i = 0; i < n; i++) {       cin >> a >> s;       m = max(m, 1.0 * (d - a) / s);     }    
#include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cstdio> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iostream> #include <iterator> #include <list> #include <math.h> #include <queue> #include <set> #include <stdio.h> #include <stdlib.h> using namespace std;
const long double PI = 3.1415926535897932384626433832795;  ifstream fin("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_4_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/sammyMaX/A-small-practice.in");  inline void wdojtciwuc(double &res, long long &dest) {   long long cur, speed;   fin >> cur >> speed;   res = max(res, 1.0 * (dest - cur) / speed); }  void solve() {   long long dest, nh;   fin >> dest >> nh;   double res = 0;   for (int i = 0; i < nh; i++)     wdojtciwuc(res, dest);    printf("%.12f\n", dest / res); }  
int main() {   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_4_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/sammyMaX/outer_temp/sammyMaX/A-small-practice_transformation.out",           "w", stdout);    cin.tie(0);   int get;   fin >> get;    for (int i = 0; i < get; i++)     printf("Case #%d: ", i + 1), solve();   return 0; }
#include <algorithm> #include <cstdio> #include <cstring> #include <iostream> #include <string> #include <vector> using namespace std; 
int main() {   int tt;    cin >> tt;    for (int t = 1; t <= tt; ++t) {     int d, n;     cin >> d >> n;      long long bk, bs, k, s;     cin >> k >> s;     k = d - k;     bk = k;     bs = s;     for (int i = 1; i < n; ++i) {       cin >> k >> s;       k = d - k;       if (s * bk < bs * k) {         bs = s;         bk = k;       }     }     bs *= d;     long long q = bs / bk, r = bs % bk;      cout << "Case #" << t << ": " << q << ".";     for (int i = 0; i < 6; ++i) {       r = r * 10;       cout << r / k;       r = r % k;     }     cout << endl;   }    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <iostream> #include <iterator> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std; 
const double EPS = 1e-9; typedef double td_d;  const int mod = 1000000007; const long double PI = 3.1415926535897932384626433832795; const int MAXN = 1005; const int MOD = 1000000007;  const int INF = ~(1 << 31); const double pi = acos(-1);  inline void snrzpanige(double &n, double &t2) {   td_d a, b;   cin >> a >> b;   td_d t = (n - a) / b;   t2 = max(t, t2); }  inline void zcwacqhzac(std::ofstream &fout, int &u) {   td_d n, m;   cin >> n >> m;   td_d t2 = 0;   for (int i = (0); i < (m); i++)     snrzpanige(n, t2);   fout << "Case #" << u + 1 << ": " << setprecision(10) << fixed << n / t2        << endl; }  
int main() {    ofstream fout("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_7_Usenix_RF_1.0_True_MCTS_Classic_True/kuzphi/bennikartefla/outer_temp/bennikartefla/A-small-practice_transformation.out");   int t;   cin >> t;   for (int u = (0); u < (t); u++)     zcwacqhzac(fout, u);   return 0; }
#include <bits/stdc++.h> using namespace std; 
typedef long long ll; typedef long long LL; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<int> vi; void open() {   freopen("D:/OneDrive/Code/GCJ/A-small-attempt0.in", "r", stdin);   freopen("D:/OneDrive/Code/GCJ/out.txt", "w", stdout); }  
int main(void) {   open();   int tc;   scanf("%d", &tc);    for (int ct = 1; ct <= tc; ct++) {     int d, n;     scanf("%d", &d);     scanf("%d", &n);     double maxi = 0.0;      for (int i = 0; i < n; i++) {       int st, sp;       scanf("%d", &st);       scanf("%d", &sp);       maxi = max(maxi, 1.0 * (d - st) / sp);     }      printf("Case #%d: %.7lf\n", ct, 1.0 * d / maxi);     cerr << "Test " << ct << " done \n";   }   return 0; }
#include <bits/stdc++.h> #include <bitset> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <utility> #include <vector> using namespace std; 
ofstream fout;  typedef unsigned long long ull; typedef set<int> si; typedef double td_d; typedef long double ld; typedef pair<int, int> ii; typedef pair<int, int> pii;  using VI = vector<int>; using VVI = vector<VI>; using PII = pair<int, int>; using LL = long long; using VL = vector<LL>; using VVL = vector<VL>; using PLL = pair<LL, LL>; using VS = vector<string>; template <class S, class T> istream &operator>>(istream &q, pair<S, T> &p) {   return q >> p.first >> p.second; } template <class S, class T> ostream &operator<<(ostream &os, const pair<S, T> &p) {   return os << p.first << " " << p.second; }  const double EPS = 1e-10; const double PI = acos(-1.0); const LL MOD = 1e9 + 7;  inline void wtmuiwkkpw(int &t) {   LL D, N;   cin >> D >> N;   td_d mn = 0;   vector<PLL> xs(N);   {     int i = (0);     while (i < (N)) {       cin >> xs[i];       ++i;     }   }   for (int i = (0); i < (N); ++i)     mn = max(mn, (D - xs[i].first) * 1. / xs[i].second);   td_d ans = D / mn;   fout << "Case #" << t << ": " << fixed << setprecision(9) << ans << endl; }  
int main() {   fout.open("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_9_Usenix_RF_1.0_True_MCTS_Classic_True/ibrahim5253/okaduki/outer_temp/okaduki/A-small-practice_transformation.out");    cin.tie(0);   ios_base::sync_with_stdio(false);    int T;   cin >> T;   int t;   for (t = (1); t < (T + 1); ++t)     wtmuiwkkpw(t);    return 0; }
#include <bits/stdc++.h> #include <stdio.h> using namespace std;
using VI = vector<int>; using VVI = vector<VI>; using PII = pair<int, int>; using LL = long long; using VL = vector<LL>; using VVL = vector<VL>; using PLL = pair<LL, LL>; using VS = vector<string>; template <class S, class T> istream &operator>>(istream &is, pair<S, T> &p) {   return is >> p.first >> p.second; } template <class S, class T> ostream &operator<<(ostream &os, const pair<S, T> &p) {   return os << p.first << " " << p.second; } template <class T> void maxi(T &x, T y) {   if (x < y)     x = y; } template <class T> void mini(T &x, T y) {   if (x > y)     x = y; }  
int main() {   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_9_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/okaduki/outer_temp/okaduki/A-small-practice_transformation.out",           "w", stdout);    freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_9_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/okaduki/A-small-practice.in",           "r", stdin);    cin.tie(0);    int r;   cin >> r;   for (int m = (1); m < (r + 1); ++m) {     LL D, N;     cin >> D >> N;     double mn = 0;     vector<PLL> n(N);     for (int i = (0); i < (N); ++i)       cin >> n[i];     {       int i = (0);       while (i < (N)) {         mn = max(mn, (D - n[i].first) * 1. / n[i].second);         ++i;       }     }     double ans = D / mn;     printf("Case #%d: %.9f\n", m, ans);   }    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector>   using namespace std;
const int MOD = 1000000007; typedef vector<int> VI; typedef long double ld; typedef pair<int, int> ii; typedef long double LD; typedef set<int> si;  using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  inline void legbkznzzr(ll &a, ll &b, ll &t) {   a = b;   b = t; }  ll gcd(ll a, ll b) {   ll t;   while ((t = a % b) != 0)     legbkznzzr(a, b, t);   return b; }  ll fast_exp(ll base, ll n, ll m) {   if (n == 0)     return 1;   ll t = fast_exp(base, n / 2, m);   if (n % 2 == 0)     return (t * t) % m;   else     return (((t * t) % m) * base) % m; }  bool is_set(int i, ll mask) { return (mask >> i) & 1; }  int count_bits(ll mask) {   int ans = 0;   for (int i = 0; i < 64; ++i)     if (is_set(i, mask))       ++ans;   return ans; }  int first_bit(ll mask) {   int i = 0;   while (i < 64)     if (is_set(i++, mask))       return i - 1;   return -1; }  inline void gxbktbdbkt(int &i) {   ll d, n;   cin >> d >> n;   double mt = 0;   for (int j = 0; j < n; ++j) {     ll N, s;     cin >> N >> s;     mt = max(mt, (d - N) / static_cast<double>(s));   }   cout << "Case #" << i << ": " << fixed << setprecision(10) << d / mt << "\n";   ++i; }  
int main() {    freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_11_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/ibrahim5253/A-small-practice.in",           "r", stdin);    freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_11_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/ibrahim5253/outer_temp/ibrahim5253/A-small-practice_transformation.out",           "w", stdout);    int t;   cin >> t;   {     int i = 1;     while (i <= t)       gxbktbdbkt(i);   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cstdio> #include <cstring> #include <stdio.h> #include <vector> using namespace std;
using LL = long long;  inline void mwnddjusaz(int &d, double &t) {   int k, s;   scanf("%d %d ", &k, &s);   t = max((1.0 * d - k) / s, t); }  inline void mdzimwoyqq(int &d, double &t) { mwnddjusaz(d, t); }  inline void fehfuirrvs(int &kbmi_Var) {   int d, ifki_Var;   scanf("%d %d ", &d, &ifki_Var);   double t = 0;   while (ifki_Var--)     mdzimwoyqq(d, t);   double ans = d / t;   printf("Case #%d: %.10f\n", ++kbmi_Var, ans); }  inline void ushgcazzsh(int &kbmi_Var) { fehfuirrvs(kbmi_Var); }  
int main() {   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_12_Usenix_RF_1.0_True_MCTS_Classic_True/iPeter/jiian/A-small-practice.in",           "r", stdin);    int tt, kbmi_Var = 0;   scanf("%d ", &tt);   for (; tt--;)     ushgcazzsh(kbmi_Var);   return 0; }
#include <bits/stdc++.h> #include <iomanip> #include <iostream> #include <set> #include <utility> #include <vector> using namespace std; 
typedef long long ll; typedef pair<int, int> pii; typedef pair<int, int> PII; typedef vector<int> vi; typedef long double LD; typedef set<int> si;  using LL = long long;  
int main() {   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_12_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/jiian/A-small-practice.in",           "r", stdin);   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_12_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/jiian/outer_temp/jiian/A-small-practice_transformation.out",           "w", stdout);   int solve, cas = 0;   cin >> solve;   while (solve--) {     int d, n;     cin >> d >> n;     double t = 0;     while (n--) {       int k, s;       cin >> k >> s;       t = max((1.0 * d - k) / s, t);     }     double ans = d / t;     cout << "Case #" << ++cas << ": " << fixed << setprecision(10) << ans          << "\n";   }   return 0; }
#include <bits/stdc++.h> #include <fstream> #include <iomanip> #include <iostream> #include <set> #include <utility> #include <vector> using namespace std; 
const long double PI = 3.1415926535897932384626433832795; ofstream fout;  ifstream fin;  typedef unsigned long long ull; typedef vector<int> vi; typedef vector<int> VI; typedef pair<int, int> ii; typedef pair<int, int> pii; typedef pair<int, int> PII; typedef long double LD; typedef set<int> si;  using LL = long long;  inline void gyuobzdbky(int &d, double &t) {   int p, s;   fin >> p >> s;   t = max((1.0 * d - p) / s, t); }  inline void nkayodrpky(int &a) {   int d, n;   fin >> d >> n;   double t = 0;   for (; n--;)     gyuobzdbky(d, t);   double ans = d / t;   fout << "Case #" << ++a << ": " << fixed << setprecision(10) << ans << "\n"; }  
int main() {   fout.open("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_12_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/jiian/outer_temp/jiian/A-small-practice_transformation.out");    fin.open("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_12_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/jiian/A-small-practice.in");    int ret_val = 0;    int get, a = 0;   fin >> get;   while (get--) {     nkayodrpky(a);   }   return ret_val; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std; 
ifstream fin;  int n; double m, s[2000], d[2000]; inline void ykfxttejig(double &get, int &i) {   fin >> d[i] >> s[i];   get = max(get, (m - d[i]) / s[i]); }  inline void fiswagwcug(double &get, int &i) {   ykfxttejig(get, i);   ++i; }  
int main(void) {   fin.open("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_13_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/iPeter/A-small-practice.in");    int t;   fin >> t;    int a;   {     a = 1;     while (a <= t) {       fin >> m >> n;       double get = 0;       int i;       {         i = 0;         while (i < n)           fiswagwcug(get, i);       }         printf("Case #%d: %.8lf\n", a, m / get);       a++;     }   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cassert> #include <climits> #include <complex> #include <cstdio> #include <cstdlib> #include <ctime> #include <iterator> #include <map> #include <numeric> #include <queue> #include <set> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> #include <vector>  using namespace std; 
typedef set<int> si; typedef vector<vector<int>> vvi; typedef long double LD; typedef unsigned long long ull; typedef vector<int> VI; typedef long long LL; typedef pair<int, int> pii; typedef pair<int, pii> iii;  LL pwr(LL base, LL p, LL mod = (1000000007LL)) {   LL ans = 1;   while (p) {     if (p & 1)       ans = (ans * base) % mod;     base = (base * base) % mod;     p /= 2;   }   return ans; }  LL gcd(LL a, LL b) {   if (b == 0)     return a;   return gcd(b, a % b); }  int n; double D, dist[1005], speed[1005];  bool possible(double mid) {   {     int i = 1;     while (i <= n) {       if (speed[i] > mid) {         i++;         continue;       }       double x = (dist[i] / speed[i]) / (1.0 / speed[i] - 1.0 / mid);       if (x <= D)         return false;       i++;     }   }   return true; }  
int main() {   int ret_val = 0;    cin.tie(0);   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_14_Usenix_RF_1.0_True_MCTS_Classic_True/lazyBit/satyaki3794/A-small-practice.in",           "r", stdin);    int t, x = 1;   cin >> t;   while (t--) {      cin >> D >> n;     for (int i = 1; i <= n; i++)       cin >> dist[i] >> speed[i];      double ans = 0, lo = 0, hi = 1e18 + 2;     for (int iter = 0; iter < 100; iter++) {       double mid = (lo + hi) / 2;       if (possible(mid)) {         ans = max(ans, mid);         lo = mid;       } else {         hi = mid;       }     }      cout << "Case #" << x++ << ": " << fixed << setprecision(7) << ans << endl;   }   return ret_val; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std; 
const double eps = 1e-9; const int MAXN = 1005; const int MOD = 1000000007; typedef double td_d; typedef pair<int, int> PII; typedef unsigned long long ull; typedef long double LD; typedef long long LL; typedef vector<int> vi; typedef vector<int> VI; typedef set<int> si; typedef vector<vector<int>> vvi;  inline void cemhzcywzt(std::ifstream &fin, double &max_time, LL &d, LL &k,                        LL &s) {   fin >> k >> s;    max_time = max(max_time, 1.0 * (d - k) / s); }  
int main(int tc, char **T) {   int ret_val = 0;   ifstream fin("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_15_Usenix_RF_1.0_True_MCTS_Classic_True/lazyBit/gultai4ukr/A-small-practice.in");    int get;   fin >> get;   for (int testcase = 0; testcase < get; ++testcase) {     LL d, n, k, s;     fin >> d >> n;     td_d max_time = 0;     for (int i = 0; i < n; ++i)       cemhzcywzt(fin, max_time, d, k, s);      printf("Case #%d: %.7f\n", testcase + 1, d / max_time);   }   fin.close();    return ret_val; }
#include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <fstream> #include <functional> #include <list> #include <map> #include <math.h> #include <stdio.h> #include <stdlib.h> #include <utility> #include <vector>  using namespace std; 
const int INF = 1000000000; const long double PI = 3.1415926535897932384626433832795; typedef vector<vector<int>> vvi; typedef vector<int> vi; typedef long long LL; typedef long double LD; typedef pair<int, int> PII; typedef pair<PII, int> para; const int inf = 1e9 + 7; const int maxN = 1e6 + 5;  int d, n, start[maxN], speed[maxN], t;  
int main() {   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_16_Usenix_RF_1.0_True_MCTS_Classic_True/lazyBit/Mucosolvan/A-small-practice.in", "r", stdin);    int ret_val = 0;    cin >> t;   for (int x = (1); x <= ((t)); ++x) {     cin >> d >> n;     long double p = 0;     for (int i = (0); i <= ((n)-1); ++i) {       cin >> start[i] >> speed[i];       long double time = (long double)(d - start[i]) / (long double)speed[i];       p = max(p, time);     }      cout << "Case #" << x << ": ";     cout << fixed << setprecision(12) << d / p << endl;   }   return ret_val; }
#include <bits/stdc++.h> #include <bitset> #include <deque> #include <fstream> #include <iomanip> #include <iostream> #include <queue> #include <set> #include <sstream> #include <stack>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>   using namespace std; 
ifstream fin;  typedef double dbl; typedef vector<int> vi; typedef vector<vi> vvi; typedef pair<int, int> pii; typedef vector<pii> vii; typedef vector<string> vs;  typedef long long LL;         typedef unsigned long long ULL;  typedef unsigned uint;    struct debugger {};  
int main() {   fin.open("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_16_Usenix_RF_1.0_True_MCTS_Classic_True/4yn/lazyBit/A-small-practice.in");    ;     int n, j, k, l, m, t, eifi_Var = 0, tc, p;   fin >> t;   ;   int c = 1;   for (; t--;) {     fin >> tc;     ;     fin >> n;     ;     dbl blpd_Var = 0.0;     dbl r;      for (int i = 0; i < n; i++) {       fin >> k;       ;       fin >> eifi_Var;       ;       dbl r = ((tc - k) * 1.0) / eifi_Var;        blpd_Var = max(blpd_Var, r);     }     printf("Case #%d: %0.6lf\n", c++, tc / blpd_Var);   }   return (0); }
#include <iostream>  using namespace std;
int solve(int cc) {   long long d, n, k, s;   long double mt = 0;   cin >> d >> n;   for (int i = 0; i < n; i++) {     cin >> k >> s;     long double tt = (d - k);     tt /= s;     if (i == 0 || mt < tt) {       mt = tt;     }   }   cout << "Case #" << cc << ": " << fixed << d / mt << endl;   return 1; }  
int main() {   int t;   cin >> t;   cout.precision(7);   for (int i = 1; i <= t; i++) {     solve(i);   }   return 0; }
#include <bits/stdc++.h> #include <iostream> #include <stdio.h>  using namespace std; 
int solve(int cc) {   int ret_val = 1;   long long d, ans, roal_Var, tljl_Var;   long double mt = 0;   scanf("%lld %lld ", &d, &ans);   for (int i = 0; i < ans; i++) {     scanf("%lld %lld ", &roal_Var, &tljl_Var);     long double tt = (d - roal_Var);     tt /= tljl_Var;     if (i == 0 || mt < tt) {       mt = tt;     }   }   cout << "Case #" << cc << ": " << fixed << d / mt << endl;   return ret_val; }  
int main() {   int ret_val = 0;   ios::sync_with_stdio(false);   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_18_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/Thanabhat/outer_temp/Thanabhat/A-small-practice_transformation.out",           "w", stdout);   int hrti_Var;   scanf("%d ", &hrti_Var);   cout.precision(7);   for (int i = 1; i <= hrti_Var; i++) {     solve(i);   }   return ret_val; }
#include <bits/stdc++.h> #include <utility> #include <vector>  using namespace std;
typedef long long ll; typedef pair<int, int> pii; typedef vector<int> vi; typedef vector<int> VI; typedef long double LD; typedef vector<vector<int>> vvi;  const int N = 1010;  int a[N]; long long b[N];  
int main() {   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_18_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/fragusbot/A-small-practice.in",           "r", stdin);   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_18_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/fragusbot/outer_temp/fragusbot/A-small-practice_transformation.out",           "w", stdout);   int tt;   scanf("%d", &tt);   for (int cc = 1; cc <= tt; ++cc) {     double begt = clock();     printf("Case #%d: ", cc);     int d, n;     scanf("%d %d", &d, &n);     for (int i = 0; i < n; ++i) {       int foo, bar;       scanf("%d %d", &foo, &bar);       a[i] = d - foo;       b[i] = 1LL * d * bar;     }     LD l = 0, r = 1e16;     for (int it = 0; it < 1000; ++it) {       LD s = (l + r) * 0.5;       bool can = true;       for (int i = 0; i < n; ++i) {         if (b[i] < a[i] * s) {           can = false;         }       }       if (can) {         l = s;       } else {         r = s;       }     }     printf("%.15f\n", (double)((l + r) * 0.5));     fprintf(stderr, "case %d solved in %.3f\n", cc,             (clock() - begt) / CLOCKS_PER_SEC);   } }
#include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cstdio> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iostream> #include <iterator> #include <list> #include <math.h> #include <queue> #include <set> #include <stdio.h> #include <stdlib.h>  using namespace std; 
const int N = 1010;  int a[N]; long long b[N];  inline void kejvihyhsd(_Bool &can) { can = 0; }  
int main() {   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_18_Usenix_RF_1.0_True_MCTS_Classic_True/try/fragusbot/A-small-practice.in",           "r", stdin);   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_18_Usenix_RF_1.0_True_MCTS_Classic_True/try/fragusbot/outer_temp/fragusbot/A-small-practice_transformation.out",           "w", stdout);   int tt;   scanf("%d ", &tt);   for (int t = 1; t <= tt; ++t) {     double j = clock();     printf("Case #%d: ", t);     int d, n;     scanf("%d %d ", &d, &n);     for (int i = 0; i < n; ++i) {       int foo, bar;       scanf("%d %d ", &foo, &bar);       a[i] = d - foo;       b[i] = 1LL * d * bar;     }     long double v = 0, get = 1e16;     for (int it = 0; it < 1000; ++it) {       long double s = (v + get) * 0.5;       bool can = true;        for (int i = 0; i < n; ++i) {         if (b[i] < a[i] * s)           kejvihyhsd(can);       }       if (can) {         v = s;       } else {         get = s;       }     }     printf("%.15f\n", (double)((v + get) * 0.5));     fprintf(stderr, "case %d solved in %.3f\n", t,             (clock() - j) / CLOCKS_PER_SEC);   }   return 0; }
#include <algorithm> #include <bitset> #include <cmath> #include <cstdio> #include <cstring> #include <ctime> #include <iostream> #include <map> #include <queue> #include <set> #include <string> #include <vector> #pragma comment(linker, "/STACK:256000000")  using namespace std; 
void readData() {}  const int maxN = 1100; double d; long long n; double s[maxN], k[maxN];  void solve(int test) {   if (test == 29) {     int f = 0;   }   cin >> d >> n;   for (int i = 0; i < n; ++i) {     cin >> k[i] >> s[i];   }    double l = 0.0, r = 1e18;   for (int t = 0; t < 400; ++t) {     double m = (l + r) / 2.0;     bool ok = true;      double p = d / m;     for (int j = 0; j < n; ++j) {       if (k[j] + s[j] * p < d) {         ok = false;         break;       }     }      if (ok) {       l = m;     } else {       r = m;     }   }    printf("Case #%d: %.10lf\n", test, (l + r) / 2.0); }  
int main(int argc, char *argv[]) {   freopen("input.txt", "r", stdin);   freopen("output.txt", "w", stdout);    int left_bound, right_bound;      int t;   cin >> t;   left_bound = 1, right_bound = t;   for (int i = 1; i <= t; ++i) {     if (i >= left_bound && i <= right_bound) {       solve(i);     } else {       readData();     }     cerr << i << ": " << clock() << endl;   }    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cmath> #include <complex> #include <cstdio> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <string> #include <utility> #include <vector> #pragma comment(linker, "/STACK:256000000")  using namespace std; 
const double EPS = 1e-9; typedef double td_d;  ifstream fin;  void get() {}  const int maxN = 1100; double d; long long n; double s[maxN], N[maxN];  void solve(int test) {   if (test == 29) {     int f = 0;   }   fin >> d >> n;    for (int i = 0; i < n; ++i) {     fin >> N[i] >> s[i];   }    td_d l = 0.0, r = 1e18;   for (int t = 0; t < 400; ++t) {     td_d m = (l + r) / 2.0;     int ok = 1;      td_d p = d / m;     for (int j = 0; j < n; ++j) {       if (N[j] + s[j] * p < d) {         ok = 0;         break;       }     }      if (ok) {       l = m;     } else {       r = m;     }   }    printf("Case #%d: %.10lf\n", test, (l + r) / 2.0); }  
int main(int argc, char *tc[]) {   fin.open("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_19_Usenix_RF_1.0_True_MCTS_Classic_True/sammyMaX/sdya/A-small-practice.in");    int ret_val = 0;    int left_bound, right_bound;   int t;   fin >> t;   left_bound = 1, right_bound = t;   for (int i = 1; i <= t; ++i) {     if (i >= left_bound && i <= right_bound) {       solve(i);     } else       get();      cerr << i << ": " << clock() << endl;   }   return ret_val; }
#include <algorithm> #include <cmath> #include <cstdio> #include <iomanip> #include <iostream> #include <map> #include <set> #include <string> #include <vector>  using namespace std;  
const int N = 1100;  int n, cnt[6]; int ans[N]; char cc[6] = {'R', 'O', 'Y', 'G', 'B', 'V'};  void pre() { ans[0] = -10000; }  bool nb(int u, int v) {   int res = u - v;   return (res == 1 || res == -1 || res == 5 || res == -5 || res == 0); }  bool dfs(int p) {   if (p == n + 1) {     if (!nb(ans[1], ans[n])) {       return true;     } else {       return false;       for (int i = 1; i <= n; ++i) {         printf("%c", cc[ans[i]]);       }       cout << endl;     }   }   vector<int> pos;   int maxc = -10000;   for (int i = 0; i < 6; ++i) {     if (cnt[i] > maxc && !nb(i, ans[p - 1])) {       pos.clear();       pos.push_back(i);       maxc = cnt[i];     } else if (cnt[i] == maxc) {       pos.push_back(i);     }   }   if (maxc == -10000) {     return false;   }   for (int i = 0; i < (int)pos.size(); ++i) {     int u = pos[i];     if (!nb(u, ans[p - 1])) {       cnt[u]--;       ans[p] = u;       bool res = dfs(p + 1);       if (res) {         return true;       }       cnt[u]++;     }   }   return false; }  void work() {   cin >> n;   int maxc = 0;   for (int i = 0; i < 6; ++i) {     cin >> cnt[i];     if (cnt[i] > maxc) {       maxc = cnt[i];     }   }   if (maxc > n / 2) {     cout << "IMPOSSIBLE" << endl;     return;   }   if (dfs(1)) {     for (int i = 1; i <= n; ++i) {       printf("%c", cc[ans[i]]);     }     cout << endl;   } else {     cout << "IMPOSSIBLE" << endl;   } }  
int main() {   freopen("my.in", "r", stdin);   freopen("out.txt", "w", stdout);    pre();   int q;   cin >> q;   for (int i = 1; i <= q; ++i) {     printf("Case #%d: ", i);     work();   }   return 0; }
#include <algorithm> #include <cmath> #include <cstdio> #include <iomanip> #include <iostream> #include <map> #include <set> #include <string> #include <vector>  using namespace std; 
const double EPS = 1e-9;  const int N = 1100;  int n, cnt[6]; int ans[N]; char cc[6] = {'R', 'O', 'Y', 'G', 'B', 'V'};  void pre() { ans[0] = -10000; }  bool nb(int u, int v) {   int res = u - v;   return (res == 1 || res == -1 || res == 5 || res == -5 || res == 0); }  bool dfs(int p) {   if (p == n + 1) {     if (!nb(ans[1], ans[n])) {       return true;     } else {       return false;       for (int i = 1; i <= n; ++i) {         cout << cc[ans[i]];       }       cout << endl;     }   }   vector<int> pos;   int maxc = -10000;   for (int i = 0; i < 6; ++i) {     if (cnt[i] > maxc && !nb(i, ans[p - 1])) {       pos.clear();       pos.push_back(i);       maxc = cnt[i];     } else if (cnt[i] == maxc) {       pos.push_back(i);     }   }   if (maxc == -10000) {     return false;   }   for (int i = 0; i < (int)pos.size(); ++i) {     int u = pos[i];     if (!nb(u, ans[p - 1])) {       cnt[u]--;       ans[p] = u;       bool res = dfs(p + 1);       if (res) {         return true;       }       cnt[u]++;     }   }   return false; }  void work() {   cin >> n;   int maxc = 0;   for (int i = 0; i < 6; ++i) {     cin >> cnt[i];     if (cnt[i] > maxc) {       maxc = cnt[i];     }   }   if (maxc > n / 2) {     cout << "IMPOSSIBLE" << endl;     return;   }   if (dfs(1)) {     for (int i = 1; i <= n; ++i) {       cout << cc[ans[i]];     }     cout << endl;   } else     cout << "IMPOSSIBLE" << endl; }  
int main() {    pre();   int q;   cin >> q;   for (int i = 1; i <= q; ++i) {     cout << "Case #" << i << ": ";     work();   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cmath> #include <cstdio> #include <iomanip> #include <iostream> #include <map> #include <set> #include <string> #include <utility> #include <vector>  using namespace std; 
typedef long long ll; typedef pair<int, int> ii;  const int N = 1100;  int n, cnt[6]; int ans[N]; char cc[6] = {'R', 'O', 'Y', 'G', 'B', 'V'};  void pre() { ans[0] = -10000; }  bool nb(int u, int v) {   int res = u - v;   return (res == 1 || res == -1 || res == 5 || res == -5 || res == 0); }  bool dfs(int p) {   if (p == n + 1) {     if (!nb(ans[1], ans[n])) {       return true;     } else {       return false;       for (int i = 1; i <= n; ++i) {         printf("%c", cc[ans[i]]);       }       cout << endl;     }   }   vector<int> pos;   int maxc = -10000;   for (int i = 0; i < 6; ++i) {     if (cnt[i] > maxc && !nb(i, ans[p - 1])) {       pos.clear();       pos.push_back(i);       maxc = cnt[i];     } else if (cnt[i] == maxc) {       pos.push_back(i);     }   }   if (maxc == -10000) {     return false;   }   for (int i = 0; i < (int)pos.size(); ++i) {     int u = pos[i];     if (!nb(u, ans[p - 1])) {       cnt[u]--;       ans[p] = u;       bool res = dfs(p + 1);       if (res) {         return true;       }       cnt[u]++;     }   }   return false; }  void work() {   cin >> n;   int maxc = 0;   for (int i = 0; i < 6; ++i) {     cin >> cnt[i];     if (cnt[i] > maxc) {       maxc = cnt[i];     }   }   if (maxc > n / 2) {     cout << "IMPOSSIBLE" << endl;     return;   }   if (dfs(1)) {     for (int i = 1; i <= n; ++i) {       printf("%c", cc[ans[i]]);     }     cout << endl;   } else {     cout << "IMPOSSIBLE" << endl;   } }  
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_5_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/Tashi711/A-small-practice.in",           "r", stdin);   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_5_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/Tashi711/outer_temp/Tashi711/A-small-practice_transformation.out",           "w", stdout);    pre();   int q;   cin >> q;   for (int i = 1; i <= q; ++i) {     printf("Case #%d: ", i);     work();   }   return 0; }
#include <algorithm> #include <cstdio> #include <cstring> #include <iostream> #include <string> #include <vector> using namespace std; 
int main() {   int tt;    cin >> tt;    for (int t = 1; t <= tt; ++t) {     int n, r, o, y, g, b, v;     cin >> n >> r >> o >> y >> g >> b >> v;     string s = "";      if ((r > n / 2) || (y > n / 2) || (b > n / 2))       s = "IMPOSSIBLE";     else {       vector<pair<int, string>> v;       v.push_back({r, "R"});       v.push_back({y, "Y"});       v.push_back({b, "B"});       sort(v.begin(), v.end());       reverse(v.begin(), v.end());       while (v[0].first > 0) {         s += v[0].second;         v[0].first--;         if (v[1].first > v[2].first) {           s += v[1].second;           v[1].first--;         } else {           s += v[2].second;           v[2].first--;         }       }       while ((v[1].first > 0) || (v[2].first > 0)) {         if (v[1].first > v[2].first) {           s += v[1].second;           v[1].first--;         } else {           s += v[2].second;           v[2].first--;         }       }     }     cout << "Case #" << t << ": " << s << endl;   }    return 0; }
#include <bits/stdc++.h> #include <iomanip> #include <iostream> #include <stdio.h> using namespace std;  
using VI = vector<int>; using VVI = vector<VI>; using PII = pair<int, int>; using LL = long long; using VL = vector<LL>; using VVL = vector<VL>; using PLL = pair<LL, LL>; using VS = vector<string>; template <class S, class T> istream &operator>>(istream &is, pair<S, T> &p) {   return is >> p.first >> p.second; } template <class S, class T> ostream &operator<(ostream &os, const pair<S, T> &p) {   return os << p.first << " " << p.second; } template <class T> void maxi(T &x, T y) {   if (x < y)     x = y; }  bool check(VI tmp, const string &s) {   string col = "ROYGB";   for (int i = 0; i < int((s).size()); ++i) {     int ix = col.find(s[i]);     tmp[ix]--;   }   for (int i = (0); i < (6); ++i)     if (tmp[i] != 0)       return false;    if (s[0] == s.back())     return false;   for (int i = (0); i < (int((s).size()) - 1); ++i)     if (s[i] == s[i + 1])       return false;   return true; }  
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_9_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/okaduki/outer_temp/okaduki/A-small-practice_transformation.out",           "w", stdout);    freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_9_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/okaduki/A-small-practice.in",           "r", stdin);    cin.tie(0);    int cas;   cin >> cas;   for (int t = (1); t < (cas + 1); ++t) {     int N;     string col = "ROYGB";     VI xs(6);     cin >> N;      for (int i = (0); i < (6); ++i)       cin >> xs[i];     VI orig = xs;      int mx = max(xs[0], max(xs[1 * 2], xs[2 * 2]));     bool ok = (mx <= N - mx);      if (!ok) {       cout << "Case #" << t << ": IMPOSSIBLE\n";     } else {       string ans(N, '*');       int ix = -1;       for (int i = (0); i < (6); ++i)         if (xs[i] == mx)           ix = i;        for (int i = (0); i < (6); ++i)         if (i != ix && xs[i]) {           ans[0] = col[i];           xs[i]--;           ix = i;           break;         }       for (int i = 1; i < N; ++i) {         int mix = -1;         for (int m = (0); m < (6); ++m) {           if ((mix == -1 || xs[mix] < xs[m]))             if (m != ix)               mix = m;         }         ans[i] = col[mix];         xs[mix]--;         ix = mix;       }        if (!check(orig, ans)) {         for (int i = (0); i < (6); ++i)           cout << orig[i] << " ";         cout << "\n";         cout << ans << "\n";         return 1;       }        cout << "Case #" << t << ": " << ans << "\n";     }   }    return 0; }
#include <algorithm> #include <bitset> #include <climits> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <iostream> #include <limits> #include <list> #include <map> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <string> #include <unordered_map> #include <vector> using namespace std;  
const int Maxn = 3010;  int tt; int efbi_Var; struct Rec {   int a, b, l; };  int t; int veei_Var[10], ans[Maxn]; vector<int> s[1010]; inline void edhidghkhx(int &hmai_Var, int &x) {   x = 4;   for (; hmai_Var <= veei_Var[0]; hmai_Var++)     s[(hmai_Var - 1) % veei_Var[x] + 1].push_back(0);   for (; hmai_Var <= t - veei_Var[x]; hmai_Var++)     s[(hmai_Var - 1) % veei_Var[x] + 1].push_back(2); }  inline void wnorzfbtng(int &hmai_Var) {   if (ans[hmai_Var] == 0)     printf("R");   if (ans[hmai_Var] == 2)     printf("Y");   if (ans[hmai_Var] == 4)     printf("B"); }  
int main() {    scanf("%d ", &tt);   while (tt--) {     printf("Case #%d: ", ++efbi_Var);     scanf("%d ", &t);     for (int hmai_Var = 0; hmai_Var < 6; hmai_Var++) {       scanf("%d ", &veei_Var[hmai_Var]);     }     int Max = max(veei_Var[0], max(veei_Var[2], veei_Var[4]));     if (t - Max < Max) {       puts("IMPOSSIBLE");       continue;     }     for (int hmai_Var = 1; hmai_Var <= 1000; hmai_Var++)       s[hmai_Var].clear();     int x = 0, hmai_Var = 1;     if (Max == veei_Var[0]) {       x = 0;       for (; hmai_Var <= veei_Var[2]; hmai_Var++)         s[(hmai_Var - 1) % veei_Var[x] + 1].push_back(2);       for (; hmai_Var <= t - veei_Var[x]; hmai_Var++) {         s[(hmai_Var - 1) % veei_Var[x] + 1].push_back(4);       }      } else if (Max == veei_Var[2]) {       x = 2;       for (; hmai_Var <= veei_Var[0]; hmai_Var++)         s[(hmai_Var - 1) % veei_Var[x] + 1].push_back(0);       for (; hmai_Var <= t - veei_Var[x]; hmai_Var++)         s[(hmai_Var - 1) % veei_Var[x] + 1].push_back(4);     } else       edhidghkhx(hmai_Var, x);     ans[0] = 0;     for (int hmai_Var = 1; hmai_Var <= veei_Var[x]; hmai_Var++) {       ans[++ans[0]] = x;       for (int uiri_Var = 0; uiri_Var < s[hmai_Var].size(); uiri_Var++)         ans[++ans[0]] = s[hmai_Var][uiri_Var];     }       for (int hmai_Var = 1; hmai_Var <= t; hmai_Var++)       wnorzfbtng(hmai_Var);     printf("\n");    }   return 0; }
#include <algorithm> #include <climits> #include <cmath> #include <cstdio> #include <cstring> #include <iostream> #include <iterator> #include <map> #include <queue> #include <set> #include <stack> #include <string> #include <unordered_map> #include <utility> #include <vector>   using namespace std; 
using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  ll gcd(ll a, ll b) {   ll t;   while ((t = a % b) != 0) {     a = b;     b = t;   }   return b; }  ll fast_exp(ll base, ll n, ll m) {   if (n == 0)     return 1;   ll t = fast_exp(base, n / 2, m);   if (n % 2 == 0)     return (t * t) % m;   else     return (((t * t) % m) * base) % m; }  bool is_set(int i, ll mask) { return (mask >> i) & 1; }  int count_bits(ll mask) {   int ans = 0;   for (int i = 0; i < 64; ++i)     if (is_set(i, mask))       ++ans;   return ans; }  int first_bit(ll mask) {   int i = 0;   while (i < 64)     if (is_set(i++, mask))       return i - 1;   return -1; }  
int main() {   ios::sync_with_stdio(false);   int t;   cin >> t;   for (int i = 1; i <= t; ++i) {     int n, r, o, y, g, b, v;     cin >> n >> r >> o >> y >> g >> b >> v;     int ma = n / 2;     cout << "Case #" << i << ": ";     if (r > ma || y > ma || b > ma) {       cout << "IMPOSSIBLE\n";       continue;     }     vector<pair<int, char>> V;     V.push_back(make_pair(r, 'R')), V.push_back(make_pair(y, 'Y')),         V.push_back(make_pair(b, 'B'));     sort(V.begin(), V.end());     char s[n + 1];     int p = 0;     int a = V[2].first;     while (a--)       s[p] = V[2].second, p = (p + 2) % n, p = (p == 0 ? 1 : p);     a = V[1].first;     while (a--)       s[p] = V[1].second, p = (p + 2) % n, p = (p == 0 ? 1 : p);     a = V[0].first;     while (a--)       s[p] = V[0].second, p = (p + 2) % n, p = (p == 0 ? 1 : p);     for (int i = 0; i < n; ++i)       cout << s[i];     cout << "\n";   }   return 0; }
#include <bits/stdc++.h> #include <fstream> #include <iomanip> #include <iostream> #include <set> #include <utility> #include <vector> using namespace std;
const int INF = 1000000000; const int mod = 1000000007; ifstream fin;  const int MAXN = 1005; typedef set<int> si; typedef long long ll; typedef pair<int, int> PII; typedef pair<int, int> pii; typedef unsigned long long ull; typedef vector<int> vi; typedef long double ld;  using LL = long long;  int a[6]; string s = "ROYGBV";  
int main() {   fin.open("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_12_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/jiian/A-small-practice.in");    int get, v = 0;   fin >> get;   while (get--) {     int n;     fin >> n;     for (int i = 0; i < 6; i++)       fin >> a[i];     string ans = "";     int flag = 0;     while (ans.size() < n) {       int mx = 0, c = 0;       {         int i = 0;         while (i < 6) {           if (s[i] == ans.back()) {             i++;             continue;           }           if (a[i] == mx)             if (ans.size())               if (s[i] == ans[0])                 mx = a[i], c = i;           if (a[i] > mx)             mx = a[i], c = i;           i++;         }       }       if (a[c] == 0) {         flag = 1;         break;       } else if (s[c] == ans.back()) {         flag = 1;         break;       }       ans.push_back(s[c]);       a[c]--;     }      if (ans.size() > 1 && ans[0] == ans.back())       flag = 1;     cout << "Case #" << ++v << ": ";     if (flag)       puts("IMPOSSIBLE");     else {       cout << ans << "\n";     }   }   return 0; }
#include <algorithm> #include <cstdio> #include <cstring> using namespace std;  
int N, R, O, Y, G, B, V; int s[2000]; 
int main(void) {   int t;   scanf("%d", &t);   for (int tt = 1; tt <= t; tt++) {     scanf("%d%d%d%d%d%d%d", &N, &R, &O, &Y, &G, &B, &V);      printf("Case #%d: ", tt);      if (O > B || G > R || V > Y) {       puts("IMPOSSIBLE");       continue;     }      if (O == B && O > 0) {       if (O + B < N) {         puts("IMPOSSIBLE");       } else {         for (; O > 0; --O)           printf("OB");         puts("");       }       continue;     }     if (G == R && G > 0) {       if (G + R < N) {         puts("IMPOSSIBLE");       } else {         for (; G > 0; --G)           printf("RG");         puts("");       }       continue;     }     if (Y == V && V > 0) {       if (Y + V < N) {         puts("IMPOSSIBLE");       } else {         for (; V > 0; --V)           printf("YV");         puts("");       }       continue;     }      B -= O;     R -= G;     Y -= V;     int m = B + R + Y;     if (B > R + Y || R > B + Y || Y > B + R) {       puts("IMPOSSIBLE");       continue;     }     memset(s, -1, sizeof(s));      int maxc = 0, c = R, c2 = Y, mc2 = 1, mc3 = 2;     if (B > R && B > Y)       maxc = 2, c = B, mc3 = 0;     if (Y > B && Y > R)       maxc = 1, c = Y, c2 = R, mc2 = 0;      for (int i = 0; i < c; i++) {       s[i * 2] = maxc;     }     for (int i = m - 1 - (m % 2), j = 0; j < c2; i -= 2, ++j) {       s[i] = mc2;     }     for (int i = 0; i < m; i++) {       if (s[i] < 0)         s[i] = mc3;     }      for (int i = 0; i < m; i++) {       if (s[i] == 0) {         printf("R");         for (; G > 0; --G)           printf("GR");          } else if (s[i] == 1) {         printf("Y");         for (; V > 0; --V)           printf("VY");               } else {         printf("B");         for (; O > 0; --O)           printf("OB");                }     }     puts("");     }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <numeric> #include <queue> #include <set> #include <stack> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std; 
const int MAXN = 1005; const int mod = 1000000007; const int INF = 1000000000; const double EPS = 1e-9; const double eps = 1e-9; const int MOD = 1000000007; typedef unsigned long long ull; typedef long double ld; typedef long long LL; typedef pair<int, int> PII; typedef vector<int> vi; typedef long double LD; typedef vector<vector<int>> vvi;  bool comp(pair<int, char> &get, pair<int, char> &r) {   return get.first < r.first; }  
int main(int T, char **argv) {   int ret_val = 0;   ifstream fin("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_15_Usenix_RF_1.0_True_MCTS_Classic_True/lazyBit/gultai4ukr/A-small-practice.in");    int t;   fin >> t;   for (int testcase = 0; testcase < t; ++testcase) {     int n, r, o, y, g, b, v;     fin >> n >> r >> o >> y >> g >> b >> v;     int m = max(r, max(y, b));     cout << "Case #" << testcase + 1 << ": ";      pair<int, char> col[] = {{r, 'R'}, {y, 'Y'}, {b, 'B'}};     sort(col, &col[3], comp);      if (r + y + b == 1) {       int i;       for (i = 0; i < 3; ++i) {         if (col[i].first) {           cout << col[i].second << endl;         }       }       continue;     }      if (m > (r + y + b) / 2.0) {       cout << "IMPOSSIBLE" << endl;       continue;     }      while (col[1].first > col[0].first) {       cout << col[2].second << col[1].second;       col[2].first--;       col[1].first--;     }     int odd = 0;     while (col[2].first) {       cout << col[2].second << col[odd % 2].second;       col[2].first--;       col[odd % 2].first--;       odd++;     }     while (col[odd % 2].first) {       cout << col[odd % 2].second;       col[odd % 2].first--;       odd++;     }     cout << endl;   }   fin.close();    return ret_val; }
#include <bitset> #include <deque> #include <iomanip> #include <iostream> #include <queue> #include <set> #include <sstream> #include <stack>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>   using namespace std;
typedef vector<int> vi; typedef vector<vi> vvi; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<string> vs;  typedef long long LL;            typedef unsigned long long ULL;  typedef unsigned uint;  const double pi = acos(-1.0);  const double eps = 1e-11;      const int MAXI = 0x7fffffff; const int dx[] = {1, 0, -1, 0}; const int dy[] = {0, 1, 0, -1}; const char colors[] = {'R', 'O', 'Y', 'G', 'B', 'V'}; const char dz[] = "SENW"; struct debugger {   template <typename T> debugger &operator,(const T &v) {     cerr << v << " ";     return *this;   } } dbg;  void debugarr(int *arr, int n) {   cout << "[";   for (int i = 0; i < n; i++)     cout << arr[i] << " ";   cout << "]" << endl; }   vector<pair<int, int>> v; 
int main() {    freopen("input.txt", "r", stdin);   ;     int n, i, j, k, l, m, t, s = 0, d, p;   scanf("%d", &t);   ;   int c = 1;   while (t--) {     scanf("%d", &n);     ;     int a[1010];     int b[1010];     v.clear();     for (i = 0; i < 6; i++) {       scanf("%d", &a[i]);       ;     }     d = 0;     v.push_back(make_pair(a[0], 0));     v.push_back(make_pair(a[2], 2));     v.push_back(make_pair(a[4], 4));     if (v[2].first > v[0].first + v[1].first) {       printf("Case #%d: IMPOSSIBLE\n", c++);       continue;     }     sort(v.begin(), v.end());     while (d < n) {       if (v[2].first > 0) {         a[d++] = v[2].second;         v[2].first--;          if (v[1].first > 0) {           a[d++] = v[1].second;           v[1].first--;         } else if (v[0].first > 0) {           a[d++] = v[0].second;           v[0].first--;           if (v[2].first == 0)             break;         }       } else {         break;       }       }     s = 0;      if (v[0].first > 0) {       for (i = 0; i < d; i++) {         b[s++] = a[i];         if (v[0].first > 0 && a[i + 1] != v[0].second) {           b[s++] = v[0].second;           v[0].first--;         }            }       for (i = 0; i < s - 1; i++) {         if (b[i] == b[i + 1]) {           printf("Case #%d: IMPOSSIBLE\n", c++);           break;         }       }       if (i != s - 1)         continue;       if (b[s - 1] == b[0]) {         printf("Case #%d: IMPOSSIBLE\n", c++);         continue;       }       printf("Case #%d: ", c++);       for (i = 0; i < s; i++) {         printf("%c", colors[b[i]]);       }       cout << endl;     } else if (a[d - 1] == a[0]) {       printf("Case #%d: IMPOSSIBLE\n", c++);     } else {       printf("Case #%d: ", c++);       for (i = 0; i < d; i++) {         printf("%c", colors[a[i]]);       }       cout << endl;     }   }   return (0); }
#include <algorithm> #include <iostream> #include <map>  using namespace std;
map<char, int> mmm;  struct my_sort {   bool operator()(const pair<int, char> &left, const pair<int, char> &right) {     if (left.first > right.first) {       return true;     } else if (left.first < right.first) {       return false;     } else {       return mmm[left.second] < mmm[right.second];     }   } };  int solve(int cc) {   mmm.clear();   int n, r, o, y, g, b, v;   cin >> n >> r >> o >> y >> g >> b >> v;   pair<int, char> arr[3];   arr[0] = pair<int, char>(r, 'R');   arr[1] = pair<int, char>(y, 'Y');   arr[2] = pair<int, char>(b, 'B');   sort(arr, arr + 3, greater<pair<int, char>>());      for (int i = 0; i < 3; i++) {     mmm[arr[i].second] = i;   }    cout << "Case #" << cc << ": ";   string sol = "";   bool im = false;   char last = '-';   for (int i = 0; i < n && !im; i++) {     int mi = -1;     sort(arr, arr + 3, my_sort());     for (int j = 0; j < 3; j++) {       if (arr[j].second != last) {         mi = j;         break;       }     }     if (mi == -1 || arr[mi].first <= 0) {       im = true;       break;     }     sol += arr[mi].second;     last = arr[mi].second;     arr[mi].first--;   }   if (im || (sol[0] == sol[n - 1])) {     cout << "IMPOSSIBLE" << endl;   } else {     cout << sol << endl;   }   return 1; }  
int main() {   int t;   cin >> t;   for (int i = 1; i <= t; i++) {     solve(i);   }   return 0; }
#include <bits/stdc++.h> using namespace std;
typedef long long int lli;  int tc;  
int main() {   cin >> tc;   for (int t = 1; t <= tc; t++) {     int n, q;     cin >> n >> q;     int e[109], s[109];     for (int i = 1; i <= n; i++) {       cin >> e[i] >> s[i];     }     int adj[109][109];     for (int i = 1; i <= n; i++) {       for (int j = 1; j <= n; j++) {         cin >> adj[i][j];       }     }     int dist[109];      for (int i = 1; i < n; i++) {       dist[i] = adj[i][i + 1];     }     cout << "Case #" << t << ": ";     for (int nq = 0; nq < q; nq++) {       int u, v;       cin >> u >> v;       double time_taken[109];       for (int i = 1; i <= n; i++) {         time_taken[i] = -1;       }       time_taken[1] = 0;       for (int i = 1; i < n; i++) {             int dist_left = e[i];         int speed = s[i];         double cur_time = time_taken[i];         for (int j = i + 1; j <= n; j++) {            dist_left -= dist[j - 1];           if (dist_left < 0)             break;           cur_time += (dist[j - 1] + 0.0) / s[i];                 if (time_taken[j] < 0) {             time_taken[j] = cur_time;           } else {             time_taken[j] = min(time_taken[j], cur_time);           }         }       }       cout << fixed << setprecision(7) << time_taken[v] << endl;     }   } }
#include <bits/stdc++.h> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <cstdlib> #include <cstring> #include <deque> #include <functional> #include <list> #include <map> #include <math.h> #include <numeric> #include <set> #include <stdio.h> #include <unordered_map> #include <utility> #include <vector> using namespace std;
const long double PI = 3.1415926535897932384626433832795; typedef long double ld; typedef pair<int, int> PII; typedef unsigned long long ull; typedef vector<int> VI; typedef long double LD; typedef long long ll;  int tc;  
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_1_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/4yn/A-small-practice.in",           "r", stdin);    cin >> tc;   for (int t = 1; t <= tc; t++) {     int n, q;     cin >> n >> q;     int e[109], s[109];     for (int i = 1; i <= n; i++) {       cin >> e[i] >> s[i];     }     int adj[109][109];     for (int i = 1; i <= n; i++) {       for (int j = 1; j <= n; j++) {         cin >> adj[i][j];       }     }     int dist[109];      for (int i = 1; i < n; i++) {       dist[i] = adj[i][i + 1];     }     printf("Case #%d: ", t);     for (int nq = 0; nq < q; nq++) {       int u, v;       cin >> u >> v;       double time_taken[109];       for (int i = 1; i <= n; i++) {         time_taken[i] = -1;       }       time_taken[1] = 0;       for (int i = 1; i < n; i++) {               int dist_left = e[i];         int speed = s[i];         double cur_time = time_taken[i];         for (int j = i + 1; j <= n; j++) {            dist_left -= dist[j - 1];           if (dist_left < 0)             break;           cur_time += (dist[j - 1] + 0.0) / s[i];                      if (time_taken[j] < 0) {             time_taken[j] = cur_time;           } else {             time_taken[j] = min(time_taken[j], cur_time);           }         }       }       printf("%.7f\n", time_taken[v]);     }   } }
#include <algorithm> #include <bitset> #include <cctype> #include <climits> #include <complex> #include <cstdio> #include <cstring> #include <ctime> #include <fstream> #include <iomanip> #include <iostream> #include <iterator> #include <numeric> #include <sstream> #include <string> #include <unordered_map> #include <utility> #include <vector>  using namespace std; 
long long gra[100 + 1][100 + 1]; int lim[100 + 1], spd[100 + 1], vis[100 + 1]; double dis[100 + 1]; int n, q;  double dijkstra(int s, int e) {   int j, u;   double newd;   memset(vis, 0, sizeof(vis));   fill(dis + 1, dis + n + 1, 1000000000000000000LL);   dis[s] = 0.0;   for (int i = 1; i <= n; i++) {     newd = 1000000000000000000LL;     u = -1;     for (j = 1; j <= n; j++) {       if ((vis[j] == 0) && (newd > dis[j])) {         newd = dis[j];         u = j;       }     }     if (u == -1) {       break;     }     vis[u] = 1;     for (j = 1; j <= n; j++) {       if ((lim[u] >= gra[u][j]) &&           (dis[j] > dis[u] + 1.0 * gra[u][j] / spd[u])) {         dis[j] = dis[u] + 1.0 * gra[u][j] / spd[u];       }     }   }   return dis[e]; }  
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_3_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/try/A-small-practice.in",           "r", stdin);   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_3_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/try/outer_temp/try/A-small-practice_transformation.out",           "w", stdout);   int c, t, i, j, k, u, v;   cin >> t;   for (c = 0; c < t; c++) {     cin >> n >> q;     for (i = 1; i <= n; i++) {       cin >> lim[i] >> spd[i];     }     for (i = 1; i <= n; i++) {       for (j = 1; j <= n; j++) {         cin >> gra[i][j];         if (gra[i][j] == -1) {           gra[i][j] = 1000000000000000000LL;         }       }     }     for (k = 1; k <= n; k++) {       {         i = 1;         while (i <= n) {           for (j = 1; j <= n; j++) {             gra[i][j] = min(gra[i][j], gra[i][k] + gra[k][j]);           }           i++;         }       }     }     printf("Case #%d:", c + 1);     for (i = 0; i < q; i++) {       cin >> u >> v;       printf(" %.9f", dijkstra(u, v));     }     printf("\n");   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <complex> #include <cstdio> #include <cstring> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <numeric> #include <set> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> #include <vector> using namespace std; 
ifstream fin;  const double eps = 1e-9;  int n, q, u, v; long long e[102]; double s[102]; long long d[102][102]; double bt[102]; bool vi[102];  inline void znbjtxdgmo(int &j) {   bt[j] = -1;   vi[j] = false; }  inline void kbiojelxsu(int &i) {   for (int j = 1; j <= n; ++j)     fin >> d[i][j]; }  inline void aceaofieit(int &cur, int &j) { cur = j; }  inline void pflkytfmnx(int &i, int &N, int &j) { d[i][j] = d[i][N] + d[N][j]; }  
int main() {   fin.open("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_6_Usenix_RF_1.0_True_MCTS_Classic_True/okaduki/WCG/A-small-practice.in");    ios::sync_with_stdio(true);    int T;    fin >> T;    for (int t = 1; t <= T; ++t) {     fin >> n >> q;     for (int i = 1; i <= n; ++i)       fin >> e[i] >> s[i];     for (int i = 1; i <= n; ++i)       kbiojelxsu(i);      for (int N = 1; N <= n; ++N)       for (int i = 1; i <= n; ++i)         for (int j = 1; j <= n; ++j)           if ((d[i][N] != -1) && (d[N][j] != -1) &&               ((d[i][j] == -1) || (d[i][j] > d[i][N] + d[N][j])))             pflkytfmnx(i, N, j);      cout << "Case #" << t << ":";      for (int i = 0; i < q; ++i) {       fin >> u >> v;       for (int j = 1; j <= n; ++j)         znbjtxdgmo(j);       bt[u] = 0;       for (; !vi[v];) {         int cur = -1;         for (int j = 1; j <= n; ++j)           if (!vi[j] && (bt[j] != -1) && ((cur == -1) || (bt[cur] > bt[j])))             aceaofieit(cur, j);         vi[cur] = true;         for (int j = 1; j <= n; ++j)           if ((d[cur][j] != -1) && (d[cur][j] <= e[cur]) &&               ((bt[j] == -1) || ((bt[j] - bt[cur]) * s[cur] > d[cur][j])))             bt[j] = bt[cur] + d[cur][j] / s[cur];       }       printf(" %.6lf", bt[v]);     }     cout << endl;   }    return 0; }
#include <bits/stdc++.h> using namespace std; 
typedef pair<int, int> ii; typedef vector<int> vi; typedef vector<ii> vii; typedef long long ll; const long double INF = 1000000000000; const long double pi = acos(-1); typedef pair<long double, int> di;  int mxdist[120]; int conspeed[120]; long double matrix[120][120]; long double matrix2[120][120];  void fill(int at) {   bool vis[120];   memset(vis, 0, sizeof(vis));   vis[at] = true;   priority_queue<pair<long double, int>, vector<di>, greater<di>> q;   q.push(pair<long double, int>(0, at));   while (!q.empty()) {     int cur = q.top().second;     long double range = q.top().first;     q.pop();     for (int i = (0); i < (120); i++) {       if (matrix[cur][i] != -1 && i != cur && !vis[i]) {         long double thedist = matrix[cur][i];         range += thedist;         if (range > mxdist[at]) {           range -= thedist;           continue;         }         matrix2[at][i] = min(range / conspeed[at], matrix2[at][i]);         q.push(pair<long double, int>(range, i));         range -= thedist;       }     }   } }  long double query(int start, int end) {   priority_queue<di, vector<di>, greater<di>> pq;   pq.push(di(0, start));   long double dist[150];   bool vis[150];   for (int i = (0); i < (150); i++)     dist[i] = INF;   memset(vis, 0, sizeof(vis));   dist[start] = 0;   while (!pq.empty()) {     di cur = pq.top();     pq.pop();     for (int i = (0); i < (120); i++) {       if (matrix2[cur.second][i] != -1) {         long double ne = min(dist[i], cur.first + matrix2[cur.second][i]);         if (ne >= dist[i])           continue;         dist[i] = ne;         pq.push(di(dist[i], i));       }     }   }   return dist[end]; }  
int main() {   cin.sync_with_stdio(false);   ofstream fout("ansc.txt");   int t;   cin >> t;   for (int u = (0); u < (t); u++) {     int n, q;     memset(mxdist, 0, sizeof(mxdist));     memset(conspeed, 0, sizeof(conspeed));     for (int i = (0); i < (120); i++)       for (int a = (0); a < (120); a++)         matrix[i][a] = -1;     for (int i = (0); i < (120); i++)       for (int a = (0); a < (120); a++)         matrix2[i][a] = INF;     cin >> n >> q;     for (int i = (0); i < (n); i++) {       int dist, speed;       cin >> dist >> speed;       mxdist[i] = dist;       conspeed[i] = speed;     }     for (int i = (0); i < (n); i++)       for (int a = (0); a < (n); a++)         cin >> matrix[i][a];     for (int i = (0); i < (n); i++)       fill(i);     for (int i = (0); i < (120); i++)       for (int a = (0); a < (120); a++)         if (matrix2[i][a] == INF)           matrix2[i][a] = -1;     vector<ii> all(q);     for (int i = (0); i < (q); i++)       cin >> all[i].first >> all[i].second;     fout << "Case #" << u + 1 << ": ";     for (int i = (0); i < (q); i++) {       fout << setprecision(9) << fixed            << query(all[i].first - 1, all[i].second - 1) << " ";     }     fout << endl;   }   return 0; }
#include <bits/stdc++.h> #include <stdio.h> using namespace std; 
typedef long double td_ld; typedef pair<int, int> ii; typedef vector<int> vi; typedef vector<ii> vii; typedef long long ll; const long double INF = 1000000000000; const long double pi = acos(-1); typedef pair<long double, int> di;  int mxdist[120]; int conspeed[120]; long double matrix[120][120]; long double matrix2[120][120];  void fill(int at) {   bool vis[120];   memset(vis, 0, sizeof(vis));   vis[at] = true;   priority_queue<pair<long double, int>, vector<di>, greater<di>> q;   q.push(pair<long double, int>(0, at));   for (; !q.empty();) {     int cur = q.top().second;     td_ld range = q.top().first;     q.pop();     for (int i = (0); i < (120); i++) {       if (matrix[cur][i] != -1 && i != cur && !vis[i]) {         td_ld thedist = matrix[cur][i];         range += thedist;         if (range > mxdist[at]) {           range -= thedist;           continue;         }         matrix2[at][i] = min(range / conspeed[at], matrix2[at][i]);         q.push(pair<long double, int>(range, i));         range -= thedist;       }     }   } }  long double query(int start, int end) {   priority_queue<di, vector<di>, greater<di>> pq;   pq.push(di(0, start));   long double dist[150];   bool vis[150];   for (int i = (0); i < (150); i++)     dist[i] = INF;   memset(vis, 0, sizeof(vis));   dist[start] = 0;   while (!pq.empty()) {     di cur = pq.top();     pq.pop();     for (int i = (0); i < (120); i++) {       if (matrix2[cur.second][i] != -1) {         td_ld ne = min(dist[i], cur.first + matrix2[cur.second][i]);         if (ne >= dist[i])           continue;         dist[i] = ne;         pq.push(di(dist[i], i));       }     }   }   return dist[end]; }  
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_7_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/bennikartefla/A-small-practice.in",           "r", stdin);    ofstream fout("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_7_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/bennikartefla/outer_temp/bennikartefla/A-small-practice_transformation.out");   int tc;   scanf("%d ", &tc);   for (int u = (0); u < (tc); u++) {     int n, q;     memset(mxdist, 0, sizeof(mxdist));     memset(conspeed, 0, sizeof(conspeed));     for (int i = (0); i < (120); i++)       for (int a = (0); a < (120); a++)         matrix[i][a] = -1;     for (int i = (0); i < (120); i++)       for (int a = (0); a < (120); a++)         matrix2[i][a] = INF;     scanf("%d %d ", &n, &q);     for (int i = (0); i < (n); i++) {       int dist, speed;       scanf("%d %d ", &dist, &speed);       mxdist[i] = dist;       conspeed[i] = speed;     }     for (int i = (0); i < (n); i++) {       int a = (0);       while (a < (n)) {         cin >> matrix[i][a];         a++;       }     }     for (int i = (0); i < (n); i++)       fill(i);     for (int i = (0); i < (120); i++)       for (int a = (0); a < (120); a++)         if (matrix2[i][a] == INF)           matrix2[i][a] = -1;     vector<ii> all(q);     for (int i = (0); i < (q); i++)       cin >> all[i].first >> all[i].second;     fout << "Case #" << u + 1 << ": ";     for (int i = (0); i < (q); i++) {       fout << setprecision(9) << fixed            << query(all[i].first - 1, all[i].second - 1) << " ";     }     fout << endl;   }   return 0; }
#include <bits/stdc++.h> using namespace std;  
typedef long long ll; typedef long long LL; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<int> vi; typedef pair<ii, int> iii; void open() {   freopen("D:/OneDrive/Code/GCJ/C-small-attempt1 (1).in", "r", stdin);   freopen("D:/OneDrive/Code/GCJ/out22.txt", "w", stdout); } int n, q, fr, to; int energy[120]; int spd[120]; int dist[120][120]; map<iii, double> memo;  double dp(int idx, int pony, int left) {   iii z = make_pair(ii(idx, pony), left);   if (idx == to)     return 0;   if (memo.find(z) != memo.end() && memo[z] < 1e12)     return memo[z];    double ans = 1e12;    if (dist[idx][idx + 1] <= left) {     ans = min(dp(idx + 1, pony, left - dist[idx][idx + 1]) +                   1.0 * dist[idx][idx + 1] / spd[pony],               ans);   }    if (dist[idx][idx + 1] <= energy[idx]) {     ans = min(ans, dp(idx + 1, idx, energy[idx] - dist[idx][idx + 1]) +                        1.0 * dist[idx][idx + 1] / spd[idx]);   }   return memo[z] = ans; }  
int main(void) {   open();   int tc;   scanf("%d", &tc);    for (int ct = 1; ct <= tc; ct++) {     scanf("%d", &n);     scanf("%d", &q);      for (int i = 0; i < n; i++) {       scanf("%d", &energy[i]);       scanf("%d", &spd[i]);     }      for (int i = 0; i < n; i++) {       for (int j = 0; j < n; j++) {         scanf("%d", &dist[i][j]);       }     }      scanf("%d", &fr);     scanf("%d", &to);     fr--;     to--;     memo.clear();      printf("Case #%d: %.10lf\n", ct, dp(0, 0, energy[0]));      cerr << "Test " << ct << " done \n";   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cctype> #include <climits> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std; 
const int MAXN = 1005; const int INF = 1000000000; const double eps = 1e-9; const int mod = 1000000007;  typedef set<int> si; typedef long long LL; typedef pair<int, int> PII; typedef vector<PII> vii; typedef vector<int> VI;  void open() {} int n, q, fr, to; int energy[120]; int spd[120]; int dist[120][120]; map<pair<PII, int>, double> memo;  double dp(int idx, int pony, int left) {   pair<PII, int> z = make_pair(PII(idx, pony), left);   if (idx == to)     return 0;   if (memo.find(z) != memo.end() && memo[z] < 1e12)     return memo[z];    double ans = 1e12;    if (dist[idx][idx + 1] <= left) {     ans = min(dp(idx + 1, pony, left - dist[idx][idx + 1]) +                   1.0 * dist[idx][idx + 1] / spd[pony],               ans);   }    if (dist[idx][idx + 1] <= energy[idx]) {     ans = min(ans, dp(idx + 1, idx, energy[idx] - dist[idx][idx + 1]) +                        1.0 * dist[idx][idx + 1] / spd[idx]);   }   return memo[z] = ans; }  inline void arzjzpmvbr(int &ct) {   cin >> n;   cin >> q;    for (int i = 0; i < n; i++) {     cin >> energy[i];     cin >> spd[i];   }    for (int i = 0; i < n; i++) {     for (int j = 0; j < n; j++)       cin >> dist[i][j];   }    cin >> fr;   cin >> to;   fr--;   to--;   memo.clear();    printf("Case #%d: %.10lf\n", ct, dp(0, 0, energy[0]));    cerr << "Test " << ct << " done \n"; }  
int main(void) {   open();   int tc;   cin >> tc;    for (int ct = 1; ct <= tc; ct++)     arzjzpmvbr(ct);   return 0; }
#include <iostream>  using namespace std; 
int solve(int cc) {   long long n, q, e[105], s[105], d[105], temp;   cin >> n >> q;   for (int i = 0; i < n; i++) {     cin >> e[i] >> s[i];   }   for (int i = 0; i < n; i++) {     for (int j = 0; j < n; j++) {       if (j == i + 1) {         cin >> d[i];       } else {         cin >> temp;       }     }   }   cin >> temp >> temp;      long double dp[105];   for (int i = 0; i < n; i++) {     dp[i] = 1e11;   }   dp[n - 1] = 0;   for (int i = n - 2; i >= 0; i--) {     long double sss = 0;     long long ee = e[i];     long double tt = 0;     for (int j = i; j < n - 1; j++) {       ee -= d[j];       if (ee < 0) {         break;       }       tt += (1.0 * d[j]) / s[i];        if (j == i || tt + dp[j + 1] < sss) {         sss = tt + dp[j + 1];                }     }     dp[i] = sss;    }   cout << "Case #" << cc << ": " << fixed << dp[0] << endl;   return 1; }  
int main() {   int t;   cin >> t;   cout.precision(7);   for (int i = 1; i <= t; i++) {     solve(i);   }   return 0; }
#include <bits/stdc++.h> using namespace std;  
typedef long long int lli; typedef pair<lli, lli> pii; typedef double dbl;  int tc;  lli d, n, a, b; vector<pii> ks;  
int main() {   cin >> tc;   for (int t = 1; t <= tc; t++) {     ks.clear();     cin >> d >> n;     dbl lb, ub, ex;     lb = 0;     ub = 0;     for (int i = 0; i < n; i++) {       cin >> a >> b;       ks.push_back(pii(a, b));       if (ub == 0) {         if (a != d) {           ub = d * b / (d - a + 0.0);         }       } else if (a != d) {         ub = min(ub, d * b / (d - a + 0.0));       }     }     while (abs(ub - lb) > 0.0000005f) {       ex = (ub + lb) / 2;       bool f = true;        for (int i = 0; i < n; i++) {           if (ks[i].second >= ex)           continue;          if (ks[i].first / (ex - ks[i].second) * ex < d) {           f = false;         }       }       if (f) {         lb = ex;       } else {         ub = ex;       }     }     cout << fixed << setprecision(7) << "Case #" << t << ": " << ub << endl;   } }
#include <algorithm> #include <cstdio> #include <iostream> using namespace std;  
int main() {   freopen("A-small-attempt0.in", "r", stdin);   freopen("A-small-attempt0.out", "w", stdout);   int c, t, i, d, n, k, s;   double m;   scanf("%d", &t);   for (c = 0; c < t; c++) {     scanf("%d %d", &d, &n);     m = 0.0;     for (i = 0; i < n; i++) {       scanf("%d %d", &k, &s);       m = max(m, 1.0 * (d - k) / s);     }     printf("Case #%d: %.6f\n", c + 1, d / m);   }   return 0; }
#include <algorithm> #include <cmath> #include <cstdio> #include <iomanip> #include <iostream> #include <map> #include <set> #include <string> #include <vector>  using namespace std;  
const int N = 1100; int k[N], s[N];  void work() {   int d, n;   cin >> d >> n;   double mt = 0;   for (int i = 1; i <= n; ++i) {     scanf("%d%d", &k[i], &s[i]);     mt = max(mt, double(d - k[i]) / s[i]);   }   cout << fixed << setprecision(9) << d / mt << endl; }  
int main() {   freopen("my.in", "r", stdin);   freopen("out.txt", "w", stdout);    int q;   cin >> q;   for (int i = 1; i <= q; ++i) {     printf("Case #%d: ", i);     work();   }   return 0; }
#include <algorithm> #include <cstdio> #include <cstring> #include <iostream> #include <string> #include <vector> using namespace std;  
int main() {   int tt;    cin >> tt;    for (int t = 1; t <= tt; ++t) {     int d, n;     cin >> d >> n;      long long bk, bs, k, s;     cin >> k >> s;     k = d - k;     bk = k;     bs = s;     for (int i = 1; i < n; ++i) {       cin >> k >> s;       k = d - k;       if (s * bk < bs * k) {         bs = s;         bk = k;       }     }     bs *= d;     long long q = bs / bk, r = bs % bk;      cout << "Case #" << t << ": " << q << ".";     for (int i = 0; i < 6; ++i) {       r = r * 10;       cout << r / k;       r = r % k;     }     cout << endl;   }    return 0; }
#include <bits/stdc++.h> using namespace std;  
typedef pair<int, int> ii; typedef vector<int> vi; typedef vector<ii> vii; typedef long long ll; const int INF = ~(1 << 31); const double pi = acos(-1);  
int main() {   cin.sync_with_stdio(false);   ofstream fout("ans2.txt");   int t;   cin >> t;   for (int u = (0); u < (t); u++) {     double n, m;     cin >> n >> m;     double t2 = 0;     for (int i = (0); i < (m); i++) {       double a, b;       cin >> a >> b;       double t = (n - a) / b;       t2 = max(t, t2);     }     fout << "Case #" << u + 1 << ": " << setprecision(10) << fixed << n / t2          << endl;   }   return 0; }
#include <bits/stdc++.h> using namespace std;  
typedef long long ll; typedef long long LL; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<int> vi; void open() {   freopen("D:/OneDrive/Code/GCJ/A-small-attempt0.in", "r", stdin);   freopen("D:/OneDrive/Code/GCJ/out.txt", "w", stdout); }  
int main(void) {   open();   int tc;   scanf("%d", &tc);    for (int ct = 1; ct <= tc; ct++) {     int d, n;     scanf("%d", &d);     scanf("%d", &n);     double maxi = 0.0;      for (int i = 0; i < n; i++) {       int st, sp;       scanf("%d", &st);       scanf("%d", &sp);       maxi = max(maxi, 1.0 * (d - st) / sp);     }      printf("Case #%d: %.7lf\n", ct, 1.0 * d / maxi);     cerr << "Test " << ct << " done \n";   }   return 0; }
#include <algorithm> #include <bitset> #include <climits> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <iostream> #include <limits> #include <list> #include <map> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <string> #include <unordered_map> #include <vector> using namespace std; 
const double pi = acos(-1.), eps = 1e-6; const int Maxn = 310, Maxk = 5010, Mo = 1e9 + 7, oo = INT_MAX >> 2; const int sp[4][2] = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}}; int T; long long f[Maxn][Maxn][2], vis[Maxn][Maxn][2]; int a[Maxn]; int n, m, k, cs, ans; struct Rec {   int a, b, l; } w[Maxn];  int s[Maxn], v[Maxn], D, N; double t; 
int main() {   cin >> T;   while (T--) {     printf("Case #%d: ", ++cs);     cin >> D >> N;     t = -1;     for (int i = 1; i <= N; i++) {       cin >> s[i] >> v[i];        t = max(t, 1. * (D - s[i]) / v[i]);     }       printf("%.6f\n", D / t);   }   return 0; }
#include <algorithm> #include <climits> #include <cmath> #include <cstdio> #include <cstring> #include <iostream> #include <iterator> #include <map> #include <queue> #include <set> #include <stack> #include <string> #include <unordered_map> #include <utility> #include <vector>   using namespace std; 
using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  ll gcd(ll a, ll b) {   ll t;   while ((t = a % b) != 0) {     a = b;     b = t;   }   return b; }  ll fast_exp(ll base, ll n, ll m) {   if (n == 0)     return 1;   ll t = fast_exp(base, n / 2, m);   if (n % 2 == 0)     return (t * t) % m;   else     return (((t * t) % m) * base) % m; }  bool is_set(int i, ll mask) { return (mask >> i) & 1; }  int count_bits(ll mask) {   int ans = 0;   for (int i = 0; i < 64; ++i)     if (is_set(i, mask))       ++ans;   return ans; }  int first_bit(ll mask) {   int i = 0;   while (i < 64)     if (is_set(i++, mask))       return i - 1;   return -1; }  
int main() {   ios::sync_with_stdio(false);   int t;   cin >> t;   for (int i = 1; i <= t; ++i) {     ll d, n;     cin >> d >> n;     double mt = 0;     for (int j = 0; j < n; ++j) {       ll k, s;       cin >> k >> s;       mt = max(mt, (d - k) / static_cast<double>(s));     }     printf("Case #%d: %.10f\n", i, d / mt);   }   return 0; }
#include <bits/stdc++.h> using namespace std; 
using LL = long long;  
int main() {   freopen("123.in", "r", stdin);   freopen("123.out", "w", stdout);   int T, cas = 0;   cin >> T;   while (T--) {     int d, n;     cin >> d >> n;     double t = 0;     while (n--) {       int k, s;       cin >> k >> s;       t = max((1.0 * d - k) / s, t);     }     double ans = d / t;     printf("Case #%d: %.10f\n", ++cas, ans);   }   return 0; }
#include <bitset> #include <deque> #include <iomanip> #include <iostream> #include <queue> #include <set> #include <sstream> #include <stack>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>   using namespace std;  
typedef vector<int> vi; typedef vector<vi> vvi; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<string> vs;  typedef long long LL;            typedef unsigned long long ULL;  typedef unsigned uint;  const double pi = acos(-1.0);  const double eps = 1e-11;      const int MAXI = 0x7fffffff; const int dx[] = {1, 0, -1, 0}; const int dy[] = {0, 1, 0, -1}; const char dz[] = "SENW"; struct debugger {   template <typename T> debugger &operator,(const T &v) {     cerr << v << " ";     return *this;   } } dbg;  void debugarr(int *arr, int n) {   cout << "[";   for (int i = 0; i < n; i++)     cout << arr[i] << " ";   cout << "]" << endl; }  
int main() {    freopen("input.txt", "r", stdin);   ;     int n, i, j, k, l, m, t, s = 0, d, p;   scanf("%d", &t);   ;   int c = 1;   while (t--) {     scanf("%d", &d);     ;     scanf("%d", &n);     ;     double ans = 0.0;     double r;      for (i = 0; i < n; i++) {       scanf("%d", &k);       ;       scanf("%d", &s);       ;       double r = ((d - k) * 1.0) / s;        ans = max(ans, r);     }     printf("Case #%d: %0.6lf\n", c++, d / ans);   }   return (0); }
#include <iostream>  using namespace std;  
int solve(int cc) {   long long d, n, k, s;   long double mt = 0;   cin >> d >> n;   for (int i = 0; i < n; i++) {     cin >> k >> s;     long double tt = (d - k);     tt /= s;     if (i == 0 || mt < tt) {       mt = tt;     }   }   cout << "Case #" << cc << ": " << fixed << d / mt << endl;   return 1; }  
int main() {   int t;   cin >> t;   cout.precision(7);   for (int i = 1; i <= t; i++) {     solve(i);   }   return 0; }
#include <algorithm> #include <cstdio> #include <iostream>  using namespace std;  
char ans[1000 + 1]; int ord[1000 + 1]; int n, m, r, o, y, g, b, v;  
int main() {   freopen("B-small-attempt0.in", "r", stdin);   freopen("B-small-attempt0.out", "w", stdout);   int c, t, i;   scanf("%d", &t);   for (c = 0; c < t; c++) {     scanf("%d %d %d %d %d %d %d", &n, &r, &o, &y, &g, &b, &v);     printf("Case #%d: ", c + 1);     if ((r * 2 > n) || (y * 2 > n) || (b * 2 > n)) {       printf("IMPOSSIBLE\n");       continue;     }     m = 0;     for (i = 0; i < n; i = i + 2) {       ord[m++] = i;     }     for (i = 1; i < n; i = i + 2) {       ord[m++] = i;     }     m = 0;     if ((r >= y) && (y >= b)) {       while (--r >= 0) {         ans[ord[m++]] = 'R';       }       while (--y >= 0) {         ans[ord[m++]] = 'Y';       }       while (--b >= 0) {         ans[ord[m++]] = 'B';       }     } else if ((r >= b) && (b >= y)) {       while (--r >= 0) {         ans[ord[m++]] = 'R';       }       while (--b >= 0) {         ans[ord[m++]] = 'B';       }       while (--y >= 0) {         ans[ord[m++]] = 'Y';       }     } else if ((y >= b) && (b >= r)) {       while (--y >= 0) {         ans[ord[m++]] = 'Y';       }       while (--b >= 0) {         ans[ord[m++]] = 'B';       }       while (--r >= 0) {         ans[ord[m++]] = 'R';       }     } else if ((y >= r) && (r >= b)) {       while (--y >= 0) {         ans[ord[m++]] = 'Y';       }       while (--r >= 0) {         ans[ord[m++]] = 'R';       }       while (--b >= 0) {         ans[ord[m++]] = 'B';       }     } else if ((b >= r) && (r >= y)) {       while (--b >= 0) {         ans[ord[m++]] = 'B';       }       while (--r >= 0) {         ans[ord[m++]] = 'R';       }       while (--y >= 0) {         ans[ord[m++]] = 'Y';       }     } else {       while (--b >= 0) {         ans[ord[m++]] = 'B';       }       while (--y >= 0) {         ans[ord[m++]] = 'Y';       }       while (--r >= 0) {         ans[ord[m++]] = 'R';       }     }     ans[m] = '\0';     printf("%s\n", ans);   }   return 0; }
#include <algorithm> #include <cmath> #include <cstdio> #include <iomanip> #include <iostream> #include <map> #include <set> #include <string> #include <vector>  using namespace std;  
const int N = 1100;  int n, cnt[6]; int ans[N]; char cc[6] = {'R', 'O', 'Y', 'G', 'B', 'V'};  void pre() { ans[0] = -10000; }  bool nb(int u, int v) {   int res = u - v;   return (res == 1 || res == -1 || res == 5 || res == -5 || res == 0); }  bool dfs(int p) {   if (p == n + 1) {     if (!nb(ans[1], ans[n])) {       return true;     } else {       return false;       for (int i = 1; i <= n; ++i) {         printf("%c", cc[ans[i]]);       }       cout << endl;     }   }   vector<int> pos;   int maxc = -10000;   for (int i = 0; i < 6; ++i) {     if (cnt[i] > maxc && !nb(i, ans[p - 1])) {       pos.clear();       pos.push_back(i);       maxc = cnt[i];     } else if (cnt[i] == maxc) {       pos.push_back(i);     }   }   if (maxc == -10000) {     return false;   }   for (int i = 0; i < (int)pos.size(); ++i) {     int u = pos[i];     if (!nb(u, ans[p - 1])) {       cnt[u]--;       ans[p] = u;       bool res = dfs(p + 1);       if (res) {         return true;       }       cnt[u]++;     }   }   return false; }  void work() {   cin >> n;   int maxc = 0;   for (int i = 0; i < 6; ++i) {     cin >> cnt[i];     if (cnt[i] > maxc) {       maxc = cnt[i];     }   }   if (maxc > n / 2) {     cout << "IMPOSSIBLE" << endl;     return;   }   if (dfs(1)) {     for (int i = 1; i <= n; ++i) {       printf("%c", cc[ans[i]]);     }     cout << endl;   } else {     cout << "IMPOSSIBLE" << endl;   } }  
int main() {   freopen("my.in", "r", stdin);   freopen("out.txt", "w", stdout);    pre();   int q;   cin >> q;   for (int i = 1; i <= q; ++i) {     printf("Case #%d: ", i);     work();   }   return 0; }
#include <algorithm> #include <cstdio> #include <cstring> #include <iostream> #include <string> #include <vector> using namespace std;  
int main() {   int tt;    cin >> tt;    for (int t = 1; t <= tt; ++t) {     int n, r, o, y, g, b, v;     cin >> n >> r >> o >> y >> g >> b >> v;     string s = "";      if ((r > n / 2) || (y > n / 2) || (b > n / 2))       s = "IMPOSSIBLE";     else {       vector<pair<int, string>> v;       v.push_back({r, "R"});       v.push_back({y, "Y"});       v.push_back({b, "B"});       sort(v.begin(), v.end());       reverse(v.begin(), v.end());       while (v[0].first > 0) {         s += v[0].second;         v[0].first--;         if (v[1].first > v[2].first) {           s += v[1].second;           v[1].first--;         } else {           s += v[2].second;           v[2].first--;         }       }       while ((v[1].first > 0) || (v[2].first > 0)) {         if (v[1].first > v[2].first) {           s += v[1].second;           v[1].first--;         } else {           s += v[2].second;           v[2].first--;         }       }     }     cout << "Case #" << t << ": " << s << endl;   }    return 0; }
#include <algorithm> #include <climits> #include <cmath> #include <cstdio> #include <cstring> #include <iostream> #include <iterator> #include <map> #include <queue> #include <set> #include <stack> #include <string> #include <unordered_map> #include <utility> #include <vector>   using namespace std; 
using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  ll gcd(ll a, ll b) {   ll t;   while ((t = a % b) != 0) {     a = b;     b = t;   }   return b; }  ll fast_exp(ll base, ll n, ll m) {   if (n == 0)     return 1;   ll t = fast_exp(base, n / 2, m);   if (n % 2 == 0)     return (t * t) % m;   else     return (((t * t) % m) * base) % m; }  bool is_set(int i, ll mask) { return (mask >> i) & 1; }  int count_bits(ll mask) {   int ans = 0;   for (int i = 0; i < 64; ++i)     if (is_set(i, mask))       ++ans;   return ans; }  int first_bit(ll mask) {   int i = 0;   while (i < 64)     if (is_set(i++, mask))       return i - 1;   return -1; }  
int main() {   ios::sync_with_stdio(false);   int t;   cin >> t;   for (int i = 1; i <= t; ++i) {     int n, r, o, y, g, b, v;     cin >> n >> r >> o >> y >> g >> b >> v;     int ma = n / 2;     cout << "Case #" << i << ": ";     if (r > ma || y > ma || b > ma) {       cout << "IMPOSSIBLE\n";       continue;     }     vector<pair<int, char>> V;     V.push_back(make_pair(r, 'R')), V.push_back(make_pair(y, 'Y')),         V.push_back(make_pair(b, 'B'));     sort(V.begin(), V.end());     char s[n + 1];     int p = 0;     int a = V[2].first;     while (a--)       s[p] = V[2].second, p = (p + 2) % n, p = (p == 0 ? 1 : p);     a = V[1].first;     while (a--)       s[p] = V[1].second, p = (p + 2) % n, p = (p == 0 ? 1 : p);     a = V[0].first;     while (a--)       s[p] = V[0].second, p = (p + 2) % n, p = (p == 0 ? 1 : p);     for (int i = 0; i < n; ++i)       cout << s[i];     cout << "\n";   }   return 0; }
#include <bits/stdc++.h> using namespace std; 
using LL = long long;  int a[6]; string s = "ROYGBV";  
int main() {   freopen("123.in", "r", stdin);   freopen("123.out", "w", stdout);   int T, cas = 0;   cin >> T;   while (T--) {     int n;     cin >> n;     for (int i = 0; i < 6; i++)       cin >> a[i];     string ans = "";     int flag = 0;     while (ans.size() < n) {       int mx = 0, c = 0;       for (int i = 0; i < 6; i++) {         if (s[i] == ans.back())           continue;         if (a[i] == mx && ans.size() && s[i] == ans[0])           mx = a[i], c = i;         if (a[i] > mx)           mx = a[i], c = i;       }       if (s[c] == ans.back() || a[c] == 0) {         flag = 1;         break;       }       ans.push_back(s[c]);       a[c]--;     }      if (ans.size() > 1 && ans[0] == ans.back())       flag = 1;     printf("Case #%d: ", ++cas);     if (flag)       puts("IMPOSSIBLE");     else       printf("%s\n", ans.c_str());   }   return 0; }
#include <bits/stdc++.h>  using namespace std; 
typedef vector<int> vi; typedef long long ll; typedef long double ld; typedef pair<int, int> pii; typedef pair<pii, int> para; const int inf = 1e9 + 7; const int maxN = 1e6 + 5; const int M = 50; const int N = 50;  int t, r, o, y, g, b, v, ans[maxN], sum; set<pii, greater<pii>> s;  
int main() {   ios_base::sync_with_stdio(0);   cin >> t;   for (int test = (1); test <= ((t)); ++test) {     cin >> sum >> r >> o >> y >> g >> b >> v;     s.clear();     if (r > 0)       s.insert(pii(r, 1));     if (y > 0)       s.insert(pii(y, 2));     if (b > 0)       s.insert(pii(b, 3));     int maxim = max(r, y);     maxim = max(maxim, b);     cout << "Case #" << test << ": ";      if (maxim > sum / 2) {       cout << "IMPOSSIBLE";     } else {       pii x = *s.begin();       s.erase(s.begin());       ans[0] = x.second;       s.insert(pii(x.first - 1, x.second));        int cnt = 1;       while (cnt < sum) {         pii x = *s.begin();         if (x.second == ans[cnt - 1]) {           pii tmp = x;           s.erase(s.begin());           x = *s.begin();           ans[cnt] = x.second;           s.erase(s.begin());           if (x.first > 0)             s.insert(pii(x.first - 1, x.second));           s.insert(tmp);         } else {            ans[cnt] = x.second;           s.erase(s.begin());           if (x.first > 0)             s.insert(pii(x.first - 1, x.second));         }         cnt++;       }       if (ans[sum - 1] == ans[0]) {         swap(ans[sum - 1], ans[sum - 2]);         if (ans[sum - 2] == ans[sum - 3]) {           cout << "IMPOSSIBLE";         } else {           for (int i = (0); i <= ((sum)-1); ++i) {             if (ans[i] == 1)               cout << "R";             if (ans[i] == 2)               cout << "Y";             if (ans[i] == 3)               cout << "B";           }         }       } else {         for (int i = (0); i <= ((sum)-1); ++i) {           if (ans[i] == 1)             cout << "R";           if (ans[i] == 2)             cout << "Y";           if (ans[i] == 3)             cout << "B";         }       }     }     cout << endl;   }   return 0; }
#include <algorithm> #include <iostream> #include <map>  using namespace std;  
map<char, int> mmm;  struct my_sort {   bool operator()(const pair<int, char> &left, const pair<int, char> &right) {     if (left.first > right.first) {       return true;     } else if (left.first < right.first) {       return false;     } else {       return mmm[left.second] < mmm[right.second];     }   } };  int solve(int cc) {   mmm.clear();   int n, r, o, y, g, b, v;   cin >> n >> r >> o >> y >> g >> b >> v;   pair<int, char> arr[3];   arr[0] = pair<int, char>(r, 'R');   arr[1] = pair<int, char>(y, 'Y');   arr[2] = pair<int, char>(b, 'B');   sort(arr, arr + 3, greater<pair<int, char>>());      for (int i = 0; i < 3; i++) {     mmm[arr[i].second] = i;   }    cout << "Case #" << cc << ": ";   string sol = "";   bool im = false;   char last = '-';   for (int i = 0; i < n && !im; i++) {     int mi = -1;     sort(arr, arr + 3, my_sort());     for (int j = 0; j < 3; j++) {       if (arr[j].second != last) {         mi = j;         break;       }     }     if (mi == -1 || arr[mi].first <= 0) {       im = true;       break;     }     sol += arr[mi].second;     last = arr[mi].second;     arr[mi].first--;   }   if (im || (sol[0] == sol[n - 1])) {     cout << "IMPOSSIBLE" << endl;   } else {     cout << sol << endl;   }   return 1; }  
int main() {   int t;   cin >> t;   for (int i = 1; i <= t; i++) {     solve(i);   }   return 0; }
#include <bits/stdc++.h> using namespace std; 
using LL = long long;  double e[123], v[123], s[123], a[123][123], dp[123]; 
int main() {   freopen("123.in", "r", stdin);   freopen("123.out", "w", stdout);   int T, cas = 0;   cin >> T;   while (T--) {     int n, q;     cin >> n >> q;     for (int i = 1; i <= n; i++)       cin >> e[i] >> v[i];     for (int i = 1; i <= n; i++)       for (int j = 1; j <= n; j++)         cin >> a[i][j];     for (int i = 2; i <= n; i++)       s[i] = s[i - 1] + a[i - 1][i];     dp[1] = 0;     for (int i = 2; i <= n; i++)       dp[i] = 1e17;     for (int i = 0; i < n; i++)       for (int j = i + 1; j <= n; j++)         if (s[j] - s[i] <= e[i])           dp[j] = min(dp[j], dp[i] + (s[j] - s[i]) / v[i]);     int qu, qv;     cin >> qu >> qv;     printf("Case #%d: %.10f\n", ++cas, dp[n]);   }   return 0; }
#include <algorithm> #include <cstdio> #include <cstring> using namespace std;  
int N, Q, U, V; int e[200]; double s[200]; int d[200][200]; int go[200];  double ans[200]; 
int main(void) {   int t;   scanf("%d", &t);   for (int tt = 1; tt <= t; tt++) {     scanf("%d%d", &N, &Q);     for (int i = 0; i < N; ++i)       scanf("%d%lf", &e[i], &s[i]);     for (int i = 0; i < N; ++i)       for (int j = 0; j < N; ++j)         scanf("%d", &d[i][j]);      for (int k = 0; k < N; ++k)       for (int i = 0; i < N; ++i)         for (int j = 0; j < N; ++j) {           if (i == j || d[i][k] < 0 || d[k][j] < 0)             continue;           if (d[i][j] < 0 || d[i][j] >= d[i][k] + d[k][j]) {             d[i][j] = d[i][k] + d[k][j];           }         }      printf("Case #%d:", tt);      for (; Q--;) {       scanf("%d%d", &U, &V);       --U, --V;       for (int i = 0; i < N; ++i) {         ans[i] = -1;         go[i] = false;       }       ans[U] = 0;         int cur = U;       while (1) {         go[cur] = true;         for (int i = 0; i < N; ++i) {           if (d[cur][i] > e[cur] || d[cur][i] < 0)             continue;           if (ans[i] < 0 || ans[i] > ans[cur] + d[cur][i] / s[cur])             ans[i] = ans[cur] + d[cur][i] / s[cur];         }          double mind = -1;         for (int i = 0; i < N; ++i) {           if (go[i] || ans[i] < 0)             continue;           if (mind < 0 || mind > ans[i]) {             cur = i;             mind = ans[i];           }         }          if (mind < 0)           break;       }        printf(" %lf", ans[V]);     }      puts("");   }   return 0; }
#include <bits/stdc++.h>  using namespace std; 
typedef long long ll; typedef pair<int, int> ii; typedef pair<int, ii> iii;  ll pwr(ll base, ll p, ll mod = (1000000007LL)) {   ll ans = 1;   while (p) {     if (p & 1)       ans = (ans * base) % mod;     base = (base * base) % mod;     p /= 2;   }   return ans; }  ll gcd(ll a, ll b) {   if (b == 0)     return a;   return gcd(b, a % b); }  const int N = 102; int n, q; double endurance[N], speed[N], adj[N][N], dist[N][N];  typedef pair<double, int> pdi; void dijkstra(int src) {   for (int i = 1; i <= n; i++)     dist[src][i] = 1e15;   priority_queue<pdi> pq;   dist[src][src] = 0;   pq.push(pdi(0, src));   while (!pq.empty()) {      int v = pq.top().second;     double d = -pq.top().first;     pq.pop();     if (d > dist[src][v])       continue;      for (int vv = 1; vv <= n; vv++) {       if (adj[v][vv] > endurance[v])         continue;       double dd = d + adj[v][vv] / speed[v];       if (dd < dist[src][vv]) {         dist[src][vv] = dd;         pq.push(pdi(-dd, vv));       }     }   } }  
int main() {    ios_base::sync_with_stdio(0);   cin.tie(0);    freopen("C-small-attempt0.in", "r", stdin);   freopen("output.txt", "w", stdout);    int t, x = 1;   cin >> t;   while (t--) {      cin >> n >> q;     for (int i = 1; i <= n; i++)       cin >> endurance[i] >> speed[i];      for (int i = 1; i <= n; i++) {       for (int j = 1; j <= n; j++) {         cin >> adj[i][j];         if (adj[i][j] == -1)           adj[i][j] = 1e15;       }     }      for (int k = 1; k <= n; k++)       for (int i = 1; i <= n; i++)         for (int j = 1; j <= n; j++)           adj[i][j] = min(adj[i][j], adj[i][k] + adj[k][j]);      for (int i = 1; i <= n; i++)       dijkstra(i);      cout << "Case #" << x++ << ":";     while (q--) {       int a, b;       cin >> a >> b;       cout << fixed << setprecision(7) << " " << dist[a][b];     }     cout << endl;   }    return 0; }
#include <bits/stdc++.h>  using namespace std; 
typedef vector<int> vi; typedef long long ll; typedef long double ld; typedef pair<ll, ll> pii; typedef pair<pii, ll> para; const ll inf = 1e16 + 7; const ll maxN = 1e3 + 5;  int n, q, u, v, t; int horse[maxN], dist[maxN][maxN], speed[maxN]; ll pref[maxN]; ld dp[maxN];  
int main() {   ios_base::sync_with_stdio(0);   cin >> t;   for (ll x = (1); x <= ((t)); ++x) {     cin >> n >> q;     for (ll i = (1); i <= ((n)); ++i)       cin >> horse[i] >> speed[i];     for (ll i = (1); i <= ((n)); ++i) {       for (ll j = (1); j <= ((n)); ++j) {         cin >> dist[i][j];       }     }     pref[1] = 0;     for (ll i = (2); i <= (n); ++i) {       pref[i] = pref[i - 1] + dist[i - 1][i];     }     cout << "Case #" << x << ": ";     for (ll _ = (0); _ <= ((q)-1); ++_) {       cin >> u >> v;       for (ll i = (1); i <= ((n)); ++i)         dp[i] = (ld)inf;       dp[1] = 0;       for (ll i = (1); i <= ((n)); ++i) {         for (ll j = (i + 1); j <= (n); ++j) {            if (pref[j] - pref[i] > horse[i])             break;           dp[j] = min(dp[j], dp[i] + (pref[j] - pref[i]) / (ld)speed[i]);         }       }       cout << fixed << setprecision(9) << dp[n];     }     cout << endl;   }   return 0; }
#include <iostream>  using namespace std;  
int solve(int cc) {   long long n, q, e[105], s[105], d[105], temp;   cin >> n >> q;   for (int i = 0; i < n; i++) {     cin >> e[i] >> s[i];   }   for (int i = 0; i < n; i++) {     for (int j = 0; j < n; j++) {       if (j == i + 1) {         cin >> d[i];       } else {         cin >> temp;       }     }   }   cin >> temp >> temp;      long double dp[105];   for (int i = 0; i < n; i++) {     dp[i] = 1e11;   }   dp[n - 1] = 0;   for (int i = n - 2; i >= 0; i--) {     long double sss = 0;     long long ee = e[i];     long double tt = 0;     for (int j = i; j < n - 1; j++) {       ee -= d[j];       if (ee < 0) {         break;       }       tt += (1.0 * d[j]) / s[i];        if (j == i || tt + dp[j + 1] < sss) {         sss = tt + dp[j + 1];                }     }     dp[i] = sss;    }   cout << "Case #" << cc << ": " << fixed << dp[0] << endl;   return 1; }  
int main() {   int t;   cin >> t;   cout.precision(7);   for (int i = 1; i <= t; i++) {     solve(i);   }   return 0; }
#include <bits/stdc++.h> using namespace std;
typedef long long int lli;  int tc;  lli ctdy(string input) {   lli dp[18][2][10];   memset(dp, 0, sizeof(dp));   for (int i = '0'; i <= input[0]; i++) {     if (i != input[0]) {       dp[0][0][i - '0'] = 1;     } else {       dp[0][1][i - '0'] = 1;     }   };   for (int i = 0; i < input.size() - 1; i++) {     for (int j = 0; j <= 9; j++) {       for (int k = j; k <= 9; k++) {         dp[i + 1][0][k] += dp[i][0][j];       }     }     for (int j = 0; j <= 9; j++) {       if (dp[i][1][j] == 0)         continue;       for (int k = j; k <= input[i + 1] - '0'; k++) {         if (k != input[i + 1] - '0') {           dp[i + 1][0][k] += dp[i][1][j];         } else {           dp[i + 1][1][k] += dp[i][1][j];         }       }     }   }   lli sum = 0;   for (int i = 0; i <= 9; i++) {     sum += dp[input.size() - 1][0][i];     sum += dp[input.size() - 1][1][i];   }   return sum; }
int main() {   cin >> tc;   for (int t = 1; t <= tc; t++) {     char c[30];     lli num;     string s;     scanf("%s", c);     sscanf(c, "%lld", &num);     s = c;     lli goal = ctdy(s);      lli ub = num, lb = 0, m;     while (ub - lb > 1) {       m = (ub + lb) / 2;       num = m;       sprintf(c, "%lld", num);       s = c;       if (ctdy(s) != goal) {         lb = m;       } else {         ub = m;       }     }      printf("Case #%d: %lld\n", t, ub);   } }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> #include <vector> using namespace std;
const int MOD = 1000000007; const long double PI = 3.1415926535897932384626433832795;  int tc;  inline void gndtsjlqwu(int &get, long long dp[18][2][10], int &i, int &j) {   dp[i + 1][0][get] += dp[i][1][j]; }  long long ctdy(string input) {   long long dp[18][2][10];   memset(dp, 0, sizeof(dp));   {     int i = '0';     for (; i <= input[0];) {       if (i != input[0]) {         dp[0][0][i - '0'] = 1;       } else {         dp[0][1][i - '0'] = 1;       }       i++;     }   };   for (int i = 0; i < input.size() - 1; i++) {     for (int j = 0; j <= 9; j++) {       for (int get = j; get <= 9; get++)         dp[i + 1][0][get] += dp[i][0][j];     }     for (int j = 0; j <= 9; j++) {       if (dp[i][1][j] == 0)         continue;       for (int get = j; get <= input[i + 1] - '0'; get++) {         if (get != input[i + 1] - '0')           gndtsjlqwu(get, dp, i, j);         else {           dp[i + 1][1][get] += dp[i][1][j];         }       }     }   }   long long sum = 0;   for (int i = 0; i <= 9; i++) {     sum += dp[input.size() - 1][0][i];     sum += dp[input.size() - 1][1][i];   }   return sum; }
int main() {   cin >> tc;   for (int t = 1; t <= tc; t++) {     char c[30];     long long num;     string s;     cin >> c;     sscanf(c, "%lld", &num);     s = c;     long long goal = ctdy(s);      long long ub = num, lb = 0, m;     while (ub - lb > 1) {       m = (ub + lb) / 2;       num = m;       sprintf(c, "%lld", num);       s = c;       if (ctdy(s) != goal) {         lb = m;       } else {         ub = m;       }     }      printf("Case #%d: %lld\n", t, ub);   }   return 0; }
#include <bits/stdc++.h> using namespace std;
typedef long long ll; typedef pair<int, int> pii; typedef pair<ll, ll> pll; typedef vector<int> vi; typedef vector<vi> vvi; typedef vector<ll> vll; typedef set<int> si; typedef map<int, int> mii;  const int N = 1002; int t, digits; ll n; bool dp[N][12]; string ans, nString;  bool biggerThanN(string x) {   if (((int)(x).size()) < ((int)(nString).size()))     return false;   if (((int)(x).size()) > ((int)(nString).size()))     return true;   return x > nString; }  string conv(ll x) {   stringstream ss;   ss << x;   return ss.str(); }  void solve(int i, int p, string curr) {   if (biggerThanN(curr)) {     dp[i][p] = true;     return;   }   if (i <= digits + 1 and curr != "") {     if (((int)(curr).size()) > ((int)(ans).size()))       ans = curr;     if (((int)(curr).size()) == ((int)(ans).size()) and curr > ans)       ans = curr;   }   if (i == digits + 1)     return;   if (dp[i][p])     return;    for (int j = (p); j <= (int)(9); ++j)     solve(i + 1, j, curr + char(j + '0')); }
int main() {   freopen("B-small-attempt0.in", "r", stdin);   freopen("output.txt", "w", stdout);   scanf("%d", &t);   for (int testCase = (1); testCase <= (int)(t); ++testCase) {     cin >> n;     digits = (int)log10(n) + 1;     nString = conv(n);      ans = "";     memset(dp, 0, sizeof dp);     solve(1, 1, "");     printf("Case #%d: ", testCase);     cout << (ans) << endl;   } }
#include <cstdio> #include <cstdlib> #include <cstring> #include <iostream> using namespace std;
char s[64]; int n, l;
int main() {   freopen("B-small-attempt0.in", "r", stdin);   freopen("B-small-attempt0.out", "w", stdout);   int c, t, i, f;   scanf("%d", &t);   for (c = 0; c < t; c++) {     scanf("%s", s);     l = strlen(s);     for (i = l - 1; i >= 1; i--) {       if (s[i] < s[i - 1]) {         while ((i >= 1) && (s[i - 1] == '0')) {           i--;         }         s[i - 1]--;         memset(s + i, '9', (l - i) * sizeof(char));       }     }     printf("Case #%d: %I64d\n", c + 1, atoll(s));   }   return 0; }
#include <bits/stdc++.h> #include <cstdio> #include <cstdlib> #include <cstring> #include <iostream> using namespace std;
char cas[64]; int l;  inline void vzncudvbol(int &i) { i--; }  inline void stbqpwhblo(int &i) {   while ((i >= 1) && (cas[i - 1] == '0')) {     vzncudvbol(i);   }   cas[i - 1]--;   memset(cas + i, '9', (l - i) * sizeof(char)); }
int main() {   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_3_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/try/A-small-practice.in",           "r", stdin);   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_3_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/try/outer_temp/try/A-small-practice_transformation.out",           "w", stdout);   int ans, f;   cin >> ans;   {     int m = 0;     while (m < ans) {       cin >> cas;       l = strlen(cas);       int i;       {         i = l - 1;         while (i >= 1) {           if (cas[i] < cas[i - 1]) {             stbqpwhblo(i);           }           i--;         }       }       printf("Case #%d: %I64d\n", m + 1, atoll(cas));       m++;     }   }   return 0; }
#include <algorithm> #include <cstdio> #include <cstdlib> #include <cstring> #include <iostream> using namespace std;
char s[64]; int n, l;  inline void dcizdlhsvw(int &i) {   while ((i >= 1) && (s[i - 1] == '0')) {     i--;   }    s[i - 1]--;   memset(s + i, '9', (l - i) * sizeof(char)); }  inline void hunzkylkrt(int &ans) {   scanf("%s", s);   l = strlen(s);   for (int i = l - 1; i >= 1; i--) {     if (s[i] < s[i - 1]) {       dcizdlhsvw(i);     }   }   printf("Case #%d: %I64d\n", ans + 1, atoll(s));   ans++; }
int main() {    int t, f;   scanf("%d", &t);   {     int ans = 0;     while (ans < t)       hunzkylkrt(ans);   }   return 0; }
#include <cstdio> #include <iostream> #include <string>  using namespace std;
void work() {   string s;   cin >> s;   int pos;   for (int c = 1; c <= 18; ++c) {     pos = -1;     for (int i = 0; i < (int)s.size() - 1; ++i) {       if (s[i] > s[i + 1]) {         s[i]--;         pos = i + 1;         break;       }     }     if (pos != -1) {       for (int i = pos; i < (int)s.size(); ++i) {         s[i] = '9';       }     }   }   for (int i = 0; i < (int)s.size(); ++i) {     if (s[i] != '0') {       pos = i;       break;     }   }   for (int i = pos; i < (int)s.size(); ++i) {     cout << s[i];   }   cout << endl; }
int main() {   freopen("my.in", "r", stdin);   freopen("out.txt", "w", stdout);   int q;   cin >> q;   for (int i = 1; i <= q; ++i) {     printf("Case #%d: ", i);     work();   }   return 0; }
#include <algorithm> #include <cstdio> #include <cstring> #include <iostream> #include <string> #include <vector> using namespace std;
int main() {   int tt;    cin >> tt;    for (int t = 1; t <= tt; ++t) {     long long s;     vector<int> v;     cin >> s;      while (s > 0) {       v.push_back(s % 10);       s = s / 10;     }     int ind = v.size() - 1;     while (ind > 0 && (v[ind] <= v[ind - 1]))       ind--;     if (ind != 0) {       v[ind]--;       while (ind + 1 < v.size() && v[ind + 1] == v[ind] + 1) {         v[ind]++;         v[++ind]--;       }       while (ind > 0)         v[--ind] = 9;     }      for (int i = v.size() - 1; i >= 0; --i)       s = s * 10 + v[i];      cout << "Case #" << t << ": " << s << endl;   }    return 0; }
#include <algorithm> #include <bitset> #include <cassert> #include <cctype> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <set> #include <sstream> #include <stack> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;
typedef long double ld; typedef long long LL; typedef pair<int, int> ii; typedef pair<int, int> pii; typedef vector<int> vi; typedef long double LD;
int main() {   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_6_Usenix_RF_1.0_True_MCTS_Classic_True/lazyBit/WCG/A-small-practice.in", "r", stdin);    int ret_val = 0;   int tt;   cin >> tt;   {     int t = 1;     while (t <= tt) {       LL s;       vector<int> v;       cin >> s;        while (s > 0) {         v.push_back(s % 10);         s = s / 10;       }       int ind = v.size() - 1;       while (ind > 0 && (v[ind] <= v[ind - 1])) {         ind--;       }       if (ind != 0) {         v[ind]--;         while (ind + 1 < v.size() && v[ind + 1] == v[ind] + 1) {           v[ind]++;           v[++ind]--;         }         while (ind > 0)           v[--ind] = 9;       }        for (int i = v.size() - 1; i >= 0; --i)         s = s * 10 + v[i];        cout << "Case #" << t << ": " << s << endl;       ++t;     }   }   return ret_val; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <stack> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;
typedef set<int> si; typedef vector<vector<int>> vvi; typedef pair<int, int> pii; typedef vector<int> VI; typedef vector<pii> vii; typedef long long LL; const int INF = ~(1 << 31); const double pi = acos(-1);  inline void xewksdrlae(std::string &s, int &i, VI &k) {   char m = s[i];   k.push_back(m - '0'); }  bool check(int a) {   string s = to_string(a);   VI k;   for (int i = (0); i < (s.size()); i++)     xewksdrlae(s, i, k);   VI ne = k;   sort(ne.begin(), ne.end());   int i;   for (i = (0); i < (k.size()); i++)     if (k[i] != ne[i])       return false;   return true; }
int main() {   int ret_val = 0;   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_7_Usenix_RF_1.0_True_MCTS_Classic_True/lazyBit/bennikartefla/A-small-practice.in",           "r", stdin);   int n;   cin >> n;   for (int i = (0); i < (n); i++) {     int m;     cin >> m;     for (int a = m; a >= 0; a--) {       if (check(a)) {         cout << "Case #" << i + 1 << ": " << a << endl;         break;       }     }   }   return ret_val; }
#include <algorithm> #include <bits/stdc++.h> #include <cctype> #include <climits> #include <cmath> #include <ctime> #include <fstream> #include <functional> #include <iostream> #include <list> #include <queue> #include <set> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <vector> using namespace std;
const long double PI = 3.1415926535897932384626433832795;  typedef set<int> si;  typedef unsigned long long ull; typedef long double LD; typedef pair<int, int> pii; typedef vector<int> VI; typedef vector<pii> vii;  bool solve(int get) {   string s = to_string(get);   VI k;   for (int N = (0); N < (s.size()); N++) {     char t = s[N];     k.push_back(t - '0');   }   VI ne = k;   sort(ne.begin(), ne.end());   for (int N = (0); N < (k.size()); N++)     if (k[N] != ne[N])       return false;   return 1; }
int main() {    ofstream y("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_7_Usenix_RF_1.0_True_MCTS_Classic_True/Thanabhat/bennikartefla/outer_temp/bennikartefla/A-small-practice_transformation.out");   int n;   cin >> n;   for (int N = (0); N < (n); N++) {     int t;     cin >> t;     for (int get = t; get >= 0; get--) {       if (solve(get)) {         y << "Case #" << N + 1 << ": " << get << endl;         break;       }     }   }   return 0; }
#include <bits/stdc++.h> using namespace std;
typedef long long ll; typedef long long LL; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<int> vi; void open() {   freopen("D:/OneDrive/Code/GCJ/B-small-attempt0.in", "r", stdin);   freopen("D:/OneDrive/Code/GCJ/out.txt", "w", stdout); }
int main(void) {   open();   int tc;   scanf("%d", &tc);   for (int ct = 1; ct <= tc; ct++) {     printf("Case #%d: ", ct);     char str[100];     scanf("%s", str);     bool valid = true;     int len = strlen(str);     for (int i = 0; i < len - 1; i++) {       if (str[i] > str[i + 1]) {         valid = false;         int idx = i;         int carry = 1;         while (i >= 0 && carry) {           if (str[i] != '0') {             str[i]--;             carry = 0;           } else {             str[i] = '9';             carry = 1;           }            if (i > 0 && str[i - 1] > str[i]) {             carry = 1;             str[i] = '9';           }            i--;         }          for (int j = 0; j <= idx; j++) {           if (j == 0 && str[j] == '0')             continue;           printf("%c", str[j]);         }          for (int j = idx + 1; j < len; j++) {           printf("9");         }         printf("\n");         break;       }     }      if (valid) {       printf("%s\n", str);     }      cerr << "Test " << ct << " done \n";   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cctype> #include <cstdio> #include <cstdlib> #include <ctime> #include <deque> #include <functional> #include <iomanip> #include <iostream> #include <list> #include <map> #include <sstream> #include <stack> #include <stdlib.h> #include <vector> using namespace std;
typedef long long LL; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<int> vi; void open() {   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_8_Usenix_RF_1.0_True_MCTS_Classic_True/lazyBit/ccsnoopy/A-small-practice.in",           "r", stdin); }
int main(void) {   int ret_val = 0;   open();   int tc;   scanf("%d", &tc);   for (int ct = 1; ct <= tc; ct++) {     printf("Case #%d: ", ct);     char str[100];     scanf("%s", str);     bool valid = true;     int len = strlen(str);     for (int i = 0; i < len - 1; i++) {       if (str[i] > str[i + 1]) {         valid = false;         int idx = i;         int carry = 1;         while (i >= 0 && carry) {           if (str[i] != '0') {             str[i]--;             carry = 0;           } else {             str[i] = '9';             carry = 1;           }            if (i > 0 && str[i - 1] > str[i]) {             carry = 1;             str[i] = '9';           }            i--;         }          for (int j = 0; j <= idx; j++) {           if (j == 0 && str[j] == '0')             continue;           printf("%c", str[j]);         }          for (int j = idx + 1; j < len; j++) {           printf("9");         }         printf("\n");         break;       }     }      if (valid) {       printf("%s\n", str);     }      cerr << "Test " << ct << " done \n";   }   return ret_val; }
#include <bits/stdc++.h> using namespace std;
typedef long long LL; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<int> vi; void open() {   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_8_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/ccsnoopy/A-small-practice.in",           "r", stdin);   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_8_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/ccsnoopy/outer_temp/ccsnoopy/A-small-practice_transformation.out",           "w", stdout); }
int main(void) {   int ret_val = 0;   open();   int tc;   scanf("%d", &tc);   for (int ct = 1; ct <= tc; ct++) {     printf("Case #%d: ", ct);     char str[100];     scanf("%s", str);     bool valid = true;     int len = strlen(str);     for (int i = 0; i < len - 1; i++) {       if (str[i] > str[i + 1]) {         valid = false;         int idx = i;         int carry = 1;         while (i >= 0 && carry) {           if (str[i] != '0') {             str[i]--;             carry = 0;           } else {             str[i] = '9';             carry = 1;           }            if (i > 0 && str[i - 1] > str[i]) {             carry = 1;             str[i] = '9';           }            i--;         }          for (int j = 0; j <= idx; j++) {           if (j == 0 && str[j] == '0')             continue;           printf("%c", str[j]);         }          for (int j = idx + 1; j < len; j++) {           printf("9");         }         printf("\n");         break;       }     }      if (valid) {       printf("%s\n", str);     }      cerr << "Test " << ct << " done \n";   }   return ret_val; }
#include <bits/stdc++.h> #include <stdio.h> using namespace std;
using VI = vector<int>; using VVI = vector<VI>; using PII = pair<int, int>; using LL = long long; using VL = vector<LL>; using VVL = vector<VL>; using PLL = pair<LL, LL>; using VS = vector<string>; template <class S, class T> istream &operator>>(istream &i, pair<S, T> &p) {   return i >> p.first >> p.second; } template <class S, class T> ostream &operator<<(ostream &os, const pair<S, T> &p) {   return os << p.first << " " << p.second; } template <class T> void maxi(T &x, T y) {   if (x < y)     x = y; } template <class T> void mini(T &x, T y) {   if (x > y)     x = y; }  const double EPS = 1e-10; const double PI = acos(-1.0); const LL MOD = 1e9 + 7;  bool istidy(LL x) {   int prv = 10;   while (x > 0) {     if (prv < x % 10)       return false;     prv = x % 10;     x /= 10;   }   return true; }
int main() {   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_9_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/okaduki/outer_temp/okaduki/A-small-practice_transformation.out",           "w", stdout);    int ret_val = 0;   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_9_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/okaduki/A-small-practice.in",           "r", stdin);   cin.tie(0);   int tt;   scanf("%d ", &tt);   for (int cc = (1); cc < (tt + 1); ++cc) {     LL N;     scanf("%lld ", &N);     LL ans = 0;     for (ans = N; ans > 0; --ans)       if (istidy(ans))         break;      printf("Case #%d: %lld\n", cc, ans);   }   return ret_val; }
#include <algorithm> #include <bitset> #include <climits> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <iostream> #include <limits> #include <list> #include <map> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <string> #include <unordered_map> #include <vector> using namespace std;
const double pi = acos(-1.), eps = 1e-6; const int Maxn = 110, Maxk = 5010, Mo = 1e9 + 7, oo = INT_MAX >> 2; const int sp[4][2] = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}}; int T; long long f[1000][10]; int n, m, k, cs, ans; int N; string st;
int main() {   cin >> T;   while (T--) {     printf("Case #%d: ", ++cs);     cin >> st;     for (int w = 0; w < st.size(); w++) {       if (st[0] == '0')         break;       for (int i = 1; i < st.size(); i++) {         if (st[i] < st[i - 1]) {           st[i - 1]--;           for (int j = i; j < st.size(); j++)             st[j] = '9';           break;         }       }     }     if (st[0] == '0')       for (int i = 1; i < st.size(); i++)         cout << st[i];     else       cout << st;     cout << endl;   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <climits> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <iomanip> #include <iostream> #include <limits> #include <list> #include <map> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <string> #include <unordered_map> #include <vector> using namespace std;
int t;  ofstream fout;  ifstream fin;  int cs;  string st;
int main() {   fout.open("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_9_Usenix_RF_1.0_True_MCTS_Classic_True/4yn/kuzphi/outer_temp/kuzphi/A-small-practice_transformation.out");    fin.open("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_9_Usenix_RF_1.0_True_MCTS_Classic_True/4yn/kuzphi/A-small-practice.in");    int ret_val = 0;   fin >> t;   while (t--) {     fout << "Case #" << ++cs << ": ";     fin >> st;     {       int tc = 0;       while (tc < st.size()) {         if (st[0] == '0')           break;         for (int i = 1; i < st.size(); i++) {           if (st[i] < st[i - 1]) {             st[i - 1]--;             for (int euxi_Var = i; euxi_Var < st.size(); euxi_Var++)               st[euxi_Var] = '9';             break;           }         }         tc++;       }     }     if (st[0] == '0') {       int i = 1;       while (i < st.size()) {         fout << st[i];         i++;       }     } else {       fout << st;     }      fout << endl;   }   return ret_val; }
#include <algorithm> #include <climits> #include <cmath> #include <cstdio> #include <cstring> #include <iostream> #include <iterator> #include <map> #include <queue> #include <set> #include <stack> #include <string> #include <unordered_map> #include <utility> #include <vector>    using namespace std;
using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  ll gcd(ll a, ll b) {   ll t;   while ((t = a % b) != 0) {     a = b;     b = t;   }   return b; }  ll fast_exp(ll base, ll n, ll m) {   if (n == 0)     return 1;   ll t = fast_exp(base, n / 2, m);   if (n % 2 == 0)     return (t * t) % m;   else     return (((t * t) % m) * base) % m; }  bool is_set(int i, ll mask) { return (mask >> i) & 1; }  int count_bits(ll mask) {   int ans = 0;   for (int i = 0; i < 64; ++i)     if (is_set(i, mask))       ++ans;   return ans; }  int first_bit(ll mask) {   int i = 0;   while (i < 64)     if (is_set(i++, mask))       return i - 1;   return -1; }
int main() {   ios::sync_with_stdio(false);   int t;   cin >> t;   for (int i = 1; i <= t; ++i) {     string n;     cin >> n;     char l = '0';     int s = n.length();     for (int j = 0; j < s; ++j) {       if (n[j] < l) {         --j;         int k = j;         while (k > 0 && n[k] == '1')           n[k] = '9', --k;         n[k] -= 1;         while (k > 0 && n[k - 1] > n[k])           n[k - 1] -= 1, n[k] = '9', --k;         for (int x = j + 1; x < s; ++x)           n[x] = '9';         break;       }       l = n[j];     }     int k = 0;     while (n[k] == '0')       ++k;     cout << "Case #" << i << ": " << n.substr(k) << "\n";   }   return 0; }
#include <algorithm> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <cstdio> #include <cstring> #include <deque> #include <fstream> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <string> #include <unordered_map> #include <utility> #include <vector>    using namespace std;
using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  ll do_llbrw_fct(ll a, ll b) {   ll t;   while ((t = a % b) != 0) {     a = b;     b = t;   }   return b; }  ll do_llqrg_fct(ll y, ll n, ll m) {   if (n == 0)     return 1;   ll t = do_llqrg_fct(y, n / 2, m);   if (n % 2 == 0)     return (t * t) % m;   else     return (((t * t) % m) * y) % m; }  bool solve(int i, ll mask) { return (mask >> i) & 1; }  int do_intncr_fct(ll mask) {   int ans = 0;   for (int i = 0; i < 64; ++i)     if (solve(i, mask))       ++ans;   return ans; }  int get(ll mask) {   int i = 0;   while (i < 64)     if (solve(i++, mask))       return i - 1;    return -1; }
int main() {    freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_10_Usenix_RF_1.0_True_MCTS_Classic_True/try/ibrahim5253/outer_temp/ibrahim5253/A-small-practice_transformation.out",           "w", stdout);    freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_10_Usenix_RF_1.0_True_MCTS_Classic_True/try/ibrahim5253/A-small-practice.in",           "r", stdin);    int t;   scanf("%d ", &t);   for (int i = 1; i <= t; ++i) {     string n;     cin >> n;     char l = '0';     int s = n.length();     int j;     for (j = 0; j < s; ++j) {       if (n[j] < l) {         --j;         int c = j;         while (c > 0 && n[c] == '1')           n[c] = '9', --c;         n[c] -= 1;         while (c > 0 && n[c - 1] > n[c])           n[c - 1] -= 1, n[c] = '9', --c;         for (int x = j + 1; x < s; ++x)           n[x] = '9';         break;       }       l = n[j];     }     int c = 0;     while (n[c] == '0')       ++c;     printf("Case #%d: %s\n", i, n.substr(c).c_str());   }   return 0; }
#include <bits/stdc++.h> using namespace std;
typedef long long LL;
int main() {   freopen("123.in", "r", stdin);   freopen("123.out", "w", stdout);   int T, cas = 0;   cin >> T;   while (T--) {     string s;     cin >> s;     reverse(s.begin(), s.end());     int n = s.size();     for (int i = 1; i < n; i++) {       if (s[i] <= s[i - 1])         continue;       for (int j = 0; j < i; j++)         s[j] = '9';       int j = i;       while (s[j] == '0')         s[j] = '9', j++;       s[j]--;     }     while (s.back() == '0')       s.pop_back();     reverse(s.begin(), s.end());     printf("Case #%d: %s\n", ++cas, s.c_str());   }   return 0; }
#include <algorithm> #include <cstdio> #include <cstring> using namespace std;
bool f(int n) {   if (n < 10)     return true;   int a = n % 10;   int b = n % 100 / 10;   return f(n / 10) && (a >= b); }  char s[100];
int main(void) {   int t;   scanf("%d", &t);   for (int tt = 1; tt <= t; tt++) {        scanf("%s", s);     int k;     for (k = 1; s[k] != 0; ++k) {       if (s[k] < s[k - 1])         break;     }     if (s[k] == 0) {       printf("Case #%d: %s\n", tt, s);       continue;     }      int i = max(0, k - 1);     for (int j = strlen(s) - 1; j > i; --j)       s[j] = '9';      for (; i >= 0; --i) {       if (i == 0 || s[i] > s[i - 1]) {         --s[i];         break;       }       s[i] = '9';     }      printf("Case #%d: %s\n", tt, s[0] == '0' ? s + 1 : s);   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cassert> #include <cctype> #include <climits> #include <cstdio> #include <cstring> #include <deque> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <math.h> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> using namespace std;
char s[100];
int main(void) {   int ret_val = 0;   int t;   scanf("%d", &t);   for (int tt = 1; tt <= t; tt++) {         scanf("%s", s);     int k;     for (k = 1; s[k] != 0; ++k) {       if (s[k] < s[k - 1])         break;     }     if (s[k] == 0) {       printf("Case #%d: %s\n", tt, s);       continue;     }      int get = max(0, k - 1);     for (int solve = strlen(s) - 1; solve > get; --solve)       s[solve] = '9';      for (; get >= 0; --get) {       if (get == 0 || s[get] > s[get - 1]) {         --s[get];         break;       }       s[get] = '9';     }      printf("Case #%d: %s\n", tt, s[0] == '0' ? s + 1 : s);   }   return ret_val; }
#include <algorithm> #include <cassert> #include <cctype> #include <climits> #include <cstdio> #include <cstring> #include <ctime> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <map> #include <numeric> #include <queue> #include <set> #include <stdlib.h> #include <utility> #include <vector> using namespace std;
bool f(int n) {   if (n < 10)     return true;   int a = n % 10;   int b = n % 100 / 10;   return f(n / 10) && (a >= b); }  char s[100];
int main(void) {   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_12_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/iPeter/outer_temp/iPeter/A-small-practice_transformation.out",           "w", stdout);    freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_12_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/iPeter/A-small-practice.in",           "r", stdin);    int solve;   cin >> solve;   for (int c = 1; c <= solve; c++) {         cin >> s;     int k;     for (k = 1; s[k] != 0; ++k) {       if (s[k] < s[k - 1])         break;     }     if (s[k] == 0) {       printf("Case #%d: %s\n", c, s);       continue;     }      int i = max(0, k - 1);     for (int j = strlen(s) - 1; j > i; --j)       s[j] = '9';      for (; i >= 0; --i) {       if (i == 0 || s[i] > s[i - 1]) {         --s[i];         break;       }       s[i] = '9';     }      printf("Case #%d: %s\n", c, s[0] == '0' ? s + 1 : s);   }   return 0; }
#include <algorithm> #include <cstdio> #include <cstring> #include <iomanip> #include <iostream> using namespace std;
bool f(int n) {   if (n < 10)     return true;   int a = n % 10;   int b = n % 100 / 10;   return f(n / 10) && (a >= b); }  char s[100];
int main(void) {   int t;   cin >> t;   for (int tt = 1; tt <= t; tt++) {        cin >> s;     int k;     for (k = 1; s[k] != 0; ++k) {       if (s[k] < s[k - 1])         break;     }     if (s[k] == 0) {       cout << "Case #" << tt << ": " << s << "\n";       continue;     }      int i = max(0, k - 1);     for (int j = strlen(s) - 1; j > i; --j)       s[j] = '9';      for (; i >= 0; --i) {       if (i == 0 || s[i] > s[i - 1]) {         --s[i];         break;       }       s[i] = '9';     }      cout << "Case #" << tt << ": " << (s[0] == '0' ? s + 1 : s) << "\n";   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cctype> #include <climits> #include <cmath> #include <cstdio> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector>  using namespace std;
ifstream fin;  typedef set<int> si; typedef vector<vector<int>> vvi; typedef long long LL; typedef unsigned long long ull; typedef pair<int, int> pii;  LL pwr(LL j, LL p, LL mod = (1000000007LL)) {   LL ans = 1;   while (p) {     if (p & 1)       ans = (ans * j) % mod;     j = (j * j) % mod;     p /= 2;   }   return ans; }  LL get(LL a, LL b) {   if (b == 0)     return a;   return get(b, a % b); }  vector<int> d;  inline void ctfikebjla(LL &val) {   d.push_back(val % 10);   val /= 10; }
int main() {   int ret_val = 0;   fin.open("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_13_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/satyaki3794/A-small-practice.in");   cin.tie(0);   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_13_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/satyaki3794/outer_temp/satyaki3794/A-small-practice_transformation.out",           "w", stdout);   int t, x = 1;   fin >> t;   while (t--) {      LL val;     fin >> val;      LL z = val;     d.clear();     while (val)       ctfikebjla(val);     reverse(d.begin(), d.end());      bool ok = true;     {       int i = 1;       while (i < (int)d.size()) {         if (d[i] < d[i - 1])           ok = false;         i++;       }     }     if (ok) {       printf("Case #%d: %lld\n", x++, z);       continue;     }      int pos = 0;     for (int i = 1; i < (int)d.size(); i++) {       if (d[i] < d[i - 1])         break;       if (d[i] > d[i - 1])         pos = i;     }      d[pos]--;     int i;     for (i = pos + 1; i < (int)d.size(); i++)       d[i] = 9;     LL ans = 0;     for (auto it : d)       ans = ans * 10 + it;     printf("Case #%d: %lld\n", x++, ans);   }   return ret_val; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cstdio> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <stdio.h> #include <stdlib.h> #include <string> #include <vector>  using namespace std;
ofstream fout;  long long pwr(long long base, long long p, long long mod = (1000000007LL)) {   long long ans = 1;   while (p) {     if (p & 1)       ans = (ans * base) % mod;     base = (base * base) % mod;     p /= 2;   }   return ans; }  vector<int> y;
int main() {   fout.open("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_13_Usenix_RF_1.0_True_MCTS_Classic_True/WCG/satyaki3794/outer_temp/satyaki3794/A-small-practice_transformation.out");    cin.tie(0);       int t, x = 1;   cin >> t;      for (; t--;) {      long long val;     cin >> val;      long long z = val;     y.clear();     while (val) {       y.push_back(val % 10);       val /= 10;     }     reverse(y.begin(), y.end());      int ok = true;     int i;     for (i = 1; i < (int)y.size(); i++)       if (y[i] < y[i - 1])         ok = false;     if (ok) {       fout << "Case #" << x++ << ": " << z << endl;       continue;     }      int pos = 0;     for (int i = 1; i < (int)y.size(); i++) {       if (y[i] < y[i - 1])         break;       if (y[i] > y[i - 1])         pos = i;     }      y[pos]--;     for (int i = pos + 1; i < (int)y.size(); i++)       y[i] = 9;     long long ans = 0;     for (auto it : y)       ans = ans * 10 + it;     fout << "Case #" << x++ << ": " << ans << endl;   }    return 0; }
#include <bits/stdc++.h> using namespace std;
bool is_tidy(int n) {   int d = 9;   while (n) {     if (n % 10 > d) {       return 0;     }     d = n % 10;     n /= 10;   }   return 1; }
int main(int argc, char **argv) {   ifstream fin("/home/roman/CodeliteProjects/Competitive/GCJ17_Quals/in.txt");   ofstream fout("/home/roman/CodeliteProjects/Competitive/GCJ17_Quals/out.txt");    int t;   fin >> t;   for (int testcase = 0; testcase < t; ++testcase) {     long long int n;     fin >> n;     long long int tidy = 1;     for (int i = n; i > 1; --i) {       if (is_tidy(i)) {         tidy = i;         break;       }     }     fout << "Case #" << testcase + 1 << ": " << tidy << endl;   }    fin.close();   fout.close();   return 0; }
include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <complex> #include <cstdio> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <utility> #include <vector> using namespace std;
inline bool wxyhxhkblk(_Bool &nkhrz, _Bool &wxyhx) {   nkhrz = 0;   wxyhx = true;   return true;   return false; }  inline bool tfogmvqssj(_Bool &wxyhx, _Bool &tfogm) {   tfogm = wxyhx;   return true;   return false; }  inline bool zweeaajpdx(_Bool &tfogm, _Bool &zweea) {   zweea = tfogm;   return true;   return false; }  inline bool nkhrzqvyds(int &d, int &n, _Bool &nkhrz) {   if (n % 10 > d) {     _Bool wxyhx;     if (wxyhxhkblk(nkhrz, wxyhx)) {       _Bool tfogm;       if (tfogmvqssj(wxyhx, tfogm)) {         _Bool zweea;         if (zweeaajpdx(tfogm, zweea)) {           return zweea;         }       }     }   }   d = n % 10;   n /= 10;   return false; }  bool is_tidy(int n) {   int d = 9;   while (n) {     _Bool nkhrz;     if (nkhrzqvyds(d, n, nkhrz))       return nkhrz;   }   return 1; }
int main(int argc, char **argv) {   int ret_val = 0;   ofstream get("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_14_Usenix_RF_1.0_True_MCTS_Classic_True/WCG/gultai4ukr/outer_temp/gultai4ukr/A-small-practice_transformation.out");   int t;   cin >> t;   {     int tc = 0;     while (tc < t) {       long long int n;       cin >> n;       long long int tidy = 1;       {         int i = n;         while (i > 1) {           if (is_tidy(i)) {             tidy = i;             break;           }           --i;         }       }       get << "Case #" << tc + 1 << ": " << tidy << endl;       ++tc;     }   }   get.close();   return ret_val; }
#include <bits/stdc++.h> #include <iostream> #include <set> #include <utility> #include <vector> using namespace std;
typedef unsigned long long ull; typedef vector<vector<int>> vvi; typedef long long ll; typedef pair<int, int> pii; typedef pair<int, int> PII; typedef vector<int> VI; typedef long double LD; typedef set<int> si;  inline bool rpgfmnafcz(_Bool &rpgfm) {   rpgfm = 0;   return true;   return false; }  bool is_tidy(int n) {   int d = 9;   for (; n;) {     if (n % 10 > d) {       _Bool rpgfm;       if (rpgfmnafcz(rpgfm))         return rpgfm;     }     d = n % 10;     n /= 10;   }   return 1; }
int main(int argc, char **argv) {   ios::sync_with_stdio(false);    ifstream fin("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_14_Usenix_RF_1.0_True_MCTS_Classic_True/bennikartefla/gultai4ukr/A-small-practice.in");   ofstream fout("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_14_Usenix_RF_1.0_True_MCTS_Classic_True/bennikartefla/gultai4ukr/outer_temp/gultai4ukr/A-small-practice_transformation.out");    int t;   fin >> t;    for (int a = 0; a < t; ++a) {     ll n;     fin >> n;     ll tidy = 1;      for (int i = n; i > 1; --i) {       if (is_tidy(i)) {         tidy = i;         break;       }     }     fout << "Case #" << a + 1 << ": " << tidy << endl;   }    fin.close();   fout.close();   return 0; }
#include <bits/stdc++.h> #include <iostream> #include <stdio.h> #include <utility> #include <vector> using namespace std;
typedef vector<int> vi; typedef long long ll; typedef pair<int, int> ii;  bool is_tidy(int n) {   int d = 9;   while (n) {     if (n % 10 > d) {       return 0;     }     d = n % 10;     n /= 10;   }   return 1; }
int main(int argc, char **argv) {   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_14_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/gultai4ukr/outer_temp/gultai4ukr/A-small-practice_transformation.out", "w", stdout);    freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_14_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/gultai4ukr/A-small-practice.in",           "r", stdin);    int open;   scanf("%d ", &open);   for (int testcase = 0; testcase < open; ++testcase) {     ll n;     scanf("%lld ", &n);     ll tidy = 1;     for (int i = n; i > 1; --i) {       if (is_tidy(i)) {         tidy = i;         break;       }     }     cout << "Case #" << testcase + 1 << ": " << tidy << endl;   }    return 0; }
include <bitset> #include <deque> #include <iomanip> #include <iostream> #include <queue> #include <set> #include <sstream> #include <stack>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>    using namespace std;
typedef vector<int> vi; typedef vector<vi> vvi; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<string> vs;  typedef long long LL;            typedef unsigned long long ULL;   typedef unsigned uint;  const double pi = acos(-1.0);   const double eps = 1e-11;       const int MAXI = 0x7fffffff; const int dx[] = {1, 0, -1, 0}; const int dy[] = {0, 1, 0, -1}; const char dz[] = "SENW"; struct debugger {   template <typename T> debugger &operator,(const T &v) {     cerr << v << " ";     return *this;   } } dbg;  void debugarr(int *arr, int n) {   cout << "[";   for (int i = 0; i < n; i++)     cout << arr[i] << " ";   cout << "]" << endl; }  char str[50];  bool containszero(int l) {   int i = 0;   while (str[i] == '0') {     i++;   }   while (i < l) {     if (str[i] == '0')       return true;     i++;   }   return false; }
int main() {     int n, i, j, k, l, m, t, s = 0, d;   scanf("%d", &t);   ;   int c = 1;   while (t--) {     cin >> str;     bool p = 0;     l = strlen(str);     if (!containszero(l)) {       for (i = l - 1; i > 0; i--) {         if (str[i] < str[i - 1]) {           for (j = i; j < l; j++)             str[j] = '9';           str[i - 1] = (char)(str[i - 1] - 1);         }       }     }     while (containszero(l)) {       for (i = 0; i < l; i++) {         if (str[i] == '0') {           for (j = i; j < l; j++)             str[j] = '9';           str[i - 1] = (char)(str[i - 1] - 1);           break;         }       }       if (!containszero(l)) {         for (i = l - 1; i > 0; i--) {           if (str[i] < str[i - 1]) {             for (j = i; j < l; j++)               str[j] = '9';             str[i - 1] = (char)(str[i - 1] - 1);           }         }       }     }     printf("Case #%d: ", c++);     i = 0;     while (str[i] == '0') {       i++;       continue;     }     while (i < l) {       cout << str[i++];     }     printf("\n");   }   return (0); }
#include <bits/stdc++.h> #include <bitset> #include <deque> #include <iomanip> #include <iostream> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>    using namespace std;
typedef vector<int> vi; typedef vector<vi> vvi; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<string> vs;  typedef long long ll;             typedef unsigned long long ULL;   typedef unsigned uint;    struct debugger {   template <typename T> debugger &operator,(const T &v) {     cerr << v << " ";     return *this;   } };  void open(int *arr, int n) {   printf("[");   for (int i = 0; i < n; i++)     printf("%d ", arr[i]);   printf("]\n"); }  char str[50];  bool containszero(int tc) {   int i = 0;   while (str[i] == '0') {     i++;   }   while (i < tc) {     if (str[i] == '0')       return true;     i++;   }   return false; } inline void eznrsxcnfd(int &tc, int &j, int &i) {   for (j = i; j < tc; j++)     str[j] = '9';   str[i - 1] = (char)(str[i - 1] - 1); }  inline void jzrjwuyvjy(int &tc, int &j, int &i) {   for (j = i; j < tc; j++)     str[j] = '9';   str[i - 1] = (char)(str[i - 1] - 1); }
int main() {   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_16_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/lazyBit/outer_temp/lazyBit/A-small-practice_transformation.out",           "w", stdout);    freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_16_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/lazyBit/A-small-practice.in",           "r", stdin);      int n, i, j, k, tc, m, ct, s = 0, d;   scanf("%d", &ct);   ;   int c = 1;   while (ct--) {     scanf("%s ", str);     bool p = 0;     tc = strlen(str);     if (!containszero(tc)) {       for (i = tc - 1; i > 0; i--) {         if (str[i] < str[i - 1])           jzrjwuyvjy(tc, j, i);       }     }     while (containszero(tc)) {       for (i = 0; i < tc; i++) {         if (str[i] == '0') {           for (j = i; j < tc; j++)             str[j] = '9';           str[i - 1] = (char)(str[i - 1] - 1);           break;         }       }       if (!containszero(tc)) {         for (i = tc - 1; i > 0; i--) {           if (str[i] < str[i - 1])             eznrsxcnfd(tc, j, i);         }       }     }     printf("Case #%d: ", c++);     i = 0;     while (str[i] == '0') {       i++;       continue;     }     while (i < tc) {       printf("%c", str[i++]);     }     printf("\n");   }   return (0); }
#include <algorithm> #include <bits/stdc++.h> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <string> #include <unordered_map> #include <utility> #include <vector>  using namespace std;
const double EPS = 1e-9; const int MAXN = 1005; const double eps = 1e-9;  int T(int get) {   string n;   cin >> n;   int p = 0;   while (p < n.length() - 1) {     if (n[p] > n[p + 1]) {       break;     }     p++;   }   if (p == n.length() - 1) {     printf("Case #%d: %s\n", get, n.c_str());     return 1;   }   for (; p > 0 && n[p - 1] == n[p];) {     p--;   }   n[p] = n[p] - 1;   for (int i = p + 1; i < n.length(); i++)     n[i] = '9';    if (n[0] == '0') {     n.erase(n.begin());   }   printf("Case #%d: %s\n", get, n.c_str());   return 1; }
int main() {   int r;   scanf("%d ", &r);   {     int i = 0;     while (i < r) {       T(i + 1);       i++;     }   }    return 0; }
#include <bits/stdc++.h>  using namespace std;
bool check(int n) {   while (n > 0) {     if (n % 10 < n / 10 % 10) {       return false;     }     n /= 10;   }   return true; }
int main() {   freopen("in", "r", stdin);   freopen("out", "w", stdout);   int tt;   scanf("%d", &tt);   for (int cc = 1; cc <= tt; ++cc) {     printf("Case #%d: ", cc);     int n;     scanf("%d", &n);     int ans = n;     while (!check(ans)) {       --ans;     }     printf("%d\n", ans);   } }
#include <algorithm> #include <bitset> #include <cstdio> #include <cstring> #include <iostream> #include <map> #include <set> #include <string> #include <vector>  using namespace std;
const long long inf = 1000000000000000000LL;  vector<long long> res;  void rec(long long value, long long d) {   if (value >= inf) {     return;   }   res.push_back(value);   for (long long i = d; i <= 9; ++i) {     if (value < inf / 10LL) {       rec(value * 10LL + i, i);     }   } }  void solve(int test) {   long long n;   cin >> n;    int index = upper_bound(res.begin(), res.end(), n) - res.begin() - 1;   printf("Case #%d: %lld\n", test, res[index]); }
int main() {   freopen("input.txt", "r", stdin);   freopen("output.txt", "w", stdout);    for (int i = 1; i <= 9; ++i) {     rec(i, i);   }    sort(res.begin(), res.end());   cerr << "Res size: " << res.size() << endl;    int t;   scanf("%d", &t);   for (int i = 0; i < t; ++i) {     solve(i + 1);     cerr << i + 1 << ": " << clock() << endl;   }    return 0; }
#include <algorithm> #include <bitset> #include <cstdio> #include <cstring> #include <iostream> #include <map> #include <set> #include <stdio.h> #include <string> #include <vector>  using namespace std;
const long long inf = 1000000000000000000LL;  vector<long long> res;  void rec(long long value, long long d) {   if (value >= inf) {     return;   }   res.push_back(value);   for (long long i = d; i <= 9; ++i) {     if (value < inf / 10LL) {       rec(value * 10LL + i, i);     }   } }  void solve(int test) {   long long s;   scanf("%lld ", &s);    int index = upper_bound(res.begin(), res.end(), s) - res.begin() - 1;   printf("Case #%d: %lld\n", test, res[index]); }  inline void pdyjermzxu(int &i) {   solve(i + 1);   cerr << i + 1 << ": " << clock() << endl; }
int main() {    for (int i = 1; i <= 9; ++i) {     rec(i, i);   }    sort(res.begin(), res.end());   cerr << "Res size: " << res.size() << endl;    int t;   scanf("%d", &t);   for (int i = 0; i < t; ++i)     pdyjermzxu(i);    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;
const int MAXN = 1005; const int MOD = 1000000007;  const int INF = 1000000000; const int mod = 1000000007; typedef long long int lli; typedef pair<lli, lli> pii;  int tc;  inline void elxumzletu(int &y, priority_queue<int> &pq, int &z) {   int t = pq.top() - 1;   pq.pop();   y = t / 2 + (t % 2);   z = t / 2;   pq.push(y);   pq.push(z); }
int main() {    cin >> tc;   {     int t = 1;     for (; t <= tc;) {       int n, k;       cin >> n >> k;       priority_queue<int> pq;       pq.push(n);       int y, z;       int i;       for (i = 0; i < k; i++)         elxumzletu(y, pq, z);       printf("Case #%d: %d %d\n", t, y, z);       t++;     }   }   return 0; }
#include <bits/stdc++.h> #include <bitset> #include <cassert> #include <climits> #include <cstdio> #include <cstdlib> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <map> #include <queue> #include <set> #include <sstream> #include <stdlib.h> #include <string> #include <utility> #include <vector> using namespace std;
typedef long long ll; typedef pair<int, int> pii; typedef vector<int> vi; typedef vector<int> VI; typedef long double LD; typedef vector<vector<int>> vvi;  priority_queue<int> Q, E; int n, k;
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_3_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/try/A-small-practice.in",           "r", stdin);   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_3_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/try/outer_temp/try/A-small-practice_transformation.out",           "w", stdout);   int t, i, x, y, z;   cin >> t;   for (int c = 0; c < t; c++) {     cin >> n >> k;     Q = E;     Q.push(n);     for (i = 0; i < k; i++) {       x = Q.top();       Q.pop();       y = x / 2;       z = (x - 1) / 2;       Q.push(y);       Q.push(z);     }     cout << "Case #" << c + 1 << ": " << y << " " << z << "\n";   }   return 0; }
#include <cstdio> #include <iostream> #include <map> #include <string> #include <vector>  using namespace std;
struct node {   long long u, v;   node(int _u = 0, int _v = 0) : u(_u), v(_v) {}   bool operator<(const node &r) const { return u < r.u; } };  void work() {   long long n, k;   cin >> n >> k;   map<long long, long long> f;   f[n] = 1;   long long sum = 0;   long long l = (n - 1) / 2, r = n / 2;   while (sum < k) {     long long u = f.rbegin()->first, v = f.rbegin()->second;     f.erase(u);     sum += v;     l = (u - 1) / 2;     r = u / 2;     f[l] += v;     f[r] += v;   }   cout << r << ' ' << l << endl; }
int main() {   freopen("my.in", "r", stdin);   freopen("out.txt", "w", stdout);   int q;   cin >> q;   for (int i = 1; i <= q; ++i) {     printf("Case #%d: ", i);     work();   }   return 0; }
include <bits/stdc++.h> #include <cctype> #include <climits> #include <cmath> #include <cstdio> #include <cstring> #include <deque> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <set> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector>  using namespace std;
const int MOD = 1000000007;  typedef long long ll; typedef pair<int, int> ii; typedef pair<int, int> pii; typedef vector<int> VI;  struct node {   long long u, v;   node(int _u = 0, int _v = 0) : u(_u), v(_v) {}   bool operator<(const node &r) const { return u < r.u; } };  inline void wqjiyofgle(ll &sum, ll &l, map<long long, long long> &f, ll &r) {   ll t = f.rbegin()->first, v = f.rbegin()->second;   f.erase(t);   sum += v;   l = (t - 1) / 2;   r = t / 2;   f[l] += v;   f[r] += v; }  inline void tnypupfuce(ll &sum, ll &l, map<long long, long long> &f, ll &r) {   wqjiyofgle(sum, l, f, r); }  void work() {   ll n, k;   cin >> n >> k;   map<long long, long long> f;   f[n] = 1;   ll sum = 0;   ll l = (n - 1) / 2, r = n / 2;   while (sum < k)     tnypupfuce(sum, l, f, r);   cout << r << ' ' << l << endl; }  int main() {   ios::sync_with_stdio(1);    int q;   cin >> q;   for (int i = 1; i <= q; ++i) {     cout << "Case #" << i << ": ";     work();   }   return 0; }
#include <algorithm> #include <cstdio> #include <cstring> #include <iostream> #include <map> #include <queue> using namespace std;
int main() {   int tt;    cin >> tt;    for (int t = 1; t <= tt; ++t) {     long long n, k, y, z;     map<long long, long long> m;     queue<long long> q;     cin >> n >> k;      q.push(n);     m[n] = 1;      while (k > 0) {       long long c = q.front();       q.pop();       y = c / 2;       z = (c - 1) / 2;       k -= m[c];       if (m.find(y) == m.end())         q.push(y);       m[y] += m[c];       if (m.find(z) == m.end())         q.push(z);       m[z] += m[c];     }      cout << "Case #" << t << ": " << y << " " << z << endl;   }    return 0; }
#include <algorithm> #include <cassert> #include <cmath> #include <complex> #include <cstdio> #include <cstring> #include <deque> #include <fstream> #include <iostream> #include <iterator> #include <list> #include <map> #include <numeric> #include <queue> #include <set> #include <stack> #include <stdio.h> #include <stdlib.h> #include <utility> #include <vector> using namespace std;
typedef set<int> si; typedef long double ld; typedef long long LL; typedef pair<int, int> PII; typedef pair<int, int> pii; typedef vector<int> vi; typedef long double LD;
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_6_Usenix_RF_1.0_True_MCTS_Classic_True/lazyBit/WCG/A-small-practice.in", "r", stdin);    int ret_val = 0;   int tt;   cin >> tt;   for (int t = 1; t <= tt; ++t) {     LL n, k, y, z;     map<long long, long long> m;     queue<long long> q;     cin >> n >> k;      q.push(n);     m[n] = 1;      while (k > 0) {       LL c = q.front();       q.pop();       y = c / 2;       z = (c - 1) / 2;       k -= m[c];       if (m.find(y) == m.end())         q.push(y);       m[y] += m[c];       if (m.find(z) == m.end())         q.push(z);       m[z] += m[c];     }      cout << "Case #" << t << ": " << y << " " << z << endl;   }   return ret_val; }
#include <bits/stdc++.h> #include <iostream> #include <set> using namespace std;
typedef long double ld; typedef long double LD; typedef set<int> si; typedef pair<int, int> pii; typedef vector<int> VI; typedef vector<pii> vii;  const int INF = ~(1 << 31); const double pi = acos(-1);
int main() {   cin.sync_with_stdio(0);    int n;   cin >> n;   int i;   for (i = (0); i < (n); i++) {     priority_queue<int> k;     int m, q;     cin >> m >> q;     cout << "Case #" << i + 1 << ": ";     k.push(m - 1);     int a;     for (a = (0); a < (q - 1); a++) {       if (k.empty()) {         break;       } else {         int solve = k.top();         k.pop();         if (solve == 0)           continue;         int want = solve / 2;         int get = want;         if (get != 0)           k.push(get - 1);         int second = solve - want;         k.push(second - 1);       }     }     if (k.empty())       cout << "0 0" << endl;     else {       int solve = k.top();       if (solve == 0)         cout << "0 0" << endl;       else {         int get = solve / 2;         cout << solve - get << " " << get << endl;       }     }   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cassert> #include <climits> #include <complex> #include <cstdio> #include <cstdlib> #include <ctime> #include <iostream> #include <iterator> #include <map> #include <numeric> #include <queue> #include <set> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> using namespace std;
typedef long double LD; typedef set<int> si; typedef pair<int, int> pii; typedef vector<int> VI; typedef vector<pii> vii; typedef long long LL; const int INF = ~(1 << 31); const double pi = acos(-1);
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_7_Usenix_RF_1.0_True_MCTS_Classic_True/lazyBit/bennikartefla/A-small-practice.in",           "r", stdin);    int n;   scanf("%d ", &n);   for (int i = (0); i < (n); i++) {     priority_queue<int> k;     int m, q;     scanf("%d %d ", &m, &q);     cout << "Case #" << i + 1 << ": ";     k.push(m - 1);     for (int a = (0); a < (q - 1); a++) {       if (k.empty())         break;       else {         int at = k.top();         k.pop();         if (at == 0)           continue;         int want = at / 2;         int first = want;         if (first != 0)           k.push(first - 1);         int second = at - want;         k.push(second - 1);       }     }     if (k.empty())       cout << "0 0" << endl;     else {       int at = k.top();       if (at == 0)         cout << "0 0" << endl;       else {         int first = at / 2;         cout << at - first << " " << first << endl;       }     }   }   return 0; }
#include <bits/stdc++.h> #include <iostream> #include <vector> using namespace std;
const int MAXN = 1005;  typedef vector<vector<int>> vvi; typedef unsigned long long ull; typedef long double LD; typedef pair<int, int> PII; typedef vector<int> VI; typedef vector<PII> vii;  inline void owyxhfltvp(int &ans) {   int first = ans / 2;   cout << ans - first << " " << first << endl; }  inline void eescadppjt(priority_queue<int> &k) {   int ans = k.top();   if (ans == 0)     cout << "0 0" << endl;   else     owyxhfltvp(ans); }
int main() {    int get;   cin >> get;   for (int solve = (0); solve < (get); solve++) {     priority_queue<int> k;     int t, q;     cin >> t >> q;     cout << "Case #" << solve + 1 << ": ";     k.push(t - 1);     for (int a = (0); a < (q - 1); a++) {       if (k.empty())         break;       else {         int ans = k.top();         k.pop();         if (ans == 0)           continue;         int want = ans / 2;         int first = want;         if (first != 0)           k.push(first - 1);         int second = ans - want;         k.push(second - 1);       }     }     if (k.empty())       cout << "0 0" << endl;     else {       eescadppjt(k);     }   }   return 0; }
#include <bits/stdc++.h> using namespace std;
typedef long long ll; typedef long long LL; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<int> vi; void open() {   freopen("D:/OneDrive/Code/GCJ/C-small-1-attempt0.in", "r", stdin);   freopen("D:/OneDrive/Code/GCJ/out.txt", "w", stdout); }
int main(void) {   open();   int tc;   scanf("%d", &tc);   for (int ct = 1; ct <= tc; ct++) {     int n, k;     scanf("%d", &n);     scanf("%d", &k);     priority_queue<int> pq;     pq.push(n);      printf("Case #%d: ", ct);      while (k--) {       int top = pq.top();       pq.pop();       int mid = top - 1;       int l, r;       l = mid / 2;       r = (mid + 1) / 2;       if (k == 0) {         printf("%d %d\n", r, l);       }       if (l) {         pq.push(l);       }        if (r) {         pq.push(r);       }     }      cerr << "Test " << ct << " done \n";   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cassert> #include <climits> #include <complex> #include <cstdio> #include <cstdlib> #include <ctime> #include <iterator> #include <map> #include <numeric> #include <queue> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> using namespace std;
const int INF = 1000000000;  typedef long long LL; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<int> vi; void open() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_8_Usenix_RF_1.0_True_MCTS_Classic_True/lazyBit/ccsnoopy/A-small-practice.in",           "r", stdin); }
int main(void) {   int ret_val = 0;   open();   int tc;   scanf("%d", &tc);   for (int a = 1; a <= tc; a++) {     int n, k;     scanf("%d", &n);     scanf("%d", &k);     priority_queue<int> pq;     pq.push(n);      printf("Case #%d: ", a);      while (k--) {       int top = pq.top();       pq.pop();       int mid = top - 1;       int l, r;       l = mid / 2;       r = (mid + 1) / 2;       if (k == 0) {         printf("%d %d\n", r, l);       }       if (l) {         pq.push(l);       }        if (r) {         pq.push(r);       }     }      cerr << "Test " << a << " done \n";   }   return ret_val; }
#include <bits/stdc++.h> using namespace std;
typedef long long LL; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<int> vi; void open() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_8_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/ccsnoopy/A-small-practice.in",           "r", stdin);   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_8_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/ccsnoopy/outer_temp/ccsnoopy/A-small-practice_transformation.out",           "w", stdout); }
int main(void) {   int ret_val = 0;   open();   int tc;   scanf("%d", &tc);   for (int ct = 1; ct <= tc; ct++) {     int n, k;     scanf("%d", &n);     scanf("%d", &k);     priority_queue<int> pq;     pq.push(n);      printf("Case #%d: ", ct);      while (k--) {       int top = pq.top();       pq.pop();       int mid = top - 1;       int l, r;       l = mid / 2;       r = (mid + 1) / 2;       if (k == 0) {         printf("%d %d\n", r, l);       }       if (l) {         pq.push(l);       }        if (r) {         pq.push(r);       }     }      cerr << "Test " << ct << " done \n";   }   return ret_val; }
#include <bits/stdc++.h> #include <set> #include <utility> #include <vector> using namespace std;
typedef pair<int, int> pii; typedef pair<int, int> PII; typedef long double LD; typedef set<int> si; typedef vector<vector<int>> vvi; typedef long long ll;
int main() {   int ret_val = 0;   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_11_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/jiian/A-small-practice.in",           "r", stdin);   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_11_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/jiian/outer_temp/jiian/A-small-practice_transformation.out",           "w", stdout);   int T, cas = 0;   cin >> T;   while (T--) {     ll n, k;     cin >> n >> k;     int d = 0;     for (ll v = 1; v <= k; v <<= 1)       d++;     printf("Case #%d: ", ++cas);     ll base = 1 << d;     if (n < base) {       puts("0 0");       continue;     }     ll md = (n - (base - 1)) % base;     ll lx = (n - (base - 1)) / base, rx = lx;     int id = k - (1 << (d - 1)) + 1;     if (id <= md)       rx++;     if (id + (1 << (d - 1)) <= md)       lx++;     printf("%lld %lld\n", rx, lx);   }   return ret_val; }
#include <bits/stdc++.h> #include <cassert> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <ctime> #include <fstream> #include <functional> #include <iostream> #include <math.h> #include <numeric> #include <set> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> using namespace std;
inline void eniwewgyyp(int &d, long long &v) {   d++;   v <<= 1; }  inline void ioxbtenuhp(long long &c, int &d) {   long long v = 1;   while (v <= c)     eniwewgyyp(d, v); }
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_11_Usenix_RF_1.0_True_MCTS_Classic_True/try/jiian/A-small-practice.in",           "r", stdin);   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_11_Usenix_RF_1.0_True_MCTS_Classic_True/try/jiian/outer_temp/jiian/A-small-practice_transformation.out",           "w", stdout);   int solve, cas = 0;   scanf("%d ", &solve);   while (solve--) {     long long n, c;     scanf("%lld %lld ", &n, &c);     int d = 0;     ioxbtenuhp(c, d);     printf("Case #%d: ", ++cas);     long long base = 1 << d;     if (n < base) {       puts("0 0");       continue;     }     long long md = (n - (base - 1)) % base;     long long lx = (n - (base - 1)) / base, rx = lx;     int id = c - (1 << (d - 1)) + 1;     if (id <= md)       rx++;     if (id + (1 << (d - 1)) <= md)       lx++;     printf("%lld %lld\n", rx, lx);   }   return 0; }
#include <algorithm> #include <cstdio> #include <cstring> #include <queue> using namespace std;
int main(void) {   int t;   scanf("%d", &t);   for (int tt = 1; tt <= t; tt++) {      int n, k;     priority_queue<int> q;     scanf("%d%d", &n, &k);     q.push(n);     while (--k) {       int x = q.top();       q.pop();       q.push(x / 2);       q.push((x - 1) / 2);     }      int v = q.top();     printf("Case #%d: %d %d\n", tt, v / 2, (v - 1) / 2);   }   return 0; }
#include <algorithm> #include <cstdio> #include <cstring> #include <queue> using namespace std;
int main(void) {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_12_Usenix_RF_1.0_True_MCTS_Classic_True/try/iPeter/A-small-practice.in", "r", stdin);    int t;   scanf("%d", &t);   int tt;   for (tt = 1; tt <= t; tt++) {      int n, k;     priority_queue<int> q;     scanf("%d%d", &n, &k);     q.push(n);     while (--k) {       int x = q.top();       q.pop();       q.push(x / 2);       q.push((x - 1) / 2);     }      int v = q.top();     printf("Case #%d: %d %d\n", tt, v / 2, (v - 1) / 2);   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <queue> #include <set> #include <stack> #include <stdio.h> #include <unordered_map> #include <utility> using namespace std;
int main(void) {   int ret_val = 0;   int t;   scanf("%d", &t);   for (int tt = 1; tt <= t; tt++) {      int n, k;     priority_queue<int> solve;     scanf("%d%d", &n, &k);     solve.push(n);     while (--k) {       int x = solve.top();       solve.pop();       solve.push(x / 2);       solve.push((x - 1) / 2);     }      int v = solve.top();     cout << "Case #" << tt << ": " << v / 2 << " " << (v - 1) / 2 << "\n";   }   return ret_val; }
#include <bits/stdc++.h>  using namespace std;
typedef long long ll; typedef unsigned long long ull; typedef pair<ll, ll> ii;  ll pwr(ll base, ll p, ll mod = (1000000007LL)) {   ll ans = 1;   while (p) {     if (p & 1)       ans = (ans * base) % mod;     base = (base * base) % mod;     p /= 2;   }   return ans; }  ll gcd(ll a, ll b) {   if (b == 0)     return a;   return gcd(b, a % b); }  struct compare {   bool operator()(const ii &a, const ii &b) const {     if ((a.first - 1) / 2 != (b.first - 1) / 2)       return a.first > b.first;     return (a.first - 1 - (a.first - 1) / 2) >            (b.first - 1 - (b.first - 1) / 2);   } };  set<ii> arr;
int main() {    ios_base::sync_with_stdio(0);   cin.tie(0);    freopen("C-small-1-attempt1.in", "r", stdin);   freopen("output.txt", "w", stdout);      int t, x = 1;   cin >> t;     while (t--) {      ll n, k;     cin >> n >> k;        arr.clear();     arr.insert(ii(-n, 1));     set<ii>::iterator it;     ll ans_l, ans_r;        while (k > 0) {          assert(!arr.empty());       it = arr.begin();       ii temp = (*it);       temp.first *= -1;       arr.erase(it);       if (temp.second == 0)         continue;             ll z = min(k, temp.second);       if (temp.second > z) {         arr.insert(ii(-temp.first, temp.second - z));         temp.second = z;       }       k -= z;        ll l = (temp.first - 1) / 2, r = temp.first - 1 - l;       ans_l = max(l, r);       ans_r = min(l, r);             if (l > 0) {         it = arr.lower_bound(ii(-l, -1));         if (it != arr.end() && (*it).first == -l) {           ll cnt = (*it).second + temp.second;           arr.erase(it);           arr.insert(ii(-l, cnt));           } else {           ll cnt = temp.second;           arr.insert(ii(-l, cnt));           }       }        if (r > 0) {         it = arr.lower_bound(ii(-r, -1));         if (it != arr.end() && (*it).first == -r) {           ll cnt = (*it).second + temp.second;           arr.erase(it);           arr.insert(ii(-r, cnt));           } else {           ll cnt = temp.second;           arr.insert(ii(-r, cnt));           }       }     }      cout << "Case #" << x++ << ": " << ans_l << " " << ans_r << endl;   }    return 0; }
#include <bits/stdc++.h> #include <stdio.h>  using namespace std;
typedef vector<int> vi; typedef long long ll; typedef long double ld; typedef pair<int, int> pii; typedef pair<pii, int> para; const int inf = 1e9 + 7; const int maxN = 1e6 + 5;  int t, cnt[5];  void solve(int n, int k) {   if (n == k) {     cout << "0 0\n";     return;   }    int pot = 1;    int a = n, b = 0;   cnt[0] = 1;   cnt[1] = 0;   while (pot < k) {     int newA = 0, newB = 0;     newA = a / 2;     cnt[2] = cnt[0];     if (a - newA - 1 != newA && newA != 1) {       cnt[3] = cnt[0];       newB = a - newA - 1;     } else {       if (a != 2)         cnt[2] += cnt[0];     }      if (b > 1) {       if (b % 2 == 0) {         if (b != 2) {           newB = b - (b / 2) - 1;           cnt[3] += cnt[1];         }         cnt[2] += cnt[1];       } else         cnt[3] += cnt[1] * 2;      } else {       cnt[2] += cnt[1];       if (a != n && b != 0)         k++;     }      a = newA;     b = newB;     cnt[0] = cnt[2];     cnt[1] = cnt[3];     cnt[2] = cnt[3] = 0;       k -= pot;     pot *= 2;   }     if (k > cnt[0])     a = b;   cout << a / 2 << " " << max(0, a - (a / 2) - 1) << endl; }
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_15_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/Mucosolvan/outer_temp/Mucosolvan/A-small-practice_transformation.out",           "w", stdout);    freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_15_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/Mucosolvan/A-small-practice.in",           "r", stdin);    scanf("%d ", &t);   for (int x = (1); x <= ((t)); ++x) {     int n, k;     scanf("%d %d ", &n, &k);     cout << "Case #" << x << ": ";     solve(n, k);   }   return 0; }
#include <bits/stdc++.h> #include <bitset> #include <deque> #include <iomanip> #include <iostream> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>    using namespace std;
typedef vector<int> vi; typedef vector<vi> vvi; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<string> vs;  typedef long long ll;             typedef unsigned long long ULL;   typedef unsigned uint;    struct debugger {   template <typename T> debugger &operator,(const T &v) {     cerr << v << " ";     return *this;   } };  void debugarr(int *arr, int n) {   printf("[");   for (int i = 0; i < n; i++)     printf("%d ", arr[i]);   printf("]\n"); }  long long pow2(int a, long long int b) {   long long x = 1, y = a;   while (b > 0) {     if (b % 2 == 1) {       x = (x * y);     }     y = (y * y);     b /= 2;   }   return x; } ll dist[2]; inline void dmsrcjpqmw(int &c, ll &used) {   printf("Case #%d: %lld %lld\n", c++, used / 2, (used - 1) / 2); }  inline void jbazuckwzj(ll &tempx, ll &tempx1, ll &x1, ll tempdist[2]) {   tempx = (x1 - 1) / 2;   tempx1 = x1 / 2;   tempdist[0] += dist[1];   tempdist[1] += dist[1]; }
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_16_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/lazyBit/A-small-practice.in",           "r", stdin);    freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_16_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/lazyBit/outer_temp/lazyBit/A-small-practice_transformation.out",           "w", stdout);      int j, tc, m, ct, s = 0, d;   ll n, k, x, x1, level, used, prevLevel, rem;   scanf("%d", &ct);   ;   int c = 1;   while (ct--) {     scanf("%lld ", &n);     scanf("%lld ", &k);     x = n;     x1 = n;     level = log2(k);     dist[0] = 1;     dist[1] = 0;     ll tempx, tempx1;     ll tempdist[2];     for (int i = 1; i <= level; i++) {       tempdist[0] = 0;       tempdist[1] = 0;       if (x & 1) {         tempx = x / 2;         tempx1 = tempx;         tempdist[0] = 2 * dist[0];       } else {         tempx = (x - 1) / 2;         tempx1 = tempx + 1;         tempdist[0] = dist[0];         tempdist[1] = dist[0];       }        if (dist[1] > 0) {         if (!(x1 & 1))           jbazuckwzj(tempx, tempx1, x1, tempdist);         else {           tempx1 = x1 / 2;           tempdist[1] += 2 * dist[1];         }       }       x = tempx;       x1 = tempx1;       dist[0] = tempdist[0];       dist[1] = tempdist[1];     }     prevLevel = pow2(2, level) - 1;     rem = k - prevLevel;       if (rem > dist[1]) {       used = x;     } else {       used = x1;     }       if (used & 1) {       printf("Case #%d: %lld %lld\n", c++, used / 2, used / 2);     } else       dmsrcjpqmw(c, used);   }   return (0); }
#include <iostream>  using namespace std;
int solve(int cc) {   long long n, k, t = 0, onell = 1LL;   cin >> n >> k;   while (k > 0) {     n -= (onell << t);     if (k > (onell << t)) {       k -= (onell << t);       t++;     } else {       break;     }     }   long long solmax = 0, solmin = 0;   if (n > 0) {     long long tt = (onell << (t + 1));     long long ttt = n / tt;     long long tttt = n % tt;     if (tttt >= k) {       solmax = ttt + 1;     } else {       solmax = ttt;     }     tttt -= (tt / 2);     if (tttt >= k) {       solmin = ttt + 1;     } else {       solmin = ttt;     }   }   cout << "Case #" << cc << ": " << solmax << " " << solmin << endl;   return 1; }
int main() {   int t;   cin >> t;   for (int i = 0; i < t; i++) {     solve(i + 1);   }   return 0; }
#include <bits/stdc++.h> #include <iostream> #include <stdio.h> #include <vector>  using namespace std;
typedef vector<int> vi; typedef long long ll; typedef long long LL;  int solve(int cc) {   LL n, k, t = 0, onell = 1LL;   scanf("%lld %lld ", &n, &k);   while (k > 0) {     n -= (onell << t);     if (k > (onell << t)) {       k -= (onell << t);       t++;     } else {       break;     }     }   LL solmax = 0, solmin = 0;   if (n > 0) {     LL tt = (onell << (t + 1));     LL ttt = n / tt;     LL tttt = n % tt;     if (tttt >= k) {       solmax = ttt + 1;     } else {       solmax = ttt;     }     tttt -= (tt / 2);     if (tttt >= k) {       solmin = ttt + 1;     } else {       solmin = ttt;     }   }   cout << "Case #" << cc << ": " << solmax << " " << solmin << endl;   return 1; }
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_17_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/Thanabhat/A-small-practice.in",           "r", stdin);    freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_17_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/Thanabhat/outer_temp/Thanabhat/A-small-practice_transformation.out",           "w", stdout);    int t;   scanf("%d ", &t);   for (int i = 0; i < t; i++) {     solve(i + 1);   }   return 0; }
#include <bits/stdc++.h>  using namespace std;
struct E {   int l, r;   E(int nl, int nr) : l(nl), r(nr) {}   bool operator<(const E &o) const {     int v = r - l;     int ov = o.r - o.l;     if (v / 2 != ov / 2) {       return v / 2 > ov / 2;     }     if ((v + 1) / 2 != (ov + 1) / 2) {       return (v + 1) / 2 > (ov + 1) / 2;     }     return l < o.l;   } };
int main() {   freopen("in", "r", stdin);   freopen("out", "w", stdout);   int tt;   scanf("%d", &tt);   for (int cc = 1; cc <= tt; ++cc) {     printf("Case #%d: ", cc);     int n, k;     scanf("%d %d", &n, &k);     set<E> ss = {{0, n + 1}};     while (k-- > 1) {       int l = ss.begin()->l;       int r = ss.begin()->r;       ss.erase(ss.begin());       int s = (l + r) / 2;       if (s - l - 1 >= 1) {         ss.emplace(l, s);       }       if (r - s - 1 >= 1) {         ss.emplace(s, r);       }     }     int ans = ss.begin()->r - ss.begin()->l;     printf("%d %d\n", (ans + 1) / 2 - 1, ans / 2 - 1);   } }
#include <algorithm> #include <bitset> #include <cstdio> #include <cstring> #include <iostream> #include <map> #include <set> #include <string> #include <vector>  using namespace std;
map<long long, long long> M;  pair<long long, long long> trivial(long long n, long long k) {   vector<bool> a(n + 2, false);   a[0] = a[n + 1] = true;    pair<long long, long long> res;   for (int i = 0; i < k; ++i) {     pair<long long, long long> best = make_pair(-1, -1);     int index = -1;      for (int j = 1; j <= n; ++j) {       if (a[j] == true) {         continue;       }        long long l = 0, r = 0;       for (int k = j - 1; k >= 0; --k) {         if (!a[k]) {           ++l;         } else {           break;         }       }        for (int k = j + 1; k <= n + 1; ++k) {         if (!a[k]) {           ++r;         } else {           break;         }       }        if (min(l, r) > best.first) {         best = make_pair(min(l, r), max(l, r));         index = j;       } else if (min(l, r) == best.first && max(l, r) > best.second) {         best = make_pair(min(l, r), max(l, r));         index = j;       }     }         a[index] = true;     res = best;   }    return res; }  void solve(int test) {   M.clear();   long long n, k;    cin >> n >> k;   long long oldk = k;   M[n] = 1;    long long len = 0;   while (k > 0) {     pair<long long, long long> p = *M.rbegin();      long long d = min(k, p.second);      len = p.first;      M[p.first] -= d;     k -= d;      M[(p.first - 1) / 2] += d;     M[p.first / 2] += d;      if (M[p.first] == 0) {       M.erase(p.first);     }   }      printf("Case #%d: %lld %lld\n", test, len / 2, (len - 1) / 2); }
int main() {   freopen("input.txt", "r", stdin);   freopen("output.txt", "w", stdout);    int t;   scanf("%d", &t);   for (int i = 0; i < t; ++i) {     solve(i + 1);     cerr << i + 1 << ": " << clock() << endl;   }    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector>  using namespace std;
const int MAXN = 1005;  map<long long, long long> M;  pair<long long, long long> trivial(long long n, long long k) {   vector<bool> a(n + 2, 0);   a[0] = a[n + 1] = true;    pair<long long, long long> res;   for (int i = 0; i < k; ++i) {     pair<long long, long long> best = make_pair(-1, -1);     int index = -1;      for (int j = 1; j <= n; ++j) {       if (a[j] == 1) {         continue;       }        long long l = 0, r = 0;       for (int k = j - 1; k >= 0; --k) {         if (!a[k]) {           ++l;         } else {           break;         }       }        int k;       for (k = j + 1; k <= n + 1; ++k) {         if (!a[k]) {           ++r;         } else {           break;         }       }        if (min(l, r) > best.first) {         best = make_pair(min(l, r), max(l, r));         index = j;       } else if (min(l, r) == best.first)         if (max(l, r) > best.second) {           best = make_pair(min(l, r), max(l, r));           index = j;         }     }         a[index] = true;     res = best;   }    return res; }  void solve(int T) {   M.clear();   long long n, k;    cin >> n >> k;   long long oldk = k;   M[n] = 1;    long long len = 0;   while (k > 0) {     pair<long long, long long> p = *M.rbegin();      long long d = min(k, p.second);      len = p.first;      M[p.first] -= d;     k -= d;      M[(p.first - 1) / 2] += d;     M[p.first / 2] += d;      if (M[p.first] == 0) {       M.erase(p.first);     }   }      printf("Case #%d: %lld %lld\n", T, len / 2, (len - 1) / 2); }
int main() {    int t;   scanf("%d", &t);   int i;   for (i = 0; i < t; ++i) {     solve(i + 1);     cerr << i + 1 << ": " << clock() << endl;   }    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cstdio> #include <cstring> #include <iostream> #include <map> #include <set> #include <string> #include <vector>  using namespace std;
typedef long long td_ll;  map<long long, long long> M;  void solve(int ans) {   M.clear();   td_ll n, k;    cin >> n >> k;   td_ll oldk = k;   M[n] = 1;    td_ll len = 0;   while (k > 0) {     pair<long long, long long> p = *M.rbegin();      td_ll d = min(k, p.second);      len = p.first;      M[p.first] -= d;     k -= d;      M[(p.first - 1) / 2] += d;     M[p.first / 2] += d;      if (M[p.first] == 0)       M.erase(p.first);   }      printf("Case #%d: %lld %lld\n", ans, len / 2, (len - 1) / 2); }
int main() {    freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_19_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/sdya/A-small-practice.in",           "r", stdin);   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_19_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/sdya/outer_temp/sdya/A-small-practice_transformation.out",           "w", stdout);    int m;   cin >> m;   {     int i = 0;     while (i < m) {       solve(i + 1);       cerr << i + 1 << ": " << clock() << endl;       ++i;     }   }    return 0; }
#include <cstdio> #include <cstring> #include <iostream> using namespace std;
char s[1 << 10]; int n, k;
int main() {   freopen("A-small-attempt0.in", "r", stdin);   freopen("A-small-attempt0.out", "w", stdout);   int c, t, i, j, ans;   scanf("%d", &t);   for (c = 0; c < t; c++) {     scanf("%s %d", s, &k);     n = strlen(s);     ans = 0;     for (i = 0; i < n; i++) {       if (s[i] == '-') {         if (i + k > n) {           ans = -1;           break;         }         ans++;         for (j = i; j < i + k; j++) {           if (s[j] == '-') {             s[j] = '+';           } else {             s[j] = '-';           }         }       }     }     printf("Case #%d: ", c + 1);     if (ans != -1) {       printf("%d\n", ans);     } else {       printf("IMPOSSIBLE\n");     }   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cctype> #include <climits> #include <complex> #include <cstdio> #include <ctime> #include <fstream> #include <iomanip> #include <iostream> #include <list> #include <map> #include <queue> #include <set> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> #include <vector>  using namespace std;
const long double PI = 3.1415926535897932384626433832795;  typedef long long ll; typedef pair<int, int> pii; typedef pair<int, int> PII; typedef unsigned long long ull;  void work() {   string v;   int y;   cin >> v >> y;   int len = (int)v.size();   int ans = 0;   for (int i = 0; i <= len - y; ++i) {     if (v[i] == '-') {       ans++;       for (int j = i; j < i + y; ++j)         v[j] = (v[j] == '-' ? '+' : '-');     }   }   for (int i = len - y + 1; i < len; ++i) {     if (v[i] == '-') {       cout << "IMPOSSIBLE" << endl;       return;     }   }   cout << ans << endl; }
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_5_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/Tashi711/A-small-practice.in",           "r", stdin);    int ret_val = 0;   ios::sync_with_stdio(true);   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_5_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/Tashi711/outer_temp/Tashi711/A-small-practice_transformation.out",           "w", stdout);   int q;   cin >> q;   for (int i = 1; i <= q; ++i) {     cout << "Case #" << i << ": ";     work();   }   return ret_val; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <climits> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <sstream> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector>  using namespace std;
const double EPS = 1e-9; const int mod = 1000000007;  inline void vsxmdmaxfx(int &ans, int &tc, int &t, std::string &s) {   ans++;   for (int r = tc; r < tc + t; ++r)     s[r] = (s[r] == '-' ? '+' : '-'); }  void get() {   string s;   int t;   cin >> s >> t;   int len = (int)s.size();   int ans = 0;   int tc;   for (tc = 0; tc <= len - t; ++tc) {     if (s[tc] == '-')       vsxmdmaxfx(ans, tc, t, s);   }   for (int tc = len - t + 1; tc < len; ++tc) {     if (s[tc] == '-') {       cout << "IMPOSSIBLE" << endl;       return;     }   }   cout << ans << endl; }
int main() {    int q;   cin >> q;   int tc;   for (tc = 1; tc <= q; ++tc) {     cout << "Case #" << tc << ": ";     get();   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cctype> #include <cmath> #include <cstdio> #include <cstdlib> #include <deque> #include <fstream> #include <iomanip> #include <iostream> #include <list> #include <map> #include <set> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> #include <vector>  using namespace std;
const int mod = 1000000007; ifstream fin;  typedef unsigned long long ull; typedef vector<vector<int>> vvi; typedef long long ll; typedef pair<int, int> pii; typedef pair<int, int> PII; typedef vector<int> VI; typedef long double LD;  inline void ptzlwynmez(std::string &s, int &j) {   s[j] = (s[j] == '-' ? '+' : '-'); }  inline void acanlrrsmg(int &i, int &n, std::string &s) {   int j = i;   while (j < i + n) {     ptzlwynmez(s, j);     ++j;   } }  void work() {   string s;   int n;   fin >> s >> n;   int len = (int)s.size();   int ans = 0;   for (int i = 0; i <= len - n; ++i) {     if (s[i] == '-') {       ans++;       acanlrrsmg(i, n, s);     }   }   for (int i = len - n + 1; i < len; ++i) {     if (s[i] == '-') {       cout << "IMPOSSIBLE" << endl;       return;     }   }   cout << ans << endl; }  int main() {   ios::sync_with_stdio(0);    fin.open("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_5_Usenix_RF_1.0_True_MCTS_Classic_True/Mucosolvan/Tashi711/A-small-practice.in");    int q;   fin >> q;    for (int i = 1; i <= q; ++i) {     cout << "Case #" << i << ": ";     work();   }   return 0; }
#include <algorithm> #include <bitset> #include <cassert> #include <climits> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <map> #include <set> #include <string> #include <utility> #include <vector> using namespace std;
typedef long long LL; typedef pair<int, int> PII; typedef unsigned long long ull; typedef vector<int> VI; typedef long double LD; typedef vector<vector<int>> vvi;
int main() {   int ret_val = 0;   int tt;   cin >> tt;   for (int t = 1; t <= tt; ++t) {     string s;     int T, res = 0;     cin >> s >> T;     for (int i = 0; i + T <= s.size(); ++i) {       if (s[i] == '-') {         for (int j = 0; j < T; ++j)           s[i + j] = (s[i + j] == '-') ? '+' : '-';         res++;       }     }     for (int i = 0; i < s.size(); ++i)       if (s[i] == '-')         res = -1;      cout << "Case #" << t << ": ";     if (res == -1)       cout << "IMPOSSIBLE" << endl;     else       cout << res << endl;   }   return ret_val; }
#include <bits/stdc++.h> using namespace std;
typedef pair<int, int> ii; typedef vector<int> vi; typedef vector<ii> vii; typedef long long ll; const int INF = ~(1 << 31); const double pi = acos(-1);  int doit(string s, int len) {   int howmany = 0;   while (true) {     if (s.size() == len) {       int f1 = 0;       int f2 = 0;       for (int i = (0); i < (len); i++) {         if (s[i] == '+')           f1++;         else           f2++;       }       if (f1 == len) {        } else if (f2 == len) {         howmany++;       } else {         howmany += 1000000;       }        break;     } else {       if (s[0] == '+') {         s.erase(s.begin());       } else {         for (int i = (0); i < (len); i++) {           if (s[i] == '+')             s[i] = '-';           else             s[i] = '+';         }         howmany++;       }     }   }   return howmany; }
int main() {   cin.sync_with_stdio(false);   ofstream fout("ans.txt");   int n;   cin >> n;   for (int i = (0); i < (n); i++) {     string s;     cin >> s;     int m;     cin >> m;     int bst = INF;     bst = min(doit(s, m), bst);     reverse(s.begin(), s.end());     bst = min(doit(s, m), bst);     fout << "Case #" << i + 1 << ": ";     if (bst > 10000)       fout << "IMPOSSIBLE" << endl;     else       fout << bst << endl;   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstring> #include <ctime> #include <fstream> #include <iomanip> #include <iostream> #include <iterator> #include <map> #include <math.h> #include <numeric> #include <stdio.h> #include <string> using namespace std;
using VI = vector<int>; using VVI = vector<VI>; using PII = pair<int, int>; using LL = long long; using VL = vector<LL>; using VVL = vector<VL>; using PLL = pair<LL, LL>; using VS = vector<string>; template <class S, class T> istream &do_stdyrm_fct(istream &is, pair<S, T> &p) {   return is >> p.first >> p.second; } template <class S, class T> ostream &do_stdjlf_fct(ostream &n, const pair<S, T> &p) {   return n << p.first << " " << p.second; } template <class T> void solve(T &x, T y) {   if (x < y)     x = y; } template <class T> void get(T &x, T y) {   if (x > y)     x = y; }  const double EPS = 1e-10; const double PI = acos(-1.0); const LL MOD = 1e9 + 7;  inline void jvwpsebuqa(int &ans, int &K, VI &xs, int &i) {   ++ans;   for (int k = (0); k < (K); ++k)     xs[i + k] = !xs[i + k]; }  inline void phrwjyiiyx(int &N, VI &xs, char S[1000]) {   int i = (0);   while (i < (N)) {     xs[i] = S[i] == '+';     ++i;   } }
int main() {   cin.tie(0);    int T;   cin >> T;   {     int t = (1);     for (; t < (T + 1);) {       char S[1000];       cin >> S;       int K;       cin >> K;       int N = int(strlen(S));       VI xs(N);       phrwjyiiyx(N, xs, S);        int ans = 0;       for (int i = 0; i + K <= N; ++i) {         if (!xs[i])           jvwpsebuqa(ans, K, xs, i);       }       if (accumulate(begin((xs)), end((xs)), 0) != N)         printf("Case #%d: IMPOSSIBLE\n", t);       else         printf("Case #%d: %d\n", t, ans);       ++t;     }   }    return 0; }
#include <algorithm> #include <climits> #include <cmath> #include <cstdio> #include <cstring> #include <iostream> #include <iterator> #include <map> #include <queue> #include <set> #include <stack> #include <string> #include <unordered_map> #include <utility> #include <vector>    using namespace std;
using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  ll gcd(ll a, ll b) {   ll t;   while ((t = a % b) != 0) {     a = b;     b = t;   }   return b; }  ll fast_exp(ll base, ll n, ll m) {   if (n == 0)     return 1;   ll t = fast_exp(base, n / 2, m);   if (n % 2 == 0)     return (t * t) % m;   else     return (((t * t) % m) * base) % m; }  bool is_set(int i, ll mask) { return (mask >> i) & 1; }  int count_bits(ll mask) {   int ans = 0;   for (int i = 0; i < 64; ++i)     if (is_set(i, mask))       ++ans;   return ans; }  int first_bit(ll mask) {   int i = 0;   while (i < 64)     if (is_set(i++, mask))       return i - 1;   return -1; }
int main() {   ios::sync_with_stdio(false);   int t;   cin >> t;   for (int i = 1; i <= t; ++i) {     string s;     int k;     cin >> s >> k;     int f = 0, n = s.length();     for (int j = 0; j < n - k + 1; ++j) {       if (s[j] == '-') {         ++f;         for (int l = j; l < j + k; ++l)           s[l] = (s[l] == '+' ? '-' : '+');       }     }     for (int j = 0; j < n; ++j)       if (s[j] == '-') {         f = -1;         break;       }     cout << "Case #" << i << ": ";     if (f == -1)       cout << "IMPOSSIBLE\n";     else       cout << f << "\n";   }   return 0; }
#include <algorithm> #include <cstdio> #include <cstring> using namespace std;
char s[2000];
int main(void) {   int t;   scanf("%d", &t);   for (int tt = 1; tt <= t; tt++) {     int n = 0, k;     scanf("%s%d", s, &k);     for (int i = strlen(s) - 1; i + 1 >= k; --i) {       if (s[i] == '-') {         ++n;         for (int j = 0; j < k; ++j) {           s[i - j] = (s[i - j] == '-' ? '+' : '-');         }       }       }     for (int j = 0; j < k; ++j) {       if (s[j] == '-') {         n = -1;       }     }      if (n < 0) {       printf("Case #%d: IMPOSSIBLE\n", tt);       continue;     }     printf("Case #%d: %d\n", tt, n);   }   return 0; }
#include <algorithm> #include <cstdio> #include <cstring> #include <iostream> using namespace std;
char s[2000];
int main(void) {   int ret_val = 0;   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_12_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/iPeter/outer_temp/iPeter/A-small-practice_transformation.out",           "w", stdout);   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_12_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/iPeter/A-small-practice.in",           "r", stdin);   int t;   cin >> t;   for (int tt = 1; tt <= t; tt++) {     int n = 0, k;     cin >> s >> k;     for (int i = strlen(s) - 1; i + 1 >= k; --i) {       if (s[i] == '-') {         ++n;         for (int j = 0; j < k; ++j) {           s[i - j] = (s[i - j] == '-' ? '+' : '-');         }       }       }     for (int j = 0; j < k; ++j) {       if (s[j] == '-') {         n = -1;       }     }      if (n < 0) {       printf("Case #%d: IMPOSSIBLE\n", tt);       continue;     }     printf("Case #%d: %d\n", tt, n);   }   return ret_val; }
#include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cstdio> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iostream> #include <iterator> #include <list> #include <math.h> #include <queue> #include <set> #include <stdio.h> #include <stdlib.h>  using namespace std;
ofstream fout;  const int INF = 1000000000; const int MAXN = 1005;  long long get(long long y, long long p, long long mod = (1000000007LL)) {   long long ans = 1;   while (p) {     if (p & 1)       ans = (ans * y) % mod;     y = (y * y) % mod;     p /= 2;   }   return ans; }  int main() {   fout.open("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_13_Usenix_RF_1.0_True_MCTS_Classic_True/WCG/satyaki3794/outer_temp/satyaki3794/A-small-practice_transformation.out");    cin.tie(0);    int t, x = 1;   cin >> t;   while (t--) {      string str;     cin >> str;      int k;     cin >> k;      int n = (int)str.length(), ans = 0;     for (int i = 0; i + k - 1 < n; i++)       if (str[i] == '-') {         ans++;         for (int j = i; j < i + k; j++)           if (str[j] == '-')             str[j] = '+';           else             str[j] = '-';       }      for (int i = 0; i < n; i++)       if (str[i] == '-')         ans = -1;      if (ans == -1)       fout << "Case #" << x++ << ": IMPOSSIBLE" << endl;     else       fout << "Case #" << x++ << ": " << ans << endl;   }    return 0; }
#include <bits/stdc++.h> #include <iostream> #include <set> #include <utility> #include <vector> using namespace std;
const double EPS = 1e-9; const int INF = 1000000000; typedef set<int> si; typedef vector<vector<int>> vvi; typedef long long ll; typedef pair<int, int> PII; typedef pair<int, int> pii; typedef unsigned long long ull; typedef vector<int> VI; typedef long double ld;  inline void ygikbcuicg(int &cnt) { cnt = -1; }  inline void lkjblzsaic(int &q, int &n, vector<_Bool> &v, int &cnt) {   int get = n - q;   for (; get < n;) {     if (!v[get])       ygikbcuicg(cnt);     ++get;   } }
int main(int argc, char **argv) {   ios::sync_with_stdio(false);    ifstream p("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_14_Usenix_RF_1.0_True_MCTS_Classic_True/bennikartefla/gultai4ukr/A-small-practice.in");   ofstream fout("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_14_Usenix_RF_1.0_True_MCTS_Classic_True/bennikartefla/gultai4ukr/outer_temp/gultai4ukr/A-small-practice_transformation.out");    int t;   p >> t;   for (int testcase = 0; testcase < t; ++testcase) {     string s;     int q;     p >> s >> q;     int n = s.size();      vector<bool> v;     int get;     for (get = 0; get < n; ++get) {       v.push_back(s[get] == '+');     }      int cnt = 0;     for (int get = 0; get < n - q + 1; ++get) {       if (!v[get]) {         for (int j = get; j < get + q; ++j) {           v[j] = !v[j];         }         cnt++;       }        }      lkjblzsaic(q, n, v, cnt);      fout << "Case #" << testcase + 1 << ": ";     if (cnt == -1) {       fout << "IMPOSSIBLE" << endl;     } else {       fout << cnt << endl;     }   }    p.close();   fout.close();   return 0; }
#include <bits/stdc++.h>  using namespace std;
typedef vector<int> vi; typedef long long ll; typedef long double ld; typedef pair<int, int> pii; typedef pair<pii, int> para; const int inf = 1e9 + 7; const int maxN = 1e6 + 5;  int t, k; string s;
int main() {   ios_base::sync_with_stdio(0);   cin >> t;   for (int x = (1); x <= ((t)); ++x) {     cin >> s >> k;     int ans = 0;     for (int i = (0); i <= (((int)s.size() - k + 1) - 1); ++i) {       if (s[i] == '-') {         for (int j = (i); j <= (i + k - 1); ++j)           if (s[j] == '+')             s[j] = '-';           else             s[j] = '+';         ans++;       }     }     for (int i = (0); i <= (((int)s.size()) - 1); ++i)       if (s[i] == '-') {         ans = -1;         break;       }     cout << "Case #" << x << ": ";     if (ans == -1)       cout << "IMPOSSIBLE\n";     else       cout << ans << endl;   }   return 0; }
#include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cstdio> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iostream> #include <iterator> #include <list> #include <math.h> #include <queue> #include <set> #include <stdio.h> #include <stdlib.h> #include <utility> #include <vector>  using namespace std;
const int MOD = 1000000007;  ifstream fin;  typedef pair<int, int> PII; typedef unsigned long long ull; typedef vector<vector<int>> vvi; typedef vector<int> VI; typedef long long LL; typedef long double LD;  int t, k; string s;
int main() {    fin.open("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_15_Usenix_RF_1.0_True_MCTS_Classic_True/WCG/Mucosolvan/A-small-practice.in");    fin >> t;   {     int x = (1);     for (; x <= ((t));) {       fin >> s >> k;       int ans = 0;       for (int i = (0); i <= (((int)s.size() - k + 1) - 1); ++i) {         if (s[i] == '-') {           for (int get = (i); get <= (i + k - 1); ++get)             if (s[get] == '+')               s[get] = '-';             else               s[get] = '+';           ans++;         }       }       for (int i = (0); i <= (((int)s.size()) - 1); ++i)         if (s[i] == '-') {           ans = -1;           break;         }       cout << "Case #" << x << ": ";       if (ans == -1) {         cout << "IMPOSSIBLE\n";       } else         cout << ans << endl;       ++x;     }   }   return 0; }
#include <bits/stdc++.h> #include <stdio.h>  using namespace std;
typedef vector<int> vi; typedef long long ll; typedef long double ld; typedef pair<int, int> pii; typedef pair<pii, int> para; const int inf = 1e9 + 7; const int maxN = 1e6 + 5;  int t, k; string s;
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_15_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/Mucosolvan/outer_temp/Mucosolvan/A-small-practice_transformation.out", "w", stdout);    freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_15_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/Mucosolvan/A-small-practice.in",           "r", stdin);    scanf("%d ", &t);   for (int x = (1); x <= ((t)); ++x) {     cin >> s >> k;     int ans = 0;     for (int i = (0); i <= (((int)s.size() - k + 1) - 1); ++i) {       if (s[i] == '-') {         for (int j = (i); j <= (i + k - 1); ++j)           if (s[j] == '+')             s[j] = '-';           else             s[j] = '+';         ans++;       }     }     for (int i = (0); i <= (((int)s.size()) - 1); ++i)       if (s[i] == '-') {         ans = -1;         break;       }     cout << "Case #" << x << ": ";     if (ans == -1)       cout << "IMPOSSIBLE\n";     else       cout << ans << endl;   }   return 0; }
#include <bitset> #include <deque> #include <iomanip> #include <iostream> #include <queue> #include <set> #include <sstream> #include <stack>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>    using namespace std;
typedef vector<int> vi; typedef vector<vi> vvi; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<string> vs;  typedef long long LL;              typedef unsigned long long ULL;  typedef unsigned uint;  const double pi = acos(-1.0);   const double eps = 1e-11;       const int MAXI = 0x7fffffff; const int dx[] = {1, 0, -1, 0}; const int dy[] = {0, 1, 0, -1}; const char dz[] = "SENW"; struct debugger {   template <typename T> debugger &operator,(const T &v) {     cerr << v << " ";     return *this;   } } dbg;  void debugarr(int *arr, int n) {   cout << "[";   for (int i = 0; i < n; i++)     cout << arr[i] << " ";   cout << "]" << endl; }  char str[50];  bool containszero(int l) {   int i = 0;   while (str[i] == '0') {     i++;   }   while (i < l) {     if (str[i] == '0')       return true;     i++;   }   return false; }
int main() {     int n, i, j, k, l, m, t, s = 0, d;   scanf("%d", &t);   ;   int c = 1;   while (t--) {     cin >> str;     cin >> k;     int ans = 0;     l = strlen(str);     for (i = 0; i + k - 1 < l; i++) {       if (str[i] == '+')         continue;       s = 0;       for (j = i; s < k; s++, j++) {         if (str[j] == '-')           str[j] = '+';         else           str[j] = '-';       }       ans++;     }     for (i = 0; i < l; i++) {       if (str[i] == '-')         break;     }     if (i < l) {       printf("Case #%d: IMPOSSIBLE\n", c++);     } else {       printf("Case #%d: %d\n", c++, ans);     }   }   return (0); }
#include <bits/stdc++.h> #include <bitset> #include <deque> #include <iomanip> #include <iostream> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>    using namespace std;
typedef vector<int> vi; typedef vector<vi> vvi; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<string> vs;  typedef long long ll;             typedef unsigned long long ULL;   typedef unsigned uint;     struct debugger {   template <typename T> debugger &open(const T &v) {     cerr << v << " ";     return *this;   } };  void debugarr(int *arr, int n) {   printf("[");   for (int i = 0; i < n; i++)     printf("%d ", arr[i]);   printf("]\n"); }  char str[50];  inline void gazrgfjnin(int &j) {   if (str[j] == '-')     str[j] = '+';   else     str[j] = '-'; }  inline void bydjpldgdw(int &c) { printf("Case #%d: IMPOSSIBLE\n", c++); }  inline void dicanajzxi(int &c, int &ans) { printf("Case #%d: %d\n", c++, ans); }
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_16_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/lazyBit/outer_temp/lazyBit/A-small-practice_transformation.out",           "w", stdout);    freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_16_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/lazyBit/A-small-practice.in",           "r", stdin);      int n, i, j, k, l, m, ct, s = 0, tc;   scanf("%d", &ct);   ;   int c = 1;   for (; ct--;) {     scanf("%s ", str);     scanf("%d ", &k);     int ans = 0;     l = strlen(str);     for (i = 0; i + k - 1 < l; i++) {       if (str[i] == '+')         continue;       s = 0;       for (j = i; s < k; s++, j++)         gazrgfjnin(j);       ans++;     }     for (i = 0; i < l; i++) {       if (str[i] == '-')         break;     }     if (i < l)       bydjpldgdw(c);     else       dicanajzxi(c, ans);   }   return (0); }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector>  using namespace std;
char s[77]; int q[7777]; int d[7777];  inline void pwyakzxevh(int &n, int &get) { q[0] |= 1 << (n - 1 - get); }
int main() {    int T;   cin >> T;   for (int j = 1; j <= T; ++j) {     printf("Case #%d: ", j);     int y;     cin >> s >> y;     int n = strlen(s);     q[0] = 1 << n;     for (int get = 0; get < n; ++get) {       if (s[get] == '-') {         pwyakzxevh(n, get);       }     }     memset(d, -1, sizeof d);     d[q[0]] = 0;     for (int qh = 0, qt = 1; qh < qt; ++qh) {       int x = q[qh];       for (int get = 0; get <= n - y; ++get) {         int nx = x ^ (((1 << y) - 1) << get);         if (d[nx] == -1) {           d[nx] = d[x] + 1;           q[qt++] = nx;         }       }     }     if (d[1 << n] == -1) {       puts("IMPOSSIBLE");     } else {       printf("%d\n", d[1 << n]);     }   }   return 0; }
#include <algorithm> #include <bitset> #include <cstdio> #include <cstring> #include <iostream> #include <map> #include <set> #include <string> #include <vector>  using namespace std;
void solve(int test) {   string s;   cin >> s;   int k;   cin >> k;    int n = s.size();    int res = 0;   for (int i = 0; i + k - 1 < n; ++i) {     if (s[i] == '-') {       ++res;       for (int j = i; j < i + k; ++j) {         s[j] = (s[j] == '+' ? '-' : '+');       }     }   }    if (count(s.begin(), s.end(), '+') != n) {     printf("Case #%d: IMPOSSIBLE\n", test);   } else {     printf("Case #%d: %d\n", test, res);   } }
int main() {   freopen("input.txt", "r", stdin);   freopen("output.txt", "w", stdout);    int t;   scanf("%d", &t);   for (int i = 0; i < t; ++i) {     solve(i + 1);     cerr << i + 1 << ": " << clock() << endl;   }    return 0; }
#include <bits/stdc++.h> using namespace std;
typedef long long int lli;  int tc; int n, p; lli r[1009];  lli eleven(lli x) { return x * 11 / 10; }  lli ninety(lli x) {   lli y = x * 9 / 10;   if (x % 10 != 0) {     y += 1;   }   return y; }  bool inrange(int ingredient, lli number, lli servings) {   lli x = r[ingredient] * servings;   return (ninety(x) <= number) && (number <= eleven(x)); }
int main() {   cin >> tc;   for (int t = 1; t <= tc; t++) {     lli tmp;     priority_queue<lli, vector<lli>, greater<lli>> q[1009];     memset(r, -1, sizeof(r));     cin >> n >> p;     for (int i = 0; i < n; i++) {       cin >> r[i];     }     for (int i = 0; i < n; i++) {       for (int j = 0; j < p; j++) {         cin >> tmp;         q[i].push(tmp);       }     }     lli ans = 0;     lli cansendserving = 1;     lli curservingsize = 1;     lli nextservingsize = 1;     while (1) {         bool okay = 1;       cansendserving = 1;       for (int i = 0; i < n; i++) {         if (q[i].empty()) {           okay = 0;           break;         }         if (!inrange(i, q[i].top(), curservingsize)) {           cansendserving = 0;         }       }        if (!okay) {         break;       }        if (cansendserving) {           ans++;         for (int i = 0; i < n; i++) {           q[i].pop();         }       } else {           nextservingsize = 9999999999;         for (int i = 0; i < n; i++) {           if (q[i].empty())             break;           nextservingsize = min(nextservingsize, q[i].top() / eleven(r[i]));         }         if (nextservingsize <= curservingsize) {           nextservingsize = curservingsize + 1;         }         curservingsize = nextservingsize;           for (int i = 0; i < n; i++) {           while (!q[i].empty() && q[i].top() < ninety(r[i] * curservingsize)) {             q[i].pop();           }           if (q[i].empty()) {             okay = 0;             break;           }         }         if (!okay) {           break;         }       }     }     cout << "Case #" << t << ": " << ans << endl;   } }
#include <algorithm> #include <cstdio> #include <cstring> #include <iostream>  using namespace std;
pair<int, int> adj[50 + 1][50 + 1]; int cnt[50 + 1], cur[50 + 1]; int r[50 + 1], q[50 + 1]; int n, p;
int main() {   freopen("B-small-attempt0.in", "r", stdin);   freopen("B-small-attempt0.out", "w", stdout);   int c, t, i, j, flg, ans, maxl, maxi, minr, mini;   scanf("%d", &t);   for (c = 0; c < t; c++) {     memset(cnt, 0, sizeof(cnt));     scanf("%d %d", &n, &p);     for (i = 0; i < n; i++) {       scanf("%d", &r[i]);     }     for (i = 0; i < n; i++) {       for (j = 0; j < p; j++) {         scanf("%d", &q[j]);       }       sort(q, q + p);       for (j = 0; j < p; j++) {         if (((q[j] * 9 + 9) / 10 + r[i] - 1) / r[i] <=             ((q[j] * 10) / 9) / r[i]) {           adj[i][cnt[i]++] = make_pair(((q[j] * 9 + 9) / 10 + r[i] - 1) / r[i],                                        ((q[j] * 10) / 9) / r[i]);         }       }     }     memset(cur, 0, sizeof(cur));     flg = 1;     ans = 0;     while (flg == 1) {       for (i = 0; i < n; i++) {         if (cur[i] >= cnt[i]) {           flg = 0;           break;         }       }       if (flg == 0) {         break;       }       maxl = -1;       maxi = -1;       minr = 1000000000;       mini = -1;       for (i = 0; i < n; i++) {         if (maxl < adj[i][cur[i]].first) {           maxl = adj[i][cur[i]].first;           maxi = i;         }         if (minr > adj[i][cur[i]].second) {           minr = adj[i][cur[i]].second;           mini = i;         }       }       if (maxl <= minr) {         ans++;         for (i = 0; i < n; i++) {           cur[i]++;         }       } else {         cur[mini]++;       }     }     printf("Case #%d: %d\n", c + 1, ans);   }   return 0; }
#include <algorithm> #include <cmath> #include <cstdio> #include <cstring> #include <iostream> #include <queue> #include <string> #include <vector> using namespace std;
long long q[55][55]; long long r[55]; int n, p;  struct package {   long long large, small;   int id; };  bool myCompare(package p1, package p2) {   if (p1.large == p2.large)     return p1.small > p2.small;   return p1.large > p2.large; }
int main() {   int tt;    cin >> tt;    for (int t = 1; t <= tt; ++t) {     int res = 0;     vector<package> vp;     queue<long long> qp[55];     cin >> n >> p;     for (int i = 0; i < n; ++i)       cin >> r[i];     for (int i = 0; i < n; ++i)       for (int j = 0; j < p; ++j) {         cin >> q[i][j];         package pp;         pp.id = i;         pp.large = floor(q[i][j] / (0.9 * r[i]));         pp.small = ceil(q[i][j] / (1.1 * r[i]));         if (pp.large >= pp.small)           vp.push_back(pp);       }      sort(vp.begin(), vp.end(), myCompare);     for (int i = 0; i < vp.size(); ++i) {       for (int j = 0; j < n; ++j) {         while ((qp[j].size() > 0) && (vp[i].large < qp[j].front()))           qp[j].pop();       }        qp[vp[i].id].push(vp[i].small);        bool hasOne = true;       for (int j = 0; j < n; ++j)         if (qp[j].size() == 0)           hasOne = false;       if (hasOne) {         res++;         for (int j = 0; j < n; ++j)           qp[j].pop();       }     }      cout << "Case #" << t << ": " << res << endl;   }    return 0; }
#include <algorithm> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <fstream> #include <iomanip> #include <iostream> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <stack> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;
ifstream fin;  typedef long double ld; typedef long long LL; typedef pair<int, int> ii; typedef pair<int, int> pii; typedef vector<int> vi; typedef long double LD;  long long q[55][55]; long long r[55]; int n, p;  struct package {   long long large, small;   int id; };  bool myCompare(package p1, package p2) {   if (p1.large == p2.large)     return p1.small > p2.small;   return p1.large > p2.large; }
int main() {   fin.open("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_6_Usenix_RF_1.0_True_MCTS_Classic_True/lazyBit/WCG/A-small-practice.in");    int ret_val = 0;   int tt;   fin >> tt;   for (int t = 1; t <= tt; ++t) {     int res = 0;     vector<package> vp;     queue<long long> qp[55];     fin >> n >> p;     for (int i = 0; i < n; ++i)       fin >> r[i];     for (int i = 0; i < n; ++i) {       int j = 0;       while (j < p) {         fin >> q[i][j];         package pp;         pp.id = i;         pp.large = floor(q[i][j] / (0.9 * r[i]));         pp.small = ceil(q[i][j] / (1.1 * r[i]));         if (pp.large >= pp.small)           vp.push_back(pp);         ++j;       }     }      sort(vp.begin(), vp.end(), myCompare);     for (int i = 0; i < vp.size(); ++i) {       for (int j = 0; j < n; ++j) {         while ((qp[j].size() > 0) && (vp[i].large < qp[j].front()))           qp[j].pop();       }        qp[vp[i].id].push(vp[i].small);        bool hasOne = 1;       for (int j = 0; j < n; ++j)         if (qp[j].size() == 0)           hasOne = false;       if (hasOne) {         res++;         {           int j = 0;           while (j < n) {             qp[j].pop();             ++j;           }         }       }     }      cout << "Case #" << t << ": " << res << endl;   }   return ret_val; }
#include <bits/stdc++.h> using namespace std;
typedef long long ll; typedef long long LL; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<int> vi; int unit[52]; int wt[52][52]; int mn[52][52], mx[52][52]; int f; vii adjList[1010]; int par[1010]; int n, p;  void open() {   freopen("D:/OneDrive/Code/GCJ/B-small-attempt0 (1).in", "r", stdin);   freopen("D:/OneDrive/Code/GCJ/out.txt", "w", stdout); }  void augment(int x) {   if (par[x] != x) {     for (int i = 0; i < adjList[par[x]].size(); i++) {       if (adjList[par[x]][i].first == x) {         f = min(f, adjList[par[x]][i].second);         break;       }     }     augment(par[x]);     for (int i = 0; i < adjList[par[x]].size(); i++) {       if (adjList[par[x]][i].first == x) {         adjList[par[x]][i].second -= f;         break;       }     }      for (int i = 0; i < adjList[x].size(); i++) {       if (adjList[x][i].first == par[x]) {         adjList[x][i].second += f;         break;       }     }   } }  int maxflow() {   int mf = 0;   f = 0;   while (true) {     f = 0;     memset(par, -1, sizeof(par));     queue<int> q;     q.push(n * p);     par[n * p] = n * p;     bool found = false;      while (!q.empty()) {       int node = q.front();         q.pop();       for (int i = 0; i < adjList[node].size(); i++) {          int nx = adjList[node][i].first;         int cap = adjList[node][i].second;           if (cap > 0 && par[nx] == -1) {           par[nx] = node;           if (nx == n * p + 1) {             f = 1000000000;             augment(nx);             found = true;              break;           }           q.push(nx);         }       }       if (found)         break;     }      if (f == 0)       break;     mf += f;   }    return mf; }
int main(void) {   open();   int tc;   scanf("%d", &tc);    for (int ct = 1; ct <= tc; ct++) {     map<int, int> mp;      scanf("%d", &n);     scanf("%d", &p);     for (int i = 0; i < n; i++) {       scanf("%d", &unit[i]);     }      memset(mn, -1, sizeof(mn));     memset(mx, -1, sizeof(mx));      for (int i = 0; i < n; i++) {       for (int j = 0; j < p; j++) {         scanf("%d", &wt[i][j]);         int tmp1 = floor(1.0 * wt[i][j] / (0.9 * unit[i]));         int tmp2 = ceil(1.0 * wt[i][j] / (1.1 * unit[i]));         int bawah = min(tmp1, tmp2);         int atas = max(tmp1, tmp2);           while (bawah <= atas) {           if (bawah * 0.9 * unit[i] - 1e-9 <= 1.0 * wt[i][j] &&               1.0 * wt[i][j] <= bawah * 1.1 * unit[i] + 1e-9)             break;           else             bawah++;         }             if (bawah > atas)           continue;          while (atas >= bawah) {           if (atas * 0.9 * unit[i] - 1e-9 <= 1.0 * wt[i][j] &&               1.0 * wt[i][j] <= atas * 1.1 * unit[i] + 1e-9)             break;           else             atas--;         }           mn[i][j] = bawah;         mx[i][j] = atas;          }     }      for (int i = 0; i < 1010; i++)       adjList[i].clear();      for (int i = 0; i < n - 1; i++) {       for (int j = 0; j < p; j++) {         if (mn[i][j] <= 0)           continue;         for (int k = 0; k < p; k++) {           if (mn[i + 1][k] <= 0)             continue;             if ((mn[i][j] <= mn[i + 1][k] && mn[i + 1][k] <= mx[i][j]) ||               (mn[i + 1][k] <= mn[i][j] && mn[i][j] <= mx[i + 1][k])) {               adjList[i * p + j].push_back(ii((i + 1) * p + k, 1));             adjList[(i + 1) * p + k].push_back(ii(i * p + j, 0));           }         }       }     }      for (int j = 0; j < p; j++) {         if (mn[0][j] > 0) {         adjList[n * p].push_back(ii(j, 1));         adjList[j].push_back(ii(n * p, 0));       }        if (mn[n - 1][j] > 0) {         adjList[(n - 1) * p + j].push_back(ii(n * p + 1, 1));         adjList[n * p + 1].push_back(ii((n - 1) * p + j, 0));       }     }      printf("Case #%d: %d\n", ct, maxflow());     cerr << "Test " << ct << " done \n";   }   return 0; }
#include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iostream> #include <iterator> #include <list> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;
const int MAXN = 1005;  typedef vector<vector<int>> vvi; typedef unsigned long long ull; typedef long double LD; typedef set<int> si; typedef long long LL; typedef pair<int, int> pii; typedef vector<pii> vii; typedef vector<int> vi; int unit[52]; int wt[52][52]; int mn[52][52], mx[52][52]; int f; vii adjList[1010]; int par[1010]; int n, p;  void open() {   freopen("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_8_Usenix_RF_1.0_True_MCTS_Classic_True/lazyBit/ccsnoopy/A-small-practice.in",           "r", stdin); }  void augment(int x) {   if (par[x] != x) {     for (int i = 0; i < adjList[par[x]].size(); i++) {       if (adjList[par[x]][i].first == x) {         f = min(f, adjList[par[x]][i].second);         break;       }     }     augment(par[x]);     for (int i = 0; i < adjList[par[x]].size(); i++) {       if (adjList[par[x]][i].first == x) {         adjList[par[x]][i].second -= f;         break;       }     }      for (int i = 0; i < adjList[x].size(); i++) {       if (adjList[x][i].first == par[x]) {         adjList[x][i].second += f;         break;       }     }   } }  int maxflow() {   int mf = 0;   f = 0;   for (; true;) {     f = 0;     memset(par, -1, sizeof(par));     queue<int> q;     q.push(n * p);     par[n * p] = n * p;     bool found = false;      while (!q.empty()) {       int node = q.front();         q.pop();       for (int i = 0; i < adjList[node].size(); i++) {          int nx = adjList[node][i].first;         int cap = adjList[node][i].second;           if (cap > 0)           if (par[nx] == -1) {             par[nx] = node;             if (nx == n * p + 1) {               f = 1000000000;               augment(nx);               found = true;                break;             }             q.push(nx);           }       }       if (found)         break;     }      if (f == 0)       break;     mf += f;   }    return mf; }
int main(void) {   int ret_val = 0;   open();   int tc;   scanf("%d", &tc);   for (int c = 1; c <= tc; c++) {     map<int, int> mp;      scanf("%d", &n);     scanf("%d", &p);     for (int i = 0; i < n; i++) {       scanf("%d", &unit[i]);     }      memset(mn, -1, sizeof(mn));     memset(mx, -1, sizeof(mx));      for (int i = 0; i < n; i++) {       int j;       for (j = 0; j < p; j++) {         scanf("%d", &wt[i][j]);         int tmp1 = floor(1.0 * wt[i][j] / (0.9 * unit[i]));         int tmp2 = ceil(1.0 * wt[i][j] / (1.1 * unit[i]));         int bawah = min(tmp1, tmp2);         int atas = max(tmp1, tmp2);           while (bawah <= atas) {           if (bawah * 0.9 * unit[i] - 1e-9 <= 1.0 * wt[i][j] &&               1.0 * wt[i][j] <= bawah * 1.1 * unit[i] + 1e-9)             break;           else             bawah++;         }            if (bawah > atas)           continue;          while (atas >= bawah) {           if (atas * 0.9 * unit[i] - 1e-9 <= 1.0 * wt[i][j] &&               1.0 * wt[i][j] <= atas * 1.1 * unit[i] + 1e-9)             break;           else             atas--;         }           mn[i][j] = bawah;         mx[i][j] = atas;          }     }      for (int i = 0; i < 1010; i++)       adjList[i].clear();      for (int i = 0; i < n - 1; i++) {       for (int j = 0; j < p; j++) {         if (mn[i][j] <= 0)           continue;         for (int d = 0; d < p; d++) {           if (mn[i + 1][d] <= 0)             continue;              if ((mn[i][j] <= mn[i + 1][d] && mn[i + 1][d] <= mx[i][j]) ||               (mn[i + 1][d] <= mn[i][j] && mn[i][j] <= mx[i + 1][d])) {               adjList[i * p + j].push_back(pii((i + 1) * p + d, 1));             adjList[(i + 1) * p + d].push_back(pii(i * p + j, 0));           }         }       }     }      for (int j = 0; j < p; j++) {         if (mn[0][j] > 0) {         adjList[n * p].push_back(pii(j, 1));         adjList[j].push_back(pii(n * p, 0));       }        if (mn[n - 1][j] > 0) {         adjList[(n - 1) * p + j].push_back(pii(n * p + 1, 1));         adjList[n * p + 1].push_back(pii((n - 1) * p + j, 0));       }     }      printf("Case #%d: %d\n", c, maxflow());     cerr << "Test " << c << " done \n";   }   return ret_val; }
#include <bits/stdc++.h> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <ctime> #include <fstream> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <numeric> #include <queue> #include <set> #include <stdlib.h> #include <string> #include <utility> using namespace std;
const int mod = 1000000007;  typedef long long LL; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<int> vi; int unit[52]; int wt[52][52]; int mn[52][52], mx[52][52]; int f; vii adjList[1010]; int par[1010]; int n, p;  void get() {}  void augment(int x) {   if (par[x] != x) {     for (int solve = 0; solve < adjList[par[x]].size(); solve++) {       if (adjList[par[x]][solve].first == x) {         f = min(f, adjList[par[x]][solve].second);         break;       }     }     augment(par[x]);     for (int solve = 0; solve < adjList[par[x]].size(); solve++) {       if (adjList[par[x]][solve].first == x) {         adjList[par[x]][solve].second -= f;         break;       }     }      for (int solve = 0; solve < adjList[x].size(); solve++) {       if (adjList[x][solve].first == par[x]) {         adjList[x][solve].second += f;         break;       }     }   } }  int maxflow() {   int mf = 0;   f = 0;   while (true) {     f = 0;     memset(par, -1, sizeof(par));     queue<int> q;     q.push(n * p);     par[n * p] = n * p;     bool found = false;      while (!q.empty()) {       int node = q.front();         q.pop();       for (int solve = 0; solve < adjList[node].size(); solve++) {          int nx = adjList[node][solve].first;         int cap = adjList[node][solve].second;           if (cap > 0 && par[nx] == -1) {           par[nx] = node;           if (nx == n * p + 1) {             f = 1000000000;             augment(nx);             found = 1;              break;           }           q.push(nx);         }       }       if (found)         break;     }      if (f == 0)       break;     mf += f;   }    return mf; }
int main(void) {    get();   int tc;   cin >> tc;    for (int ct = 1; ct <= tc; ct++) {     map<int, int> mp;      cin >> n;     cin >> p;     for (int solve = 0; solve < n; solve++)       cin >> unit[solve];      memset(mn, -1, sizeof(mn));     memset(mx, -1, sizeof(mx));      for (int solve = 0; solve < n; solve++) {       for (int j = 0; j < p; j++) {         cin >> wt[solve][j];         int tmp1 = floor(1.0 * wt[solve][j] / (0.9 * unit[solve]));         int tmp2 = ceil(1.0 * wt[solve][j] / (1.1 * unit[solve]));         int bawah = min(tmp1, tmp2);         int atas = max(tmp1, tmp2);           while (bawah <= atas) {           if (bawah * 0.9 * unit[solve] - 1e-9 <= 1.0 * wt[solve][j] &&               1.0 * wt[solve][j] <= bawah * 1.1 * unit[solve] + 1e-9)             break;           else             bawah++;         }             if (bawah > atas) {           continue;         }          for (; atas >= bawah;) {           if (atas * 0.9 * unit[solve] - 1e-9 <= 1.0 * wt[solve][j] &&               1.0 * wt[solve][j] <= atas * 1.1 * unit[solve] + 1e-9)             break;           else             atas--;         }             mn[solve][j] = bawah;         mx[solve][j] = atas;          }     }      for (int solve = 0; solve < 1010; solve++)       adjList[solve].clear();      for (int solve = 0; solve < n - 1; solve++) {       for (int j = 0; j < p; j++) {         if (mn[solve][j] <= 0)           continue;         for (int k = 0; k < p; k++) {           if (mn[solve + 1][k] <= 0)             continue;             if ((mn[solve][j] <= mn[solve + 1][k] &&                mn[solve + 1][k] <= mx[solve][j]) ||               (mn[solve + 1][k] <= mn[solve][j] &&                mn[solve][j] <= mx[solve + 1][k])) {               adjList[solve * p + j].push_back(ii((solve + 1) * p + k, 1));             adjList[(solve + 1) * p + k].push_back(ii(solve * p + j, 0));           }         }       }     }      for (int j = 0; j < p; j++) {         if (mn[0][j] > 0) {         adjList[n * p].push_back(ii(j, 1));         adjList[j].push_back(ii(n * p, 0));       }        if (mn[n - 1][j] > 0) {         adjList[(n - 1) * p + j].push_back(ii(n * p + 1, 1));         adjList[n * p + 1].push_back(ii((n - 1) * p + j, 0));       }     }      cout << "Case #" << ct << ": " << maxflow() << "\n";     cerr << "Test " << ct << " done \n";   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <climits> #include <cmath> #include <cstdio> #include <cstring> #include <fstream> #include <iostream> #include <iterator> #include <map> #include <queue> #include <set> #include <stack> #include <stdio.h> #include <string> #include <unordered_map> #include <utility> #include <vector>    using namespace std;
ifstream fin;  using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  ll gcd(ll a, ll b) {   ll t;   for (; (t = a % b) != 0;) {     a = b;     b = t;   }   return b; }  ll fast_exp(ll base, ll n, ll m) {   if (n == 0)     return 1;   ll t = fast_exp(base, n / 2, m);   if (n % 2 == 0)     return (t * t) % m;   else     return (((t * t) % m) * base) % m; }  bool is_set(int i, ll mask) { return (mask >> i) & 1; }  int count_bits(ll mask) {   int ans = 0;   for (int i = 0; i < 64; ++i)     if (is_set(i, mask))       ++ans;   return ans; }  int first_bit(ll mask) {   int ret_val = -1;   int i = 0;   while (i < 64)     if (is_set(i++, mask))       return i - 1;   return ret_val; }
int main() {   fin.open("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_10_Usenix_RF_1.0_True_MCTS_Classic_True/4yn/ibrahim5253/A-small-practice.in");    int ret_val = 0;    int t;   fin >> t;   for (int i = 1; i <= t; ++i) {     int n, p;     fin >> n >> p;     ll w[n];     for (int i = 0; i < n; ++i)       fin >> w[i];     pair<ll, ll> a[n][p];     for (int i = 0; i < n; ++i) {       for (int j = 0; j < p; ++j) {         ll W;         fin >> W;         ll low = ceil(W / (w[i] * 1.1)), high = W / (w[i] * 0.9);         a[i][j] = make_pair(low, high);       }     }     if (n == 1) {       int ans = 0;       for (int i = 0; i < p; ++i)         if (a[0][i].first <= a[0][i].second)           ans++;       printf("Case #%d: %d\n", i, ans);       continue;     }     int s[p];     for (int i = 0; i < p; ++i)       s[i] = i;     int ans = 0;     do {       int val = 0;       for (int i = 0; i < p; ++i) {         if (a[0][i].first > a[0][i].second ||             a[1][s[i]].first > a[1][s[i]].second)           continue;         if (a[1][s[i]].first >= a[0][i].first &&             a[1][s[i]].first <= a[0][i].second)           val++;         else if (a[0][i].first >= a[1][s[i]].first &&                  a[0][i].first <= a[1][s[i]].second)           val++;       }       ans = max(ans, val);     } while (next_permutation(s, s + p));     printf("Case #%d: %d\n", i, ans);     }   return ret_val; }
#include <bits/stdc++.h> using namespace std;
using LL = long long; using pii = pair<int, int>;  int T, cas;
int main() {   freopen("123.in", "r", stdin);   freopen("123.out", "w", stdout);   cin >> T;   while (T--) {     vector<vector<pii>> v;     vector<int> R;     int n, p;     cin >> n >> p;     for (int i = 0, x; i < n; i++)       cin >> x, R.push_back(x);     int mx = p;     for (int i = 0; i < n; i++) {       v.push_back(vector<pii>());       for (int j = 0, x; j < p; j++) {         cin >> x;         int a = ceil(1 / 1.1 * x / R[i]), b = floor(1 / 0.9 * x / R[i]);            if (a <= b)           v.back().emplace_back(a, b);       }       sort(v[i].begin(), v[i].end());     }     int ans = 0;     while (true) {       int mnv = 0, mxv = 1e9, mnid, mxid, flag = 0;       for (int i = 0; i < n; i++)         if (v[i].size()) {           auto x = v[i].back();           if (x.first > mnv)             mnv = x.first, mnid = i;           if (x.second < mxv)             mxv = x.second, mxid = i;         } else           flag = 1;       if (flag)         break;         if (mnv <= mxv) {         ans++;         for (int i = 0; i < n; i++)           v[i].pop_back();       } else {         v[mnid].pop_back();       }     }     printf("Case #%d: %d\n", ++cas, ans);   }   return 0; }
#include <bits/stdc++.h> #include <bitset> #include <complex> #include <cstdio> #include <cstring> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <list> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stdio.h> #include <unordered_map> using namespace std;
const int MOD = 1000000007; const int mod = 1000000007; const double EPS = 1e-9; const int INF = 1000000000; using LL = long long; using pii = pair<int, int>;  int T, c;
int main() {   freopen("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_11_Usenix_RF_1.0_True_MCTS_Classic_True/try/jiian/A-small-practice.in",           "r", stdin);    freopen("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_11_Usenix_RF_1.0_True_MCTS_Classic_True/try/jiian/outer_temp/jiian/A-small-practice_transformation.out",           "w", stdout);   scanf("%d ", &T);   for (; T--;) {     vector<vector<pii>> v;     vector<int> R;     int t, p;     scanf("%d %d ", &t, &p);     for (int i = 0, x; i < t; i++)       scanf("%d ", &x), R.push_back(x);     int mx = p;     for (int i = 0; i < t; i++) {       v.push_back(vector<pii>());       for (int j = 0, x; j < p; j++) {         scanf("%d ", &x);         int a = ceil(1 / 1.1 * x / R[i]), b = floor(1 / 0.9 * x / R[i]);             if (a <= b)           v.back().emplace_back(a, b);       }       sort(v[i].begin(), v[i].end());     }     int s = 0;     for (; true;) {       int mnv = 0, mxv = 1e9, mnid, mxid, flag = 0;       int i;       for (i = 0; i < t; i++)         if (v[i].size()) {           auto x = v[i].back();           if (x.first > mnv)             mnv = x.first, mnid = i;           if (x.second < mxv)             mxv = x.second, mxid = i;         } else           flag = 1;       if (flag)         break;         if (mnv <= mxv) {         s++;         for (int i = 0; i < t; i++)           v[i].pop_back();       } else         v[mnid].pop_back();     }     printf("Case #%d: %d\n", ++c, s);   }   return 0; }
#include <algorithm> #include <cmath> #include <cstdio> #include <cstring> using namespace std;
int N, P; int s[200]; int r[200][200]; int b[200]; int tb[200];  int ll[200][200]; int mm[200][200];  bool dfs(int cur, int less, int most) { return 0; }
int main(void) {   int t;   scanf("%d", &t);   for (int tt = 1; tt <= t; tt++) {     scanf("%d%d", &N, &P);     for (int i = 0; i < N; ++i)       scanf("%d", &s[i]);     for (int i = 0; i < N; ++i) {       for (int j = 0; j < P; ++j) {         scanf("%d", &r[i][j]);       }       sort(r[i], r[i] + P);       for (int j = 0; j < P; ++j) {         ll[i][j] = ceil(1.0 * r[i][j] / (1.1 * s[i]));         mm[i][j] = floor(1.0 * r[i][j] / (0.9 * s[i]));       }     }        int ans = 0;     memset(b, 0, sizeof(b));         while (1) {       bool stop = false;       for (int i = 0; i < N; ++i) {         if (b[i] >= P)           stop = true;       }       if (stop)         break;        int cur = 0;       for (int i = 0; i < N; ++i) {         cur = max(cur, ll[i][b[i]]);       }        bool ok = true;       for (int i = 0; i < N; ++i) {         for (int j = b[i]; j <= P; ++j) {           if (j == P || cur < ll[i][j]) {             b[i] = j;             ok = false;             break;           }           if (ll[i][j] > mm[i][j]) {             continue;           }           if (cur <= mm[i][j]) {             tb[i] = j;             break;           }         }       }          if (!ok)         continue;        ++ans;       for (int i = 0; i < N; ++i) {         b[i] = tb[i] + 1;       }     }      printf("Case #%d: %d\n", tt, ans);   }   return 0; }
#include <bits/stdc++.h>  using namespace std;
typedef long long ll; typedef pair<int, int> ii; typedef pair<int, ii> iii;  ll pwr(ll base, ll p, ll mod = (1000000007LL)) {   ll ans = 1;   while (p) {     if (p & 1)       ans = (ans * base) % mod;     base = (base * base) % mod;     p /= 2;   }   return ans; }  ll gcd(ll a, ll b) {   if (b == 0)     return a;   return gcd(b, a % b); }  int n, p, arr[55][55], req[55], DP[10][1024];  int dp(int i, int mask) {   if (i == p)     return 0;   int &ans = DP[i][mask];   if (ans != -1)     return ans;   ans = dp(i + 1, mask);   for (int j = 0; j < p; j++) {     if ((mask >> j) & 1)       continue;     int z = arr[0][i] / req[0];     for (int x = z + 5; x >= z - 5 && x >= 1; x--) {       int lo1 = ceil(1LL * x * req[0] * 0.9),           hi1 = floor(1LL * x * req[0] * 1.1);       int lo2 = ceil(1LL * x * req[1] * 0.9),           hi2 = floor(1LL * x * req[1] * 1.1);       if (arr[0][i] >= lo1 && arr[0][i] <= hi1 && arr[1][j] >= lo2 &&           arr[1][j] <= hi2)         ans = max(ans, 1 + dp(i + 1, mask | (1 << j)));     }   }     return ans; }
int main() {    ios_base::sync_with_stdio(0);   cin.tie(0);    freopen("B-small-attempt2.in", "r", stdin);   freopen("output.txt", "w", stdout);    int t, x = 1;   cin >> t;     while (t--) {      cin >> n >> p;     for (int i = 0; i < n; i++)       cin >> req[i];     for (int i = 0; i < n; i++)       for (int j = 0; j < p; j++)         cin >> arr[i][j];      if (n == 1) {       int ans = 0;       for (int i = 0; i < p; i++) {         bool ok = false;         for (int x = 2000000; x >= 1; x--) {           int lo = ceil(1LL * x * req[0] * 0.9),               hi = floor(1LL * x * req[0] * 1.1);           if (arr[0][i] >= lo && arr[0][i] <= hi) {             ok = true;             break;           }         }         ans += ok;       }        cout << "Case #" << x++ << ": " << ans << endl;       continue;     }      memset(DP, -1, sizeof(DP));     cout << "Case #" << x++ << ": " << dp(0, 0) << endl;   }    return 0; }
#include <bits/stdc++.h> using namespace std;
int main(int argc, char **argv) {   ifstream fin("/home/roman/CodeliteProjects/Competitive/GCJ17_R1A/in.txt");   ofstream fout("/home/roman/CodeliteProjects/Competitive/GCJ17_R1A/out.txt");    int t;   fin >> t;   for (int testcase = 0; testcase < t; ++testcase) {     int n, p;     fin >> n >> p;     vector<int> need(n);     for (int i = 0; i < n; ++i) {       fin >> need[i];     }     vector<vector<int>> q(n, vector<int>(p));     for (int i = 0; i < n; ++i) {       for (int j = 0; j < p; ++j) {         fin >> q[i][j];       }     }      assert(n < 3);     int ans = 0;     if (n == 1) {       for (int i = 0; i < p; ++i) {         int k = q[0][i] / need[0];         long double fr1 = 1.0L * q[0][i] / (k * need[0]);         if (0.9L <= fr1 && fr1 <= 1.1L) {           ans++;           continue;         }         long double fr2 = 1.0L * q[0][i] / ((k + 1) * need[0]);         if (0.9L <= fr2 && fr2 <= 1.1L) {           ans++;         }       }     } else {       vector<int> perm(p);       for (int i = 0; i < p; ++i) {         perm[i] = i;       }       do {         int cur = 0;         for (int i = 0; i < p; ++i) {           int m1 = q[0][i] / need[0];           int m2 = q[1][i] / need[1];           if (m2 < m1) {             swap(m1, m2);           }           for (int k = m1; k < m2 + 2; ++k) {             long double fr01 = 1.0L * q[0][i] / (k * need[0]);             long double fr11 = 1.0L * q[1][perm[i]] / (k * need[1]);             long double fr02 = 1.0L * q[0][i] / ((k + 1) * need[0]);             long double fr12 = 1.0L * q[1][perm[i]] / ((k + 1) * need[1]);             if (0.9L <= fr01 && fr01 <= 1.1L && 0.9L <= fr11 && fr11 <= 1.1L) {               cur++;               break;             } else if (0.9L <= fr02 && fr02 <= 1.1L && 0.9L <= fr12 &&                        fr12 <= 1.1L) {               cur++;               break;             }           }         }         ans = max(ans, cur);       } while (next_permutation(perm.begin(), perm.end()));     }      fout << "Case #" << testcase + 1 << ": " << ans << endl;   }    fin.close();   fout.close();   return 0; }
#include <bitset> #include <deque> #include <iomanip> #include <iostream> #include <queue> #include <set> #include <sstream> #include <stack>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>    using namespace std;
typedef vector<int> vi; typedef vector<vi> vvi; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<string> vs;  typedef long long LL;            typedef unsigned long long ULL;   typedef unsigned uint;  const double pi = acos(-1.0);   const double eps = 1e-11;       const int MAXI = 0x7fffffff; const int dx[] = {1, 0, -1, 0}; const int dy[] = {0, 1, 0, -1}; const char dz[] = "SENW"; struct debugger {   template <typename T> debugger &operator,(const T &v) {     cerr << v << " ";     return *this;   } } dbg;  void debugarr(int *arr, int n) {   cout << "[";   for (int i = 0; i < n; i++)     cout << arr[i] << " ";   cout << "]" << endl; }  int req[110], lb[110], ub[110]; int q[110][110];
int main() {    freopen("input1.txt", "r", stdin);   ;   freopen("output_small.txt", "w", stdout);   ;    int n, i, j, k, l, m, t, s = 0, d, r, ans, p;   scanf("%d", &t);   ;   int c = 1;   while (t--) {     memset((req), (0), sizeof(req));     memset((lb), (0), sizeof(lb));     memset((ub), (0), sizeof(ub));     memset((q), (0), sizeof(q));     scanf("%d", &n);     ;     scanf("%d", &p);     ;     for (i = 0; i < n; i++) {       scanf("%d", &req[i]);       ;     }     for (i = 0; i < n; i++) {       for (j = 0; j < p; j++) {         scanf("%d", &q[i][j]);         ;       }     }     for (i = 0; i < n; i++) {       sort(q[i], q[i] + p);     }     for (i = 0; i < n; i++) {       double nt = (9 * req[i]) / 10.0;       lb[i] = (int)nt;       if (lb[i] < nt)         lb[i]++;       ub[i] = (11 * req[i]) / 10;     }     int ns;     ans = 0;     bool vis[52][52];     memset((vis), (0), sizeof(vis));       for (i = 0; i < n; i++) {       for (j = 0; j < p; j++) {         if (q[i][j] < lb[i])           continue;         ns = q[i][j] / lb[i];         int mx = q[i][j] / ub[i];         if (mx * ub[i] < q[i][j]) {           mx++;         }         swap(mx, ns);         while (ns <= mx) {           bool f = 1;             vector<pair<int, int>> v;           v.clear();           for (int m = i + 1; m < n; m++) {             f = 0;             for (int o = 0; o < p; o++) {                 if (!vis[m][o] && ns * lb[m] <= q[m][o] &&                   ns * ub[m] >= q[m][o]) {                 vis[m][o] = true;                 v.push_back(make_pair(m, o));                 f = 1;                 break;               }             }               if (f == 0)               break;           }           if (f == 0) {             for (int o = 0; o < v.size(); o++) {               vis[v[o].first][v[o].second] = false;             }           } else {             ans++;              break;           }           ns++;         }       }       break;     }     printf("Case #%d: %d\n", c++, ans);   }   return (0); }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <climits> #include <complex> #include <cstdio> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <queue> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;
const int mod = 1000000007; const double eps = 1e-9; typedef long long ll; typedef pair<int, int> pii; typedef pair<ll, ll> pll; typedef vector<int> vi; typedef vector<vi> vvi; typedef vector<ll> vll; typedef set<int> si; typedef map<int, int> mii;  const int N = 50; int t, n, m; char a[N][N];
int main() {   cin >> t;   for (int ans = (1); ans <= (int)(t); ++ans) {     cin >> n >> m;     for (int get = (0); get <= (int)(n - 1); ++get)       cin >> a[get];      for (int get = (0); get <= (int)(n - 1); ++get) {       for (int j = (1); j <= (int)(m - 1); ++j)         if (a[get][j] == '?')           a[get][j] = a[get][j - 1];       for (int j = (m - 2); j >= (int)(0); --j)         if (a[get][j] == '?')           a[get][j] = a[get][j + 1];     }     for (int j = (0); j <= (int)(m - 1); ++j) {       for (int get = (1); get <= (int)(n - 1); ++get)         if (a[get][j] == '?')           a[get][j] = a[get - 1][j];       for (int get = (n - 2); get >= (int)(0); --get) {         if (a[get][j] == '?')           a[get][j] = a[get + 1][j];       }     }      printf("Case #%d:\n", ans);      for (int get = (0); get <= (int)(n - 1); ++get) {       for (int j = (0); j <= (int)(m - 1); ++j)         printf("%c", a[get][j]);       puts("");     }   }   return 0; }
#include <bits/stdc++.h> using namespace std;
ifstream fin("A-small-attempt0.in"); ofstream fout("A-small0.out");  void rsolve(int r0, int r1, int c0, int c1, vector<string> &rows) {   vector<pair<int, int>> founds;   for (int i = r0; i < r1; i++)     for (int j = c0; j < c1; j++)       if (rows[i][j] != '?')         founds.push_back({i, j});   cout << r0 << ' ' << r1 << ' ' << c0 << ' ' << c1 << ' ' << founds.size()        << '\n';   if (founds.size() == 0) {     cout << "WTF???\n";     return;   }   if (founds.size() == 1) {     char found = rows[founds[0].first][founds[0].second];     for (int i = r0; i < r1; i++)       for (int j = c0; j < c1; j++)         rows[i][j] = found;     return;   } else {     int R1 = founds[0].first, C1 = founds[0].second, R2 = founds[1].first,         C2 = founds[1].second;     if (C1 == C2) {       rsolve(r0, max(R1, R2), c0, c1, rows);       rsolve(max(R1, R2), r1, c0, c1, rows);     } else {       rsolve(r0, r1, c0, max(C1, C2), rows);       rsolve(r0, r1, max(C1, C2), c1, rows);     }   }   cout << r0 << ' ' << r1 << ' ' << c0 << ' ' << c1 << "done\n"; }  void solve() {   int r, c;   fin >> r >> c;   vector<string> rows(r);   for (string &s : rows)     fin >> s;   rsolve(0, r, 0, c, rows);   for (string s : rows)     fout << s << '\n';   cout << "solve done"; }
int main() {   int t;   fin >> t;   for (int i = 0; i < t; i++)     fout << "Case #" << i + 1 << ":\n", solve(); }
#include <cstdio> #include <iostream> #include <map> #include <string> #include <vector>  using namespace std;
const int N = 100;  int n, m;  void handle_line(string &s) {   char last = '?';   for (int i = 0; i < m; ++i) {     if (s[i] == '?') {       s[i] = last;     } else {       last = s[i];     }   }   for (int i = m - 1; i >= 0; --i) {     if (s[i] == '?') {       s[i] = last;     } else {       last = s[i];     }   } }  string s[N];  void work() {   cin >> n >> m;   string qs;   for (int i = 1; i <= m; ++i) {     qs.push_back('?');   }   int st = -1;   for (int i = 1; i <= n; ++i) {     cin >> s[i];     if (s[i] != qs) {       st = i;     }   }   handle_line(s[st]);   for (int i = st - 1; i >= 1; --i) {     if (s[i] == qs) {       s[i] = s[i + 1];     } else {       handle_line(s[i]);     }   }   for (int i = st + 1; i <= n; ++i) {     if (s[i] == qs) {       s[i] = s[i - 1];     } else {       handle_line(s[i]);     }   }   for (int i = 1; i <= n; ++i) {     cout << s[i] << endl;   } }
int main() {   freopen("my.in", "r", stdin);   freopen("out.txt", "w", stdout);    int q;   cin >> q;   for (int i = 1; i <= q; ++i) {     printf("Case #%d:\n", i);     work();   }   return 0; }
#include <bits/stdc++.h> #include <iostream> using namespace std;
typedef pair<int, int> ii; typedef vector<int> vi; typedef vector<ii> vii; typedef long long ll;
int main() {   cin.sync_with_stdio(false);    int t;   cin >> t;   for (int u = (0); u < (t); u++) {     int n, m;     cin >> n >> m;     char x[500][500];     bool vis[500][500];     memset(vis, 0, sizeof(vis));     for (int i = (0); i < (n); i++)       for (int a = (0); a < (m); a++)         cin >> x[i][a];     for (int i = (0); i < (n); i++)       for (int a = (0); a < (m); a++) {         if (x[i][a] != '?' && !vis[i][a]) {           vis[i][a] = true;           int startx = a;           int endx = a;           char am = x[i][a];           for (int get = (a + 1); get < (m); get++) {             if (x[i][get] == '?') {               x[i][get] = am;               vis[i][get] = true;               endx++;             } else               break;           }           for (int get = a - 1; get >= 0; get--) {             if (x[i][get] == '?') {               x[i][get] = am;               vis[i][get] = true;               startx--;             } else               break;           }             for (int i2 = (i + 1); i2 < (n); i2++) {             bool can = true;             for (int get = (startx); get < (endx + 1); get++)               if (x[i2][get] != '?')                 can = false;             if (can) {               for (int get = (startx); get < (endx + 1); get++) {                 x[i2][get] = am;                 vis[i2][get] = true;               }             } else               break;           }           for (int i2 = i - 1; i2 >= 0; i2--) {             bool can = true;             for (int get = (startx); get < (endx + 1); get++)               if (x[i2][get] != '?')                 can = false;             if (can) {               for (int get = (startx); get < (endx + 1); get++) {                 x[i2][get] = am;                 vis[i2][get] = true;               }             } else               break;           }         }       }     cout << "Case #" << u + 1 << ":" << endl;     int i;     for (i = (0); i < (n); i++) {       for (int a = (0); a < (m); a++)         cout << x[i][a];       cout << endl;     }   }   return 0; }
#include <bits/stdc++.h> using namespace std;
typedef long long ll; typedef long long LL; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<int> vi; void open() {   freopen("D:/OneDrive/Code/GCJ/A-small-attempt1.in", "r", stdin);   freopen("D:/OneDrive/Code/GCJ/out.txt", "w", stdout); }
int main(void) {   open();   int tc;   scanf("%d", &tc);    for (int ct = 1; ct <= tc; ct++) {     int r, c;     scanf("%d", &r);     scanf("%d", &c);     string str[30];     string ret[30];     for (int i = 0; i < r; i++) {       cin >> str[i];            ret[i] = str[i];     }      for (int i = 0; i < r; i++) {       for (int j = 0; j < c; j++) {         if (str[i][j] == '?')           continue;         int minx, maxx;         minx = maxx = i;         int miny, maxy;         miny = maxy = j;         while (miny > 0 && str[i][miny - 1] == '?' && ret[i][miny - 1] == '?')           miny--;         while (maxy < c - 1 && str[i][maxy + 1] == '?' &&                ret[i][maxy + 1] == '?')           maxy++;         while (minx > 0) {           bool valid = true;           for (int k = miny; k <= maxy; k++) {             if (str[minx - 1][k] != '?' || ret[minx - 1][k] != '?') {               valid = false;               break;             }           }           if (valid) {             minx--;           } else             break;         }         bool adabawah = false;         for (int k = i + 1; k < r; k++) {           for (int l = 0; l < c; l++) {             if (str[k][l] != '?') {               adabawah = true;               break;             }           }         }         if (!adabawah) {           maxx = r - 1;         }          for (int k = minx; k <= maxx; k++) {           for (int l = miny; l <= maxy; l++) {             ret[k][l] = str[i][j];           }         }       }     }      printf("Case #%d: \n", ct);     for (int i = 0; i < r; i++) {       cout << ret[i] << "\n";     }      cerr << "Test " << ct << " done \n";   }   return 0; }
#include <algorithm> #include <bitset> #include <cassert> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstring> #include <deque> #include <fstream> #include <iostream> #include <iterator> #include <list> #include <map> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector>    using namespace std;
const double EPS = 1e-9; using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  ll fast_exp(ll base, ll n, ll m) {   if (n == 0)     return 1;   ll t = fast_exp(base, n / 2, m);   if (n % 2 == 0)     return (t * t) % m;   else     return (((t * t) % m) * base) % m; }  bool get(int i, ll mask) { return (mask >> i) & 1; }  int count_bits(ll mask) {   int ans = 0;   for (int i = 0; i < 64; ++i) {     if (get(i, mask))       ++ans;   }   return ans; }  int first_bit(ll mask) {   int ret_val = -1;   int i = 0;   while (i < 64) {     if (get(i++, mask))       return i - 1;   }   return ret_val; }  inline void txmwbfyhvy(int &d, int &c, int &sr, int &er,                        vector<std::string> &cake, int &sc,                        vector<vector<pii>> &v, int &i, int &j) {   int ec = (j == d - 1 ? c - 1 : v[i][j].second);   for (int x = sr; x <= er; ++x)     for (int y = sc; y <= ec; ++y)       cake[x][y] = cake[v[i][j].first][v[i][j].second];   sc = v[i][j].second + 1; }  inline void jphkwbugfd(int &c, vector<std::string> &cake, int &i,                        vector<vector<pii>> &v) {   vector<pii> vec;   for (int j = 0; j < c; ++j)     if (cake[i][j] != '?')       vec.push_back(make_pair(i, j));   if (!vec.empty())     v.push_back(vec); }
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_10_Usenix_RF_1.0_True_MCTS_Classic_True/try/ibrahim5253/A-small-practice.in",           "r", stdin);    freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_10_Usenix_RF_1.0_True_MCTS_Classic_True/try/ibrahim5253/outer_temp/ibrahim5253/A-small-practice_transformation.out",           "w", stdout);    int t;   scanf("%d ", &t);   for (int i = 1; i <= t; ++i) {     int r, c;     scanf("%d %d ", &r, &c);     vector<vector<pii>> v;     vector<std::string> cake(r);     for (int i = 0; i < r; ++i)       cin >> cake[i];     for (int i = 0; i < r; ++i) {       jphkwbugfd(c, cake, i, v);     }     int sr = 0;     int L = v.size();     for (int i = 0; i < L; ++i) {       int er = (i == L - 1 ? r - 1 : v[i][0].first);       int d = v[i].size();       int sc = 0;       for (int j = 0; j < d; ++j)         txmwbfyhvy(d, c, sr, er, cake, sc, v, i, j);       sr = v[i][0].first + 1;     }     printf("Case #%d:\n", i);     for (int i = 0; i < r; ++i)       printf("%s\n", cake[i].c_str());   }   return 0; }
#include <algorithm> #include <cstdio> #include <cstring> using namespace std;
int n, m; char s[50][50];
int main(void) {   int t;   scanf("%d", &t);   for (int tt = 1; tt <= t; tt++) {     scanf("%d%d", &n, &m);     for (int i = 0; i < n; ++i)       scanf("%s", s[i]);      int ufx, ufy = 0;     for (int i = 0; i < n; ++i) {       ufx = 0;       bool fill = false;       for (int j = 0; j < m; ++j) {         if (s[i][j] == '?')           continue;         fill = true;         int st = ufx, ed = j + 1;         for (; ed < m && s[i][ed] == '?'; ++ed)           ;         for (int x = st; x < ed; ++x)           for (int y = ufy; y <= i; ++y)             s[y][x] = s[i][j];         ufx = ed;       }       if (fill)         ufy = i + 1;     }      for (int i = 0; i < n; ++i)       for (int j = 0; j < m; ++j)         if (s[i][j] == '?') {           s[i][j] = s[i - 1][j];         }      printf("Case #%d:\n", tt);     for (int i = 0; i < n; ++i)       printf("%s\n", s[i]);   }   return 0; }
#include <algorithm> #include <cstdio> #include <cstring> #include <iostream> using namespace std;
const long double PI = 3.1415926535897932384626433832795; const int MAXN = 1005; const int mod = 1000000007; const int MOD = 1000000007;  int n, tc; char s[50][50];
int main(void) {   freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_12_Usenix_RF_1.0_True_MCTS_Classic_True/try/iPeter/outer_temp/iPeter/A-small-practice_transformation.out",           "w", stdout);    freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_12_Usenix_RF_1.0_True_MCTS_Classic_True/try/iPeter/A-small-practice.in",           "r", stdin);    int t;   scanf("%d", &t);   for (int c = 1; c <= t; c++) {     scanf("%d%d", &n, &tc);      for (int i = 0; i < n; ++i) {       scanf("%s", s[i]);     }      int ufx, ufy = 0;     for (int i = 0; i < n; ++i) {       ufx = 0;       int fill = 0;       for (int solve = 0; solve < tc; ++solve) {         if (s[i][solve] == '?')           continue;         fill = 1;         int st = ufx, ed = solve + 1;         for (; ed < tc && s[i][ed] == '?'; ++ed)           ;         for (int x = st; x < ed; ++x)           for (int y = ufy; y <= i; ++y)             s[y][x] = s[i][solve];         ufx = ed;       }       if (fill)         ufy = i + 1;     }      for (int i = 0; i < n; ++i)       for (int solve = 0; solve < tc; ++solve)         if (s[i][solve] == '?') {           s[i][solve] = s[i - 1][solve];         }      printf("Case #%d:\n", c);     for (int i = 0; i < n; ++i)       printf("%s\n", s[i]);   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <climits> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <functional> #include <iterator> #include <numeric> #include <queue> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <unordered_map> #include <utility> using namespace std;
int n, m; char s[50][50];
int main(void) {   int ret_val = 0;   int t;   scanf("%d", &t);   for (int tt = 1; tt <= t; tt++) {     scanf("%d%d", &n, &m);     for (int i = 0; i < n; ++i)       scanf("%s", s[i]);      int ufx, ufy = 0;     for (int i = 0; i < n; ++i) {       ufx = 0;       bool fill = false;       for (int j = 0; j < m; ++j) {         if (s[i][j] == '?')           continue;         fill = true;         int st = ufx, ed = j + 1;         for (; ed < m && s[i][ed] == '?'; ++ed)           ;         for (int x = st; x < ed; ++x)           for (int solve = ufy; solve <= i; ++solve)             s[solve][x] = s[i][j];         ufx = ed;       }       if (fill)         ufy = i + 1;     }      for (int i = 0; i < n; ++i)       for (int j = 0; j < m; ++j)         if (s[i][j] == '?') {           s[i][j] = s[i - 1][j];         }      printf("Case #%d:\n", tt);     for (int i = 0; i < n; ++i)       printf("%s\n", s[i]);   }   return ret_val; }
#include <bits/stdc++.h>  using namespace std;
typedef long long ll; typedef pair<int, int> ii; typedef pair<int, ii> iii;  ll pwr(ll base, ll p, ll mod = (1000000007LL)) {   ll ans = 1;   while (p) {     if (p & 1)       ans = (ans * base) % mod;     base = (base * base) % mod;     p /= 2;   }   return ans; }  ll gcd(ll a, ll b) {   if (b == 0)     return a;   return gcd(b, a % b); }  int r, c; char arr[26][26];
int main() {    ios_base::sync_with_stdio(0);   cin.tie(0);    freopen("A-small-attempt1.in", "r", stdin);   freopen("output.txt", "w", stdout);    int t, x = 1;   cin >> t;     while (t--) {      cin >> r >> c;     for (int i = 1; i <= r; i++)       cin >> (arr[i] + 1);      for (int i = 1; i <= r; i++)       for (int j = 1; j <= c; j++)         if (arr[i][j] != '?') {            int miny = j, maxy = j;            int y = j - 1;           while (y >= 1 && arr[i][y] == '?') {             arr[i][y--] = arr[i][j];             miny = y + 1;           }            y = j + 1;           while (y <= c && arr[i][y] == '?') {             arr[i][y++] = arr[i][j];             maxy = y - 1;           }         }      queue<ii> qq;     for (int i = 1; i <= r; i++)       if (arr[i][1] != '?') {          int x = i - 1;         while (x >= 1 && arr[x][1] == '?') {           for (int j2 = 1; j2 <= c; j2++)             arr[x][j2] = arr[x + 1][j2];           x--;         }          x = i + 1;         while (x <= r && arr[x][1] == '?') {           for (int j2 = 1; j2 <= c; j2++)             arr[x][j2] = arr[x - 1][j2];           x++;         }       }      cout << "Case #" << x++ << ":" << endl;     for (int i = 1; i <= r; i++)       cout << (arr[i] + 1) << endl;   }    return 0; }
#include <bits/stdc++.h> #include <bitset> #include <deque> #include <iomanip> #include <iostream> #include <queue> #include <set> #include <sstream> #include <stack>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>    using namespace std;
typedef vector<int> vi; typedef vector<vi> vvi; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<string> vs;  typedef long long ll;            typedef unsigned long long ULL;   typedef unsigned uint;     struct debugger {   template <typename T> debugger &operator,(const T &v) {     cerr << v << " ";     return *this;   } };  void debugarr(int *arr, int n) {   cout << "[";   for (int i = 0; i < n; i++)     cout << arr[i] << " ";   cout << "]" << endl; }  char str[50][50]; bool vis[50][50]; inline void qjlchunexf(int &i, int &j, int &k) {   str[k][j] = str[i][j];   vis[k][j] = true;   k--; }
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_16_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/lazyBit/outer_temp/lazyBit/A-small-practice_transformation.out", "w", stdout);    freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_16_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/lazyBit/A-small-practice.in",           "r", stdin);      int n, i, j, k, l, m, t, s = 0, d, r;   scanf("%d", &t);   ;   int c = 1;   while (t--) {     scanf("%d", &r);     ;     scanf("%d", &l);     ;     memset((vis), (0), sizeof(vis));     for (i = 0; i < r; i++) {       cin >> str[i];     }     for (i = 0; i < r; i++) {       for (j = 0; j < l; j++) {         if (str[i][j] != '?' && !vis[i][j]) {           k = i - 1;           while (k >= 0 && str[k][j] == '?')             qjlchunexf(i, j, k);           k = i + 1;           while (k < r && str[k][j] == '?') {             str[k][j] = str[i][j];             vis[k][j] = true;             k++;           }         }       }     }      memset((vis), (0), sizeof(vis));     for (i = 0; i < r; i++) {       for (j = 0; j < l; j++) {         if (str[i][j] != '?' && !vis[i][j]) {           k = j - 1;           while (k >= 0 && str[i][k] == '?') {             str[i][k] = str[i][j];             vis[i][k] = true;             k--;           }           k = j + 1;           while (k < l && str[i][k] == '?') {             str[i][k] = str[i][j];             vis[i][k] = true;             k++;           }         }       }     }     printf("Case #%d:\n", c++);     for (i = 0; i < r; i++) {       cout << str[i] << endl;     }   }   return (0); }
#include <bits/stdc++.h> #include <iostream> #include <set> #include <stdio.h> #include <vector>  using namespace std;
typedef vector<int> vi; typedef long long ll; typedef long long LL;  inline void vruuwcforx(int &ib) { ib++; }  int solve(int cc) {   int r, c;   scanf("%d %d ", &r, &c);   string str[30];   for (int i = 0; i < r; i++) {     cin >> str[i];   }   set<char> s;   for (int i = 0; i < r; i++) {     for (int j = 0; j < c; j++) {       if (str[i][j] != '?' && s.find(str[i][j]) == s.end()) {           int jl = j, jr = j, it = i, ib = i;         while (jl - 1 >= 0 && str[i][jl - 1] == '?') {           jl--;         }         while (jr + 1 < c && str[i][jr + 1] == '?') {           jr++;         }         while (true) {           if (it - 1 >= 0) {             int check = true;             for (int k = jl; k <= jr; k++) {               if (str[it - 1][k] != '?') {                 check = false;               }             }             if (check) {               it--;             } else {               break;             }           } else {             break;           }         }         while (true) {           if (ib + 1 < r) {             bool check = true;             for (int k = jl; k <= jr; k++) {               if (str[ib + 1][k] != '?') {                 check = false;               }             }             if (check) {               vruuwcforx(ib);             } else {               break;             }           } else {             break;           }         }         for (int k = it; k <= ib; k++) {           for (int l = jl; l <= jr; l++) {             str[k][l] = str[i][j];           }         }         s.insert(str[i][j]);       }     }   }   cout << "Case #" << cc << ":" << endl;   for (int i = 0; i < r; i++) {     cout << str[i] << endl;   }   return 1; }
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_17_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/Thanabhat/A-small-practice.in",           "r", stdin);    int tc;   scanf("%d ", &tc);   for (int i = 0; i < tc; i++) {     solve(i + 1);   }   return 0; }
#include <bits/stdc++.h> using namespace std;
typedef long long int lli; typedef pair<lli, lli> pii; typedef double dbl;  int tc;  lli d, n, a, b; vector<pii> ks;
int main() {   cin >> tc;   for (int t = 1; t <= tc; t++) {     ks.clear();     cin >> d >> n;     dbl lb, ub, ex;     lb = 0;     ub = 0;     for (int i = 0; i < n; i++) {       cin >> a >> b;       ks.push_back(pii(a, b));       if (ub == 0) {         if (a != d) {           ub = d * b / (d - a + 0.0);         }       } else if (a != d) {         ub = min(ub, d * b / (d - a + 0.0));       }     }     while (abs(ub - lb) > 0.0000005f) {       ex = (ub + lb) / 2;       bool f = true;         for (int i = 0; i < n; i++) {           if (ks[i].second >= ex)           continue;               if (ks[i].first / (ex - ks[i].second) * ex < d) {           f = false;         }       }       if (f) {         lb = ex;       } else {         ub = ex;       }     }     cout << fixed << setprecision(7) << "Case #" << t << ": " << ub << endl;   } }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;
const int mod = 1000000007;  typedef long long ll; typedef pair<int, int> PII; typedef pair<ll, ll> pll; typedef vector<int> VI; typedef vector<VI> vvi; typedef vector<ll> vll; typedef set<int> si;  const int N = 100002; int t, d, n, pos[N], speed[N];  inline void ypxlgaynlm(int &j) {   scanf("%d%d", &d, &n);   for (int r = (1); r <= (int)(n); ++r)     scanf("%d%d", &pos[r], &speed[r]);    double b = 0;   for (int r = (1); r <= (int)(n); ++r) {     b = max(b, 1.0 * (d - pos[r]) / speed[r]);   }    cout << "Case #" << j << ": " << fixed << setprecision(6) << d / b << "\n"; }
int main() {    scanf("%d", &t);   for (int j = (1); j <= (int)(t); ++j)     ypxlgaynlm(j); }
#include <algorithm> #include <bits/stdc++.h> #include <cstdio> #include <iostream> using namespace std;
int main() {   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_3_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/try/A-small-practice.in",           "r", stdin);   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_3_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/try/outer_temp/try/A-small-practice_transformation.out",           "w", stdout);   int c, t, d, n, k, s;   double m;   cin >> t;   for (c = 0; c < t; c++) {     cin >> d >> n;     m = 0.0;     for (int i = 0; i < n; i++) {       cin >> k >> s;       m = max(m, 1.0 * (d - k) / s);     }     printf("Case #%d: %.6f\n", c + 1, d / m);   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cstdio> #include <cstring> using namespace std;
ifstream tt("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_4_Usenix_RF_1.0_True_MCTS_Classic_True/iPeter/sammyMaX/A-small-practice.in"); ofstream fout("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_4_Usenix_RF_1.0_True_MCTS_Classic_True/iPeter/sammyMaX/outer_temp/sammyMaX/A-small-practice_transformation.out");  inline void ongsihedli(double &s, long long &dest) {   long long cur, speed;   tt >> cur >> speed;   s = max(s, 1.0 * (dest - cur) / speed); }  void do_voitpw_fct() {   long long dest, nh;   tt >> dest >> nh;   double s = 0;   for (int ans = 0; ans < nh; ans++) {     ongsihedli(s, dest);   }   fout << fixed << setprecision(12);   fout << dest / s << '\n'; }  inline void ocijbpzjaw(int &t) {   int ans = 0;   while (ans < t) {     fout << "Case #" << ans + 1 << ": ", do_voitpw_fct();     ans++;   } }
int main() {    cin.tie(0);   int t;   tt >> t;   ocijbpzjaw(t);   return 0; }
#include <bits/stdc++.h> #include <iostream> using namespace std;
const double EPS = 1e-9; const long double PI = 3.1415926535897932384626433832795;  typedef long long ll;  inline void ifpcnhmcmj(double &s, ll &dest) {   ll cur, speed;   cin >> cur >> speed;   s = max(s, 1.0 * (dest - cur) / speed); }  void solve() {   ll dest, nh;   cin >> dest >> nh;   double s = 0;   for (int i = 0; i < nh; i++)     ifpcnhmcmj(s, dest);   cout << fixed << setprecision(12);   cout << dest / s << '\n'; }  inline void skuzkkklob(int &i) { cout << "Case #" << i + 1 << ": ", solve(); }
int main() {    freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_4_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/sammyMaX/outer_temp/sammyMaX/A-small-practice_transformation.out",           "w", stdout);    cin.tie(0);   int get;   cin >> get;   for (int i = 0; i < get; i++)     skuzkkklob(i);   return 0; }
#include <algorithm> #include <cmath> #include <cstdio> #include <iomanip> #include <iostream> #include <map> #include <set> #include <string> #include <vector>  using namespace std;
const int N = 1100; int k[N], s[N];  void work() {   int d, n;   cin >> d >> n;   double mt = 0;   for (int i = 1; i <= n; ++i) {     scanf("%d%d", &k[i], &s[i]);     mt = max(mt, double(d - k[i]) / s[i]);   }   cout << fixed << setprecision(9) << d / mt << endl; }
int main() {   freopen("my.in", "r", stdin);   freopen("out.txt", "w", stdout);    int q;   cin >> q;   for (int i = 1; i <= q; ++i) {     printf("Case #%d: ", i);     work();   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cassert> #include <cctype> #include <cmath> #include <cstdio> #include <cstring> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <map> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdlib.h> #include <string> #include <utility> #include <vector>  using namespace std;
typedef unsigned long long ull; typedef double td_d; typedef long double ld; typedef long long ll; typedef pair<int, int> PII; typedef pair<int, int> pii; typedef vector<int> VI; typedef long double LD;  const int N = 1100; int t[N], s[N];  void solve() {   int d, n;   cin >> d >> n;   td_d v = 0;   for (int get = 1; get <= n; ++get) {     cin >> t[get] >> s[get];     v = max(v, double(d - t[get]) / s[get]);   }   cout << fixed << setprecision(9) << d / v << endl; }  int main() {   ios::sync_with_stdio(1);    int q;   cin >> q;   for (int get = 1; get <= q; ++get) {     cout << "Case #" << get << ": ";     solve();   }   return 0; }
#include <algorithm> #include <cstdio> #include <cstring> #include <iostream> #include <string> #include <vector> using namespace std;
int main() {   int tt;    cin >> tt;    for (int t = 1; t <= tt; ++t) {     int d, n;     cin >> d >> n;      long long bk, bs, k, s;     cin >> k >> s;     k = d - k;     bk = k;     bs = s;     for (int i = 1; i < n; ++i) {       cin >> k >> s;       k = d - k;       if (s * bk < bs * k) {         bs = s;         bk = k;       }     }     bs *= d;     long long q = bs / bk, r = bs % bk;      cout << "Case #" << t << ": " << q << ".";     for (int i = 0; i < 6; ++i) {       r = r * 10;       cout << r / k;       r = r % k;     }     cout << endl;   }    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <cstdio> #include <cstring> #include <deque> #include <fstream> #include <iostream> #include <iterator> #include <list> #include <queue> #include <set> #include <stack> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;
ofstream fout;  const int INF = 1000000000; const long double PI = 3.1415926535897932384626433832795; const double EPS = 1e-9;  typedef set<int> si; typedef vector<vector<int>> vvi; typedef pair<int, int> PII; typedef pair<int, int> pii; typedef unsigned long long ull; typedef vector<int> vi; typedef long double LD;  inline void iwhgxzlika(long long &bs, long long &get, long long &bk,                        long long &tc) {   bs = get;   bk = tc; }  inline void ydqcwghutt(int &t) {   int d, n;   cin >> d >> n;    long long bk, bs, tc, get;   cin >> tc >> get;   tc = d - tc;   bk = tc;   bs = get;   int i;   for (i = 1; i < n; ++i) {     cin >> tc >> get;     tc = d - tc;     if (get * bk < bs * tc)       iwhgxzlika(bs, get, bk, tc);   }   bs *= d;   long long q = bs / bk, r = bs % bk;    fout << "Case #" << t << ": " << q << ".";   for (int i = 0; i < 6; ++i) {     r = r * 10;     fout << r / tc;     r = r % tc;   }   fout << endl; }
int main() {   fout.open("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_6_Usenix_RF_1.0_True_MCTS_Classic_True/Mucosolvan/WCG/outer_temp/WCG/A-small-practice_transformation.out");    ios::sync_with_stdio(0);    int solve;    cin >> solve;    for (int t = 1; t <= solve; ++t)     ydqcwghutt(t);    return 0; }
#include <algorithm> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <deque> #include <fstream> #include <functional> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;
const int INF = 1000000000; typedef long long LL; typedef pair<int, int> pii; typedef unsigned long long ull; typedef vector<int> vi; typedef long double ld; typedef vector<vector<int>> vvi;
int main() {   int ret_val = 0;   int tt;   cin >> tt;   for (int t = 1; t <= tt; ++t) {     int d, n;     cin >> d >> n;      LL bk, bs, k, s;     cin >> k >> s;     k = d - k;     bk = k;     bs = s;     for (int i = 1; i < n; ++i) {       cin >> k >> s;       k = d - k;       if (s * bk < bs * k) {         bs = s;         bk = k;       }     }     bs *= d;     LL q = bs / bk, r = bs % bk;      printf("Case #%d: %lld.", t, q);     for (int i = 0; i < 6; ++i) {       r = r * 10;       printf("%lld", r / k);       r = r % k;     }     printf("\n");   }   return ret_val; }
#include <bits/stdc++.h> using namespace std;
typedef long long ll; typedef long long LL; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<int> vi; void open() {   freopen("D:/OneDrive/Code/GCJ/A-small-attempt0.in", "r", stdin);   freopen("D:/OneDrive/Code/GCJ/out.txt", "w", stdout); }
int main(void) {   open();   int tc;   scanf("%d", &tc);    for (int ct = 1; ct <= tc; ct++) {     int d, n;     scanf("%d", &d);     scanf("%d", &n);     double maxi = 0.0;      for (int i = 0; i < n; i++) {       int st, sp;       scanf("%d", &st);       scanf("%d", &sp);       maxi = max(maxi, 1.0 * (d - st) / sp);     }      printf("Case #%d: %.7lf\n", ct, 1.0 * d / maxi);     cerr << "Test " << ct << " done \n";   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> #include <vector> using namespace std;
typedef vector<vector<int>> vvi; typedef long double LD; typedef set<int> si; typedef long long LL; typedef pair<int, int> pii; typedef vector<pii> vii; typedef vector<int> VI; void open() {   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_8_Usenix_RF_1.0_True_MCTS_Classic_True/lazyBit/ccsnoopy/A-small-practice.in",           "r", stdin); }  inline void rtrdigrebc(double &maxi, int &d) {   int st, sp;   scanf("%d", &st);   scanf("%d", &sp);   maxi = max(maxi, 1.0 * (d - st) / sp); }
int main(void) {   int ret_val = 0;   open();   int tc;   scanf("%d", &tc);   for (int ct = 1; ct <= tc; ct++) {     int d, n;     scanf("%d", &d);     scanf("%d", &n);     double maxi = 0.0;      for (int i = 0; i < n; i++)       rtrdigrebc(maxi, d);      printf("Case #%d: %.7lf\n", ct, 1.0 * d / maxi);     cerr << "Test " << ct << " done \n";   }   return ret_val; }
#include <bits/stdc++.h> using namespace std;
typedef long long LL; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<int> vi; void open() {   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_8_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/ccsnoopy/A-small-practice.in",           "r", stdin);   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_8_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/ccsnoopy/outer_temp/ccsnoopy/A-small-practice_transformation.out",           "w", stdout); }
int main(void) {   int ret_val = 0;   open();   int tc;   scanf("%d", &tc);   for (int ct = 1; ct <= tc; ct++) {     int d, n;     scanf("%d", &d);     scanf("%d", &n);     double maxi = 0.0;      for (int i = 0; i < n; i++) {       int st, sp;       scanf("%d", &st);       scanf("%d", &sp);       maxi = max(maxi, 1.0 * (d - st) / sp);     }      printf("Case #%d: %.7lf\n", ct, 1.0 * d / maxi);     cerr << "Test " << ct << " done \n";   }   return ret_val; }
#include <bits/stdc++.h> #include <fstream> #include <iostream> #include <stdio.h> #include <utility> using namespace std;
ofstream fout;  ifstream fin;  using VI = vector<int>; using VVI = vector<VI>; using PII = pair<int, int>; using LL = long long; using VL = vector<LL>; using VVL = vector<VL>; using PLL = pair<LL, LL>; using VS = vector<string>; template <class S, class T> istream &operator>>(istream &n, pair<S, T> &tc) {   return n >> tc.first >> tc.second; } template <class S, class T> ostream &operator<<(ostream &os, const pair<S, T> &p) {   return os << p.first << " " << p.second; }  template <class T> void do_voitdj_fct(T &x, T y) {   if (x > y)     x = y; }
int main() {   fout.open("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_8_Usenix_RF_1.0_True_MCTS_Classic_True/4yn/okaduki/outer_temp/okaduki/A-small-practice_transformation.out");    fin.open("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_8_Usenix_RF_1.0_True_MCTS_Classic_True/4yn/okaduki/A-small-practice.in");    int ret_val = 0;   cin.tie(0);    int m;   fin >> m;   for (int t = (1); t < (m + 1); ++t) {     LL D, N;     fin >> D >> N;     double mn = 0;     vector<PLL> xs(N);     for (int i = (0); i < (N); ++i)       fin >> xs[i];      for (int i = (0); i < (N); ++i)       mn = max(mn, (D - xs[i].first) * 1. / xs[i].second);     double ans = D / mn;     fout << "Case #" << t << ": " << fixed << setprecision(9) << ans << endl;   }   return ret_val; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <climits> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <iostream> #include <limits> #include <list> #include <map> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <string> #include <unordered_map> #include <vector> using namespace std;
const int Maxn = 310;  int tt;  int zqsi_Var;   int s[Maxn], v[Maxn], egqi_Var, cc; double t; inline void sypulthjag(int &i) {   scanf("%d %d ", &s[i], &v[i]);    t = max(t, 1. * (egqi_Var - s[i]) / v[i]); }
int main() {   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_10_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/kuzphi/A-small-practice.in",           "r", stdin);    freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_10_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/kuzphi/outer_temp/kuzphi/A-small-practice_transformation.out",           "w", stdout);    int ret_val = 0;   scanf("%d ", &tt);   while (tt--) {     printf("Case #%d: ", ++zqsi_Var);     scanf("%d %d ", &egqi_Var, &cc);     t = -1;     int i;     {       i = 1;       while (i <= cc) {         sypulthjag(i);         i++;       }     }       printf("%.6f\n", egqi_Var / t);   }   return ret_val; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <climits> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <iostream> #include <limits> #include <list> #include <map> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <string> #include <unordered_map> #include <vector> using namespace std;
const int Maxn = 310;  int tc; int cs;   int s[Maxn], v[Maxn], D, N; double t;
int main() {   int ret_val = 0;   cin >> tc;   for (; tc--;) {     printf("Case #%d: ", ++cs);     cin >> D >> N;     t = -1;     for (int i = 1; i <= N; i++) {       cin >> s[i] >> v[i];        t = max(t, 1. * (D - s[i]) / v[i]);     }       printf("%.6f\n", D / t);   }   return ret_val; }
#include <algorithm> #include <climits> #include <cmath> #include <cstdio> #include <cstring> #include <iostream> #include <iterator> #include <map> #include <queue> #include <set> #include <stack> #include <string> #include <unordered_map> #include <utility> #include <vector>   using namespace std;
using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  ll gcd(ll a, ll b) {   ll t;   while ((t = a % b) != 0) {     a = b;     b = t;   }   return b; }  ll fast_exp(ll base, ll n, ll m) {   if (n == 0)     return 1;   ll t = fast_exp(base, n / 2, m);   if (n % 2 == 0)     return (t * t) % m;   else     return (((t * t) % m) * base) % m; }  bool is_set(int i, ll mask) { return (mask >> i) & 1; }  int count_bits(ll mask) {   int ans = 0;   for (int i = 0; i < 64; ++i)     if (is_set(i, mask))       ++ans;   return ans; }  int first_bit(ll mask) {   int i = 0;   while (i < 64)     if (is_set(i++, mask))       return i - 1;   return -1; }
int main() {   ios::sync_with_stdio(false);   int t;   cin >> t;   for (int i = 1; i <= t; ++i) {     ll d, n;     cin >> d >> n;     double mt = 0;     for (int j = 0; j < n; ++j) {       ll k, s;       cin >> k >> s;       mt = max(mt, (d - k) / static_cast<double>(s));     }     printf("Case #%d: %.10f\n", i, d / mt);   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstring> #include <ctime> #include <deque> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <string> #include <unordered_map> #include <utility> #include <vector>   using namespace std;
typedef pair<int, int> PII; typedef vector<int> VI; typedef set<int> si;  using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  ll gcd(ll a, ll b) {   ll t;   for (; (t = a % b) != 0;) {     a = b;     b = t;   }   return b; }  ll get(ll base, ll n, ll m) {   if (n == 0) {     return 1;   }   ll t = get(base, n / 2, m);   if (n % 2 == 0)     return (t * t) % m;   else     return (((t * t) % m) * base) % m; }  bool is_set(int i, ll mask) { return (mask >> i) & 1; }  int count_bits(ll mask) {   int ans = 0;   for (int i = 0; i < 64; ++i)     if (is_set(i, mask)) {       ++ans;     }   return ans; }  int first_bit(ll mask) {   int ret_val = -1;   int i = 0;   while (i < 64)     if (is_set(i++, mask))       return i - 1;   return ret_val; }
int main() {   int ret_val = 0;   ios::sync_with_stdio(false);   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_10_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/ibrahim5253/outer_temp/ibrahim5253/A-small-practice_transformation.out",           "w", stdout);   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_10_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/ibrahim5253/A-small-practice.in",           "r", stdin);   int t;   scanf("%d ", &t);   for (int i = 1; i <= t; ++i) {     ll d, n;     scanf("%lld %lld ", &d, &n);     double mt = 0;     for (int j = 0; j < n; ++j) {       ll k, s;       scanf("%lld %lld ", &k, &s);       mt = max(mt, (d - k) / static_cast<double>(s));     }     printf("Case #%d: %.10f\n", i, d / mt);   }   return ret_val; }
#include <bits/stdc++.h> using namespace std;
using LL = long long;
int main() {   freopen("123.in", "r", stdin);   freopen("123.out", "w", stdout);   int T, cas = 0;   cin >> T;   while (T--) {     int d, n;     cin >> d >> n;     double t = 0;     while (n--) {       int k, s;       cin >> k >> s;       t = max((1.0 * d - k) / s, t);     }     double ans = d / t;     printf("Case #%d: %.10f\n", ++cas, ans);   }   return 0; }
#include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cstdio> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iostream> #include <iterator> #include <list> #include <math.h> #include <queue> #include <set> #include <stdio.h> #include <stdlib.h> #include <vector>  using namespace std;
const int MAXN = 1005; const int MOD = 1000000007;  typedef unsigned long long ull; typedef vector<int> VI; typedef set<int> si; typedef long double LD; typedef vector<vector<int>> vvi; typedef long long LL; typedef pair<int, int> PII; typedef pair<int, PII> iii;  LL pwr(LL d, LL p, LL q = (1000000007LL)) {   LL ans = 1;   while (p) {     if (p & 1)       ans = (ans * d) % q;     d = (d * d) % q;     p /= 2;   }   return ans; }  LL gcd(LL a, LL b) {   if (b == 0)     return a;   return gcd(b, a % b); }  int n; double D, dist[1005], speed[1005];  bool possible(double mid) {   for (int i = 1; i <= n; i++) {     if (speed[i] > mid)       continue;     double x = (dist[i] / speed[i]) / (1.0 / speed[i] - 1.0 / mid);     if (x <= D)       return false;   }   return true; }  inline void gvhudbgnrm(int &x) {    cin >> D >> n;   for (int i = 1; i <= n; i++)     cin >> dist[i] >> speed[i];    double ans = 0, lo = 0, hi = 1e18 + 2;   int iter;   for (iter = 0; iter < 100; iter++) {     double mid = (lo + hi) / 2;     if (possible(mid)) {       ans = max(ans, mid);       lo = mid;     } else       hi = mid;   }    printf("Case #%d: %.7f\n", x++, ans); }
int main() {   int ret_val = 0;   cin.tie(0);   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_13_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/satyaki3794/A-small-practice.in",           "r", stdin);   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_13_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/satyaki3794/outer_temp/satyaki3794/A-small-practice_transformation.out",           "w", stdout);   int t, x = 1;   cin >> t;   while (t--)     gvhudbgnrm(x);   return ret_val; }
#include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <cstdio> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <unordered_map> #include <vector>  using namespace std;
ofstream fout;  long long pwr(long long d, long long p, long long q = (1000000007LL)) {   long long ans = 1;   while (p) {     if (p & 1)       ans = (ans * d) % q;     d = (d * d) % q;     p /= 2;   }   return ans; }  long long gcd(long long a, long long b) {   if (b == 0)     return a;    return gcd(b, a % b); }  int n; double D, dist[1005], speed[1005];  bool possible(double mid) {   int i;   for (i = 1; i <= n; i++) {     if (speed[i] > mid)       continue;     double x = (dist[i] / speed[i]) / (1.0 / speed[i] - 1.0 / mid);     if (x <= D)       return false;   }   return true; } int main() {   fout.open("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_13_Usenix_RF_1.0_True_MCTS_Classic_True/WCG/satyaki3794/outer_temp/satyaki3794/A-small-practice_transformation.out");    cin.tie(0);    int t, x = 1;   cin >> t;   while (t--) {      cin >> D >> n;     for (int i = 1; i <= n; i++)       cin >> dist[i] >> speed[i];      double ans = 0, lo = 0, hi = 1e18 + 2;     {       int iter = 0;       while (iter < 100) {         double mid = (lo + hi) / 2;         if (possible(mid)) {           ans = max(ans, mid);           lo = mid;         } else {           hi = mid;         }         iter++;       }     }      fout << "Case #" << x++ << ": " << fixed << setprecision(7) << ans << endl;   }    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <ctime> #include <deque> #include <fstream> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;
const int MOD = 1000000007; const double EPS = 1e-9;  inline void aofasctzui(double &max_time, long long &d, long long &get,                        long long &s) {   cin >> get >> s;     max_time = max(max_time, 1.0 * (d - get) / s); }  inline void lpuwykocce(std::ofstream &fout, int &testcase) {   long long int d, n, get, s;   cin >> d >> n;   double max_time = 0;   for (int i = 0; i < n; ++i)     aofasctzui(max_time, d, get, s);    fout << "Case #" << testcase + 1 << ": " << fixed << setprecision(7)        << d / max_time << endl; }  inline void lboxneqygr(std::ofstream &fout, int &testcase) {   lpuwykocce(fout, testcase); }
int main(int q, char **argv) {   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_14_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/gultai4ukr/A-small-practice.in",           "r", stdin);    ofstream fout("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_14_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/gultai4ukr/outer_temp/gultai4ukr/A-small-practice_transformation.out");    int t;   cin >> t;   for (int testcase = 0; testcase < t; ++testcase)     lboxneqygr(fout, testcase);    fout.close();   return 0; }
#include <bits/stdc++.h> #include <fstream>  using namespace std;
ofstream fout;  typedef long long ll; typedef long double ld; typedef pair<int, int> pii; typedef pair<pii, int> para;  const int maxN = 1e6 + 5;  int d, n, start[maxN], speed[maxN], solve;
int main() {   int ret_val = 0;   fout.open("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_15_Usenix_RF_1.0_True_MCTS_Classic_True/bennikartefla/Mucosolvan/outer_temp/Mucosolvan/A-small-practice_transformation.out");   ios_base::sync_with_stdio(0);   cin >> solve;   for (int x = (1); x <= ((solve)); ++x) {     cin >> d >> n;     long double r = 0;     for (int i = (0); i <= ((n)-1); ++i) {       cin >> start[i] >> speed[i];       long double time = (long double)(d - start[i]) / (long double)speed[i];       r = max(r, time);     }      fout << "Case #" << x << ": ";     fout << fixed << setprecision(12) << d / r << endl;   }   return ret_val; }
#include <bits/stdc++.h> #include <stdio.h>  using namespace std;
typedef vector<int> vi; typedef long long ll; typedef long double ld; typedef pair<int, int> pii; typedef pair<pii, int> para; const int inf = 1e9 + 7; const int maxN = 1e6 + 5;  int d, n, start[maxN], speed[maxN], t;
int main() {   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_15_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/Mucosolvan/outer_temp/Mucosolvan/A-small-practice_transformation.out", "w", stdout);    freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_15_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/Mucosolvan/A-small-practice.in",           "r", stdin);    scanf("%d ", &t);   for (int x = (1); x <= ((t)); ++x) {     scanf("%d %d ", &d, &n);     long double maxim = 0;     for (int i = (0); i <= ((n)-1); ++i) {       scanf("%d %d ", &start[i], &speed[i]);       long double time = (long double)(d - start[i]) / (long double)speed[i];       maxim = max(maxim, time);     }      cout << "Case #" << x << ": ";     cout << fixed << setprecision(12) << d / maxim << endl;   }   return 0; }
#include <bits/stdc++.h> #include <bitset> #include <deque> #include <iomanip> #include <iostream> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>    using namespace std;
typedef double td_d; typedef vector<int> vi; typedef vector<vi> vvi; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<string> vs;  typedef long long ll;           typedef unsigned long long ULL;       struct debugger {   template <typename T> debugger &operator,(const T &v) {     cerr << v << " ";     return *this;   } };  void open(int *arr, int ikni_Var) {   printf("[");   for (int i = 0; i < ikni_Var; i++)     printf("%d ", arr[i]);   printf("]\n"); }  inline void dszucaynva(int &d, int &ct, int &s, td_d &ans) {   scanf("%d ", &ct);   ;   scanf("%d ", &s);   ;   td_d r = ((d - ct) * 1.0) / s;     ans = max(ans, r); }
int main() {   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_16_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/lazyBit/outer_temp/lazyBit/A-small-practice_transformation.out",           "w", stdout);    freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_16_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/lazyBit/A-small-practice.in",           "r", stdin);   ;      int ikni_Var, i, j, ct, l, m, tc, s = 0, d, p;   scanf("%d ", &tc);   ;   int c = 1;   while (tc--) {     scanf("%d ", &d);     ;     scanf("%d ", &ikni_Var);     ;     td_d ans = 0.0;     td_d r;       for (i = 0; i < ikni_Var; i++)       dszucaynva(d, ct, s, ans);     printf("Case #%d: %0.6lf\n", c++, d / ans);   }   return (0); }
#include <iostream>  using namespace std;
int solve(int cc) {   long long d, n, k, s;   long double mt = 0;   cin >> d >> n;   for (int i = 0; i < n; i++) {     cin >> k >> s;     long double tt = (d - k);     tt /= s;     if (i == 0 || mt < tt) {       mt = tt;     }   }   cout << "Case #" << cc << ": " << fixed << d / mt << endl;   return 1; }
int main() {   int t;   cin >> t;   cout.precision(7);   for (int i = 1; i <= t; i++) {     solve(i);   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <fstream> #include <functional> #include <iostream> #include <list> #include <map> #include <math.h> #include <queue> #include <set> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector>  using namespace std;
const double EPS = 1e-9;  const int N = 1010;  int a[N]; long long b[N];  inline void pzqrfcwtmh(_Bool &can) { can = false; }  inline void abzyxjdbdw(int &i, long double &s, _Bool &can) {   if (b[i] < a[i] * s)     pzqrfcwtmh(can); }  inline void rwwwluryaf(long double &j, long double &s) { j = s; }
int main() {   int ans;   cin >> ans;   int cc;   for (cc = 1; cc <= ans; ++cc) {     double begt = clock();     printf("Case #%d: ", cc);     int d, n;     cin >> d >> n;     int i;     for (i = 0; i < n; ++i) {       int foo, bar;       cin >> foo >> bar;       a[i] = d - foo;       b[i] = 1LL * d * bar;     }     long double j = 0, r = 1e16;     for (int it = 0; it < 1000; ++it) {       long double s = (j + r) * 0.5;       bool can = true;       int i;       for (i = 0; i < n; ++i)         abzyxjdbdw(i, s, can);       if (can)         rwwwluryaf(j, s);       else         r = s;     }     printf("%.15f\n", (double)((j + r) * 0.5));     fprintf(stderr, "case %d solved in %.3f\n", cc,             (clock() - begt) / CLOCKS_PER_SEC);   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <string> #include <utility> #include <vector>  using namespace std;
typedef double td_d; typedef unsigned long long ull; typedef set<int> si; typedef long double ld; typedef long long ll; typedef pair<int, int> ii; typedef pair<int, int> pii; typedef vector<int> vi; typedef long double LD;  const int N = 1010;  int solve[N]; long long b[N];  inline void zepqztokfj(int &i, LD &s, _Bool &can) {   if (b[i] < solve[i] * s) {     can = false;   } }  inline void apsaeebyvr(LD &l, LD &s) { l = s; }
int main() {    freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_18_Usenix_RF_1.0_True_MCTS_Classic_True/ibrahim5253/fragusbot/A-small-practice.in",           "r", stdin);    int t;   scanf("%d", &t);   for (int y = 1; y <= t; ++y) {     td_d begt = clock();     printf("Case #%d: ", y);     int d, n;     scanf("%d %d", &d, &n);     {       int i = 0;       while (i < n) {         int foo, bar;         scanf("%d %d", &foo, &bar);         solve[i] = d - foo;         b[i] = 1LL * d * bar;         ++i;       }     }     LD l = 0, r = 1e16;     for (int it = 0; it < 1000; ++it) {       LD s = (l + r) * 0.5;       bool can = true;       for (int i = 0; i < n; ++i)         zepqztokfj(i, s, can);       if (can)         apsaeebyvr(l, s);       else         r = s;     }     printf("%.15f\n", (double)((l + r) * 0.5));     fprintf(stderr, "case %d solved in %.3f\n", y,             (clock() - begt) / CLOCKS_PER_SEC);   }   return 0; }
#include <algorithm> #include <cstdio> #include <cstring> #include <iostream> #include <string> #include <vector> using namespace std;
int main() {   int tt;    cin >> tt;    for (int t = 1; t <= tt; ++t) {     int n, r, o, y, g, b, v;     cin >> n >> r >> o >> y >> g >> b >> v;     string s = "";      if ((r > n / 2) || (y > n / 2) || (b > n / 2))       s = "IMPOSSIBLE";     else {       vector<pair<int, string>> v;       v.push_back({r, "R"});       v.push_back({y, "Y"});       v.push_back({b, "B"});       sort(v.begin(), v.end());       reverse(v.begin(), v.end());       while (v[0].first > 0) {         s += v[0].second;         v[0].first--;         if (v[1].first > v[2].first) {           s += v[1].second;           v[1].first--;         } else {           s += v[2].second;           v[2].first--;         }       }       while ((v[1].first > 0) || (v[2].first > 0)) {         if (v[1].first > v[2].first) {           s += v[1].second;           v[1].first--;         } else {           s += v[2].second;           v[2].first--;         }       }     }     cout << "Case #" << t << ": " << s << endl;   }    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cmath> #include <complex> #include <cstdio> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> #include <vector> using namespace std;
const long double PI = 3.1415926535897932384626433832795; const int MAXN = 1005; const int mod = 1000000007; ofstream fout;  ifstream fin;  inline void afcxipqhph(std::string &s, vector<pair<int, std::string>> &v) {   s += v[1].second;   v[1].first--; }  inline void iadwmfnnwv(int &c, int &t) {   t = 1;   while (t <= c) {     int j, r, o, y, g, b, v;     fin >> j >> r >> o >> y >> g >> b >> v;     string s = "";      if ((r > j / 2) || (y > j / 2) || (b > j / 2)) {       s = "IMPOSSIBLE";     } else {       vector<pair<int, string>> v;       v.push_back({r, "R"});       v.push_back({y, "Y"});       v.push_back({b, "B"});       sort(v.begin(), v.end());       reverse(v.begin(), v.end());       while (v[0].first > 0) {         s += v[0].second;         v[0].first--;         if (v[1].first > v[2].first)           afcxipqhph(s, v);         else {           s += v[2].second;           v[2].first--;         }       }       while ((v[1].first > 0) || (v[2].first > 0)) {         if (v[1].first > v[2].first) {           s += v[1].second;           v[1].first--;         } else {           s += v[2].second;           v[2].first--;         }       }     }     fout << "Case #" << t << ": " << s << endl;     ++t;   } }
int main() {   fout.open("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_6_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/WCG/outer_temp/WCG/A-small-practice_transformation.out");    fin.open("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_6_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/WCG/A-small-practice.in");    int c;    fin >> c;    int t;   iadwmfnnwv(c, t);    return 0; }
#include <algorithm> #include <bitset> #include <climits> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <deque> #include <fstream> #include <functional> #include <iostream> #include <iterator> #include <list> #include <numeric> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <string> #include <vector> using namespace std;
typedef long long ll; typedef long long LL; typedef unsigned long long ull; typedef vector<int> vi; typedef long double LD; typedef vector<vector<int>> vvi;
int main() {   int ret_val = 0;   int tt;   scanf("%d ", &tt);   for (int t = 1; t <= tt; ++t) {     int n, r, o, y, g, b, v;     scanf("%d %d %d %d %d %d %d ", &n, &r, &o, &y, &g, &b, &v);     string s = "";      if ((r > n / 2) || (y > n / 2) || (b > n / 2))       s = "IMPOSSIBLE";     else {       vector<pair<int, string>> v;       v.push_back({r, "R"});       v.push_back({y, "Y"});       v.push_back({b, "B"});       sort(v.begin(), v.end());       reverse(v.begin(), v.end());       while (v[0].first > 0) {         s += v[0].second;         v[0].first--;         if (v[1].first > v[2].first) {           s += v[1].second;           v[1].first--;         } else {           s += v[2].second;           v[2].first--;         }       }       while ((v[1].first > 0) || (v[2].first > 0)) {         if (v[1].first > v[2].first) {           s += v[1].second;           v[1].first--;         } else {           s += v[2].second;           v[2].first--;         }       }     }     cout << "Case #" << t << ": " << s << endl;   }   return ret_val; }
#include <algorithm> #include <bits/stdc++.h> #include <cassert> #include <climits> #include <complex> #include <cstdio> #include <cstdlib> #include <ctime> #include <iostream> #include <iterator> #include <map> #include <numeric> #include <queue> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> #include <vector> using namespace std;
typedef long double ld; typedef unsigned long long ull; typedef vector<vector<int>> vvi; typedef pair<int, int> ii; typedef vector<int> VI; typedef vector<ii> vii; typedef long long LL; const int INF = ~(1 << 31); const double pi = acos(-1);
int main() {   int ret_val = 0;   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_7_Usenix_RF_1.0_True_MCTS_Classic_True/lazyBit/bennikartefla/A-small-practice.in",           "r", stdin);    int t;   scanf("%d ", &t);   string nice = "ROYGBVXXX";   for (int u = (0); u < (t); u++) {     int arr[8];     memset(arr, 0, sizeof(arr));     int n;     scanf("%d ", &n);     for (int i = (0); i < (6); i++)       scanf("%d ", &arr[i]);     string s = "";     int last = 7;     int og = n;     bool can = true;     while (n != 0) {       int bst = 0;       int index = 0;       for (int i = (0); i < (6); i++)         if (arr[i] >= bst && nice[i] != nice[last] && arr[i] != 0) {           if (arr[i] == bst && arr[i] != 0) {             if (n != og) {               if (s[0] == nice[i]) {                 bst = arr[i];                 index = i;               }             }           } else if (arr[i] > bst) {             bst = arr[i];             index = i;           }         }       arr[index]--;       if (bst == -1) {         can = false;         break;       }       s += nice[index];       last = index;       n--;     }     if (s.size() != og)       can = false;     for (int i = (0); i < (s.size() - 1); i++)       if (s[i] == s[i + 1])         can = false;     {       int i = (1);       while (i < (s.size())) {         if (s[i] == s[i - 1])           can = false;         i++;       }     }     cout << "Case #" << u + 1 << ": ";     if (s[0] == s[s.size() - 1] || !can)       cout << "IMPOSSIBLE" << endl;     else       cout << s << endl;   }   return ret_val; }
#include <bits/stdc++.h> using namespace std;
typedef long long ll; typedef long long LL; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<int> vi; void open() {   freopen("D:/OneDrive/Code/GCJ/B-small-attempt1.in", "r", stdin);   freopen("D:/OneDrive/Code/GCJ/out1.txt", "w", stdout); }  void pr(int idx) {   switch (idx) {   case 0:     printf("R");     break;   case 1:     printf("O");     break;   case 2:     printf("Y");     break;   case 3:     printf("G");     break;   case 4:     printf("B");     break;   case 5:     printf("V");     break;   } }
int main(void) {   open();   int tc;   scanf("%d", &tc);    for (int ct = 1; ct <= tc; ct++) {     int n;     scanf("%d", &n);     int arr[10];     printf("Case #%d: ", ct);     for (int i = 0; i < 6; i++) {       scanf("%d", &arr[i]);     }     bool imp = false;     for (int i = 0; i < 6; i++) {       if (arr[i] * 2 > n) {         imp = true;         printf("IMPOSSIBLE\n");         break;       }     }      if (imp)       continue;      int maxidx = 0;     for (int i = 0; i < 6; i++) {       if (arr[maxidx] < arr[i])         maxidx = i;     }     bool palinggede = true;     int last = maxidx;     pr(maxidx);     arr[maxidx]--;     int first = last;      while (true) {       bool ada = false;       for (int i = 0; i < 6; i++) {         if (arr[i] > 0)           ada = true;       }        if (!ada)         break;        if (last == 0) {         if (arr[2] > arr[4]) {           last = 2;         } else if (arr[2] < arr[4]) {           last = 4;         } else {           if (first == 2) {             last = 2;           } else             last = 4;         }       } else if (last == 2) {         if (arr[0] > arr[4]) {           last = 0;         } else if (arr[0] < arr[4]) {           last = 4;         } else {           if (first == 0) {             last = 0;           } else             last = 4;         }       } else {         if (arr[0] > arr[2]) {           last = 0;         } else if (arr[0] < arr[2]) {           last = 2;         } else {           if (first == 0) {             last = 0;           } else             last = 2;         }       }       pr(last);       arr[last]--;     }     printf("\n");      cerr << "Test " << ct << " done \n";     if (first == last) {       cerr << "last equals first\n";     }   }   return 0; }
#include <bits/stdc++.h> using namespace std;
typedef long long LL; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<int> vi; void open() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_8_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/ccsnoopy/A-small-practice.in",           "r", stdin);   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_8_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/ccsnoopy/outer_temp/ccsnoopy/A-small-practice_transformation.out",           "w", stdout); }  void pr(int idx) {   switch (idx) {   case 0:     printf("R");     break;   case 1:     printf("O");     break;   case 2:     printf("Y");     break;   case 3:     printf("G");     break;   case 4:     printf("B");     break;   case 5:     printf("V");     break;   } }
int main(void) {   int ret_val = 0;   open();   int tc;   scanf("%d", &tc);   for (int ct = 1; ct <= tc; ct++) {     int n;     scanf("%d", &n);     int arr[10];     printf("Case #%d: ", ct);     for (int i = 0; i < 6; i++) {       scanf("%d", &arr[i]);     }     bool imp = false;     for (int i = 0; i < 6; i++) {       if (arr[i] * 2 > n) {         imp = true;         printf("IMPOSSIBLE\n");         break;       }     }      if (imp)       continue;      int maxidx = 0;     for (int i = 0; i < 6; i++) {       if (arr[maxidx] < arr[i])         maxidx = i;     }     bool palinggede = true;     int last = maxidx;     pr(maxidx);     arr[maxidx]--;     int first = last;      while (true) {       bool ada = false;       for (int i = 0; i < 6; i++) {         if (arr[i] > 0)           ada = true;       }        if (!ada)         break;        if (last == 0) {         if (arr[2] > arr[4]) {           last = 2;         } else if (arr[2] < arr[4]) {           last = 4;         } else {           if (first == 2) {             last = 2;           } else             last = 4;         }       } else if (last == 2) {         if (arr[0] > arr[4]) {           last = 0;         } else if (arr[0] < arr[4]) {           last = 4;         } else {           if (first == 0) {             last = 0;           } else             last = 4;         }       } else {         if (arr[0] > arr[2]) {           last = 0;         } else if (arr[0] < arr[2]) {           last = 2;         } else {           if (first == 0) {             last = 0;           } else             last = 2;         }       }       pr(last);       arr[last]--;     }     printf("\n");      cerr << "Test " << ct << " done \n";     if (first == last) {       cerr << "last equals first\n";     }   }   return ret_val; }
#include <bits/stdc++.h> #include <stdio.h> using namespace std;
using VI = vector<int>; using VVI = vector<VI>; using PII = pair<int, int>; using LL = long long; using VL = vector<LL>; using VVL = vector<VL>; using PLL = pair<LL, LL>; using VS = vector<string>; template <class S, class T> istream &operator>>(istream &is, pair<S, T> &p) {   return is >> p.first >> p.second; } template <class S, class T> ostream &operator<<(ostream &os, const pair<S, T> &p) {   return os << p.first << " " << p.second; } template <class T> void maxi(T &x, T y) {   if (x < y)     x = y; } template <class T> void do_voijrf_fct(T &x, T y) {   if (x > y)     x = y; }  const double EPS = 1e-10; const double PI = acos(-1.0); const LL MOD = 1e9 + 7;  bool check(VI tmp, const string &s) {   string col = "ROYGB";   for (int i = 0; i < int((s).size()); ++i) {     int ix = col.find(s[i]);     tmp[ix]--;   }   for (int i = (0); i < (6); ++i)     if (tmp[i] != 0)       return false;    if (s[0] == s.back())     return false;   for (int i = (0); i < (int((s).size()) - 1); ++i)     if (s[i] == s[i + 1])       return false;   return true; }
int main() {   int ret_val = 0;   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_9_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/okaduki/outer_temp/okaduki/A-small-practice_transformation.out",           "w", stdout);   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_9_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/okaduki/A-small-practice.in",           "r", stdin);   cin.tie(0);   int cc;   scanf("%d ", &cc);   {     int t = (1);     while (t < (cc + 1)) {       int N;       string col = "ROYGB";       VI xs(6);       scanf("%d ", &N);         for (int i = (0); i < (6); ++i)         cin >> xs[i];       VI orig = xs;        int mx = max(xs[0], max(xs[1 * 2], xs[2 * 2]));       bool ok = (mx <= N - mx);        if (!ok) {         printf("Case #%d: IMPOSSIBLE\n", t);       } else {         string ans(N, '*');         int ix = -1;         for (int i = (0); i < (6); ++i)           if (xs[i] == mx)             ix = i;          for (int i = (0); i < (6); ++i)           if (i != ix)             if (xs[i]) {               ans[0] = col[i];               xs[i]--;               ix = i;               break;             }         for (int i = 1; i < N; ++i) {           int mix = -1;           for (int j = (0); j < (6); ++j) {             if ((mix == -1 || xs[mix] < xs[j]))               if (j != ix)                 mix = j;           }           ans[i] = col[mix];           xs[mix]--;           ix = mix;         }          if (!check(orig, ans)) {           int ret_val = 1;           for (int i = (0); i < (6); ++i)             printf("%d ", orig[i]);           printf("\n");           printf("%s\n", ans.c_str());           return ret_val;         }          printf("Case #%d: %s\n", t, ans.c_str());       }       ++t;     }   }   return ret_val; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <climits> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <iostream> #include <limits> #include <list> #include <map> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;
const int Maxn = 3010;  int t;  typedef double dbl;    int cs; struct Rec {   int a, b, l; };   int bpii_Var; int tc[10], cnwi_Var[Maxn]; vector<int> w[1010]; inline void tqkzppbukm(int &x) {   int i = 1;   while (i <= tc[x]) {     cnwi_Var[++cnwi_Var[0]] = x;     for (int yizi_Var = 0; yizi_Var < w[i].size(); yizi_Var++)       cnwi_Var[++cnwi_Var[0]] = w[i][yizi_Var];     i++;   } }
int main() {   int ret_val = 0;   cin >> t;   for (; t--;) {     printf("Case #%d: ", ++cs);     cin >> bpii_Var;     for (int i = 0; i < 6; i++)       cin >> tc[i];      int Max = max(tc[0], max(tc[2], tc[4]));     if (bpii_Var - Max < Max) {       puts("IMPOSSIBLE");       continue;     }     for (int i = 1; i <= 1000; i++)       w[i].clear();     int x = 0, i = 1;     if (Max == tc[0]) {       x = 0;       for (; i <= tc[2]; i++)         w[(i - 1) % tc[x] + 1].push_back(2);       for (; i <= bpii_Var - tc[x]; i++)         w[(i - 1) % tc[x] + 1].push_back(4);      } else if (Max == tc[2]) {       x = 2;       for (; i <= tc[0]; i++)         w[(i - 1) % tc[x] + 1].push_back(0);       for (; i <= bpii_Var - tc[x]; i++)         w[(i - 1) % tc[x] + 1].push_back(4);     } else {       x = 4;       for (; i <= tc[0]; i++)         w[(i - 1) % tc[x] + 1].push_back(0);       for (; i <= bpii_Var - tc[x]; i++)         w[(i - 1) % tc[x] + 1].push_back(2);     }     cnwi_Var[0] = 0;     tqkzppbukm(x);        {       int i = 1;       while (i <= bpii_Var) {         if (cnwi_Var[i] == 0)           cout << 'R';         if (cnwi_Var[i] == 2)           cout << 'Y';         if (cnwi_Var[i] == 4)           cout << 'B';         i++;       }     }     cout << endl;     }   return ret_val; }
#include <algorithm> #include <climits> #include <cmath> #include <cstdio> #include <cstring> #include <iostream> #include <iterator> #include <map> #include <queue> #include <set> #include <stack> #include <string> #include <unordered_map> #include <utility> #include <vector>    using namespace std;
using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  ll gcd(ll a, ll b) {   ll t;   while ((t = a % b) != 0) {     a = b;     b = t;   }   return b; }  ll fast_exp(ll base, ll n, ll m) {   if (n == 0)     return 1;   ll t = fast_exp(base, n / 2, m);   if (n % 2 == 0)     return (t * t) % m;   else     return (((t * t) % m) * base) % m; }  bool is_set(int i, ll mask) { return (mask >> i) & 1; }  int count_bits(ll mask) {   int ans = 0;   for (int i = 0; i < 64; ++i)     if (is_set(i, mask))       ++ans;   return ans; }  int first_bit(ll mask) {   int i = 0;   while (i < 64)     if (is_set(i++, mask))       return i - 1;   return -1; }
int main() {   ios::sync_with_stdio(false);   int t;   cin >> t;   for (int i = 1; i <= t; ++i) {     int n, r, o, y, g, b, v;     cin >> n >> r >> o >> y >> g >> b >> v;     int ma = n / 2;     cout << "Case #" << i << ": ";     if (r > ma || y > ma || b > ma) {       cout << "IMPOSSIBLE\n";       continue;     }     vector<pair<int, char>> V;     V.push_back(make_pair(r, 'R')), V.push_back(make_pair(y, 'Y')),         V.push_back(make_pair(b, 'B'));     sort(V.begin(), V.end());     char s[n + 1];     int p = 0;     int a = V[2].first;     while (a--)       s[p] = V[2].second, p = (p + 2) % n, p = (p == 0 ? 1 : p);     a = V[1].first;     while (a--)       s[p] = V[1].second, p = (p + 2) % n, p = (p == 0 ? 1 : p);     a = V[0].first;     while (a--)       s[p] = V[0].second, p = (p + 2) % n, p = (p == 0 ? 1 : p);     for (int i = 0; i < n; ++i)       cout << s[i];     cout << "\n";   }   return 0; }
#include <algorithm> #include <climits> #include <cmath> #include <cstdio> #include <cstring> #include <iostream> #include <iterator> #include <map> #include <queue> #include <set> #include <stack> #include <stdio.h> #include <string> #include <unordered_map> #include <utility> #include <vector>    using namespace std;
const int MOD = 1000000007;  using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  inline void qrygesunkn(ll &a, ll &b, ll &t) {   a = b;   b = t; }  ll gcd(ll a, ll b) {   ll t;   while ((t = a % b) != 0)     qrygesunkn(a, b, t);   return b; }  ll fast_exp(ll j, ll n, ll q) {   if (n == 0)     return 1;   ll t = fast_exp(j, n / 2, q);   if (n % 2 == 0)     return (t * t) % q;   else     return (((t * t) % q) * j) % q; }  bool is_set(int i, ll N) { return (N >> i) & 1; }  inline void teanbokvkz(int &i, ll &N, int &ans) {   if (is_set(i, N))     ++ans; }  int count_bits(ll N) {   int ans = 0;   for (int i = 0; i < 64; ++i)     teanbokvkz(i, N, ans);   return ans; }  int first_bit(ll N) {   int ret_val = -1;   int i = 0;   while (i < 64)     if (is_set(i++, N))       return i - 1;   return ret_val; }
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_10_Usenix_RF_1.0_True_MCTS_Classic_True/try/ibrahim5253/outer_temp/ibrahim5253/A-small-practice_transformation.out",           "w", stdout);    int t;   scanf("%d ", &t);   for (int i = 1; i <= t; ++i) {     int n, r, o, y, g, b, v;     scanf("%d %d %d %d %d %d %d ", &n, &r, &o, &y, &g, &b, &v);     int tc = n / 2;     printf("Case #%d: ", i);     if (b > tc) {       printf("IMPOSSIBLE\n");       continue;     } else if (r > tc || y > tc) {       printf("IMPOSSIBLE\n");       continue;     }     vector<pair<int, char>> V;     V.push_back(make_pair(r, 'R')), V.push_back(make_pair(y, 'Y')),         V.push_back(make_pair(b, 'B'));     sort(V.begin(), V.end());     char s[n + 1];     int p = 0;     int a = V[2].first;     while (a--)       s[p] = V[2].second, p = (p + 2) % n, p = (p == 0 ? 1 : p);     a = V[1].first;     while (a--)       s[p] = V[1].second, p = (p + 2) % n, p = (p == 0 ? 1 : p);     a = V[0].first;     while (a--)       s[p] = V[0].second, p = (p + 2) % n, p = (p == 0 ? 1 : p);     for (int i = 0; i < n; ++i)       printf("%c", s[i]);     printf("\n");   }   return 0; }
#include <bits/stdc++.h> using namespace std;
using LL = long long;  int a[6]; string s = "ROYGBV";
int main() {   freopen("123.in", "r", stdin);   freopen("123.out", "w", stdout);   int T, cas = 0;   cin >> T;   while (T--) {     int n;     cin >> n;     for (int i = 0; i < 6; i++)       cin >> a[i];     string ans = "";     int flag = 0;     while (ans.size() < n) {       int mx = 0, c = 0;       for (int i = 0; i < 6; i++) {         if (s[i] == ans.back())           continue;         if (a[i] == mx && ans.size() && s[i] == ans[0])           mx = a[i], c = i;         if (a[i] > mx)           mx = a[i], c = i;       }       if (s[c] == ans.back() || a[c] == 0) {         flag = 1;         break;       }       ans.push_back(s[c]);       a[c]--;     }       if (ans.size() > 1 && ans[0] == ans.back())       flag = 1;     printf("Case #%d: ", ++cas);     if (flag)       puts("IMPOSSIBLE");     else       printf("%s\n", ans.c_str());   }   return 0; }
#include <bits/stdc++.h> #include <iostream> #include <utility> #include <vector> using namespace std;
typedef vector<vector<int>> vvi; typedef long long ll; typedef pair<int, int> PII; typedef pair<int, int> pii; typedef unsigned long long ull; typedef vector<int> vi;  bool comp(pair<int, char> &get, pair<int, char> &r) {   return get.first < r.first; }  inline void meiepufinn(std::ofstream &fout, pair<int, char> col[3], int &i) {   if (col[i].first) {     fout << col[i].second << endl;   } }  inline void velrgurihs(std::ofstream &fout, pair<int, char> col[3], int &odd) {   fout << col[2].second << col[odd % 2].second;   col[2].first--;   col[odd % 2].first--;   odd++; }
int main(int argc, char **argv) {   ios::sync_with_stdio(false);    ifstream q("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_14_Usenix_RF_1.0_True_MCTS_Classic_True/bennikartefla/gultai4ukr/A-small-practice.in");   ofstream fout("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_14_Usenix_RF_1.0_True_MCTS_Classic_True/bennikartefla/gultai4ukr/outer_temp/gultai4ukr/A-small-practice_transformation.out");    int t;   q >> t;   for (int testcase = 0; testcase < t; ++testcase) {     int n, r, o, y, g, b, v;     q >> n >> r >> o >> y >> g >> b >> v;     int m = max(r, max(y, b));     fout << "Case #" << testcase + 1 << ": ";      pair<int, char> col[] = {{r, 'R'}, {y, 'Y'}, {b, 'B'}};     sort(col, &col[3], comp);      if (r + y + b == 1) {       for (int i = 0; i < 3; ++i)         meiepufinn(fout, col, i);       continue;     }      if (m > (r + y + b) / 2.0) {       fout << "IMPOSSIBLE" << endl;       continue;     }      for (; col[1].first > col[0].first;) {       fout << col[2].second << col[1].second;       col[2].first--;       col[1].first--;     }     int odd = 0;     while (col[2].first) {       velrgurihs(fout, col, odd);     }      for (; col[odd % 2].first;) {       fout << col[odd % 2].second;       col[odd % 2].first--;       odd++;     }     fout << endl;   }    q.close();   fout.close();   return 0; }
#include <bitset> #include <deque> #include <iomanip> #include <iostream> #include <queue> #include <set> #include <sstream> #include <stack>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>    using namespace std;
typedef vector<int> vi; typedef vector<vi> vvi; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<string> vs;  typedef long long LL;             typedef unsigned long long ULL;   typedef unsigned uint;  const double pi = acos(-1.0);   const double eps = 1e-11;       const int MAXI = 0x7fffffff; const int dx[] = {1, 0, -1, 0}; const int dy[] = {0, 1, 0, -1}; const char colors[] = {'R', 'O', 'Y', 'G', 'B', 'V'}; const char dz[] = "SENW"; struct debugger {   template <typename T> debugger &operator,(const T &v) {     cerr << v << " ";     return *this;   } } dbg;  void debugarr(int *arr, int n) {   cout << "[";   for (int i = 0; i < n; i++)     cout << arr[i] << " ";   cout << "]" << endl; }    vector<pair<int, int>> v;
int main() {    freopen("input.txt", "r", stdin);   ;        int n, i, j, k, l, m, t, s = 0, d, p;   scanf("%d", &t);   ;   int c = 1;   while (t--) {     scanf("%d", &n);     ;     int a[1010];     int b[1010];     v.clear();     for (i = 0; i < 6; i++) {       scanf("%d", &a[i]);       ;     }     d = 0;     v.push_back(make_pair(a[0], 0));     v.push_back(make_pair(a[2], 2));     v.push_back(make_pair(a[4], 4));     if (v[2].first > v[0].first + v[1].first) {       printf("Case #%d: IMPOSSIBLE\n", c++);       continue;     }     sort(v.begin(), v.end());     while (d < n) {       if (v[2].first > 0) {         a[d++] = v[2].second;         v[2].first--;          if (v[1].first > 0) {           a[d++] = v[1].second;           v[1].first--;         } else if (v[0].first > 0) {           a[d++] = v[0].second;           v[0].first--;           if (v[2].first == 0)             break;         }       } else {         break;       }       }     s = 0;       if (v[0].first > 0) {       for (i = 0; i < d; i++) {         b[s++] = a[i];         if (v[0].first > 0 && a[i + 1] != v[0].second) {           b[s++] = v[0].second;           v[0].first--;         }                }       for (i = 0; i < s - 1; i++) {         if (b[i] == b[i + 1]) {           printf("Case #%d: IMPOSSIBLE\n", c++);           break;         }       }       if (i != s - 1)         continue;       if (b[s - 1] == b[0]) {         printf("Case #%d: IMPOSSIBLE\n", c++);         continue;       }       printf("Case #%d: ", c++);       for (i = 0; i < s; i++) {         printf("%c", colors[b[i]]);       }       cout << endl;     } else if (a[d - 1] == a[0]) {       printf("Case #%d: IMPOSSIBLE\n", c++);     } else {       printf("Case #%d: ", c++);       for (i = 0; i < d; i++) {         printf("%c", colors[a[i]]);       }       cout << endl;     }   }   return (0); }
#include <bits/stdc++.h> #include <bitset> #include <deque> #include <iomanip> #include <iostream> #include <queue> #include <set> #include <sstream> #include <stack>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>    using namespace std;
typedef vector<int> vi; typedef vector<vi> vvi; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<string> vs;  typedef long long ll;            typedef unsigned long long ULL;  typedef unsigned uint;   const char colors[] = {'R', 'O', 'Y', 'G', 'B', 'V'};  struct debugger {   template <typename T> debugger &operator,(const T &v) {     cerr << v << " ";     return *this;   } };  void open(int *arr, int n) {   cout << "[";   for (int i = 0; i < n; i++)     cout << arr[i] << " ";   cout << "]" << endl; }    vector<pair<int, int>> v; inline void rgnddzqbkk(int b[1010], int &i) { printf("%c", colors[b[i]]); }
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_16_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/lazyBit/outer_temp/lazyBit/A-small-practice_transformation.out", "w", stdout);    freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_16_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/lazyBit/A-small-practice.in",           "r", stdin);   ;      int n, i, j, k, l, m, t, s = 0, d, p;   scanf("%d", &t);   ;   int c = 1;   while (t--) {     scanf("%d", &n);     ;     int a[1010];     int b[1010];     v.clear();     for (i = 0; i < 6; i++) {       scanf("%d", &a[i]);       ;     }     d = 0;     v.push_back(make_pair(a[0], 0));     v.push_back(make_pair(a[2], 2));     v.push_back(make_pair(a[4], 4));     if (v[2].first > v[0].first + v[1].first) {       printf("Case #%d: IMPOSSIBLE\n", c++);       continue;     }     sort(v.begin(), v.end());     while (d < n) {       if (v[2].first > 0) {         a[d++] = v[2].second;         v[2].first--;          if (v[1].first > 0) {           a[d++] = v[1].second;           v[1].first--;         } else if (v[0].first > 0) {           a[d++] = v[0].second;           v[0].first--;           if (v[2].first == 0)             break;         }       } else {         break;       }        }     s = 0;       if (v[0].first > 0) {       for (i = 0; i < d; i++) {         b[s++] = a[i];         if (v[0].first > 0 && a[i + 1] != v[0].second) {           b[s++] = v[0].second;           v[0].first--;         }            }       for (i = 0; i < s - 1; i++) {         if (b[i] == b[i + 1]) {           printf("Case #%d: IMPOSSIBLE\n", c++);           break;         }       }       if (i != s - 1)         continue;       if (b[s - 1] == b[0]) {         printf("Case #%d: IMPOSSIBLE\n", c++);         continue;       }       printf("Case #%d: ", c++);       for (i = 0; i < s; i++)         rgnddzqbkk(b, i);       cout << endl;     } else {       if (a[d - 1] == a[0]) {         printf("Case #%d: IMPOSSIBLE\n", c++);       } else {         printf("Case #%d: ", c++);         for (i = 0; i < d; i++) {           printf("%c", colors[a[i]]);         }         cout << endl;       }     }   }   return (0); }
#include <algorithm> #include <iostream> #include <map>  using namespace std;
map<char, int> mmm;  struct my_sort {   bool operator()(const pair<int, char> &left, const pair<int, char> &right) {     if (left.first > right.first) {       return true;     } else if (left.first < right.first) {       return false;     } else {       return mmm[left.second] < mmm[right.second];     }   } };  int solve(int cc) {   mmm.clear();   int n, r, o, y, g, b, v;   cin >> n >> r >> o >> y >> g >> b >> v;   pair<int, char> arr[3];   arr[0] = pair<int, char>(r, 'R');   arr[1] = pair<int, char>(y, 'Y');   arr[2] = pair<int, char>(b, 'B');   sort(arr, arr + 3, greater<pair<int, char>>());      for (int i = 0; i < 3; i++) {     mmm[arr[i].second] = i;   }    cout << "Case #" << cc << ": ";   string sol = "";   bool im = false;   char last = '-';   for (int i = 0; i < n && !im; i++) {     int mi = -1;     sort(arr, arr + 3, my_sort());     for (int j = 0; j < 3; j++) {       if (arr[j].second != last) {         mi = j;         break;       }     }     if (mi == -1 || arr[mi].first <= 0) {       im = true;       break;     }     sol += arr[mi].second;     last = arr[mi].second;     arr[mi].first--;   }   if (im || (sol[0] == sol[n - 1])) {     cout << "IMPOSSIBLE" << endl;   } else {     cout << sol << endl;   }   return 1; }
int main() {   int t;   cin >> t;   for (int i = 1; i <= t; i++) {     solve(i);   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <iostream> #include <map> #include <stdio.h> #include <utility> #include <vector>  using namespace std;
typedef long long ll; typedef pair<int, int> ii; typedef vector<int> vi;  map<char, int> mmm;  struct my_sort {   inline bool kzyovwgsef(_Bool &kzyov) {     kzyov = false;     return true;     return false;   }    bool operator()(const pair<int, char> &left, const pair<int, char> &right) {     if (left.first > right.first) {       return true;     } else if (left.first < right.first) {       _Bool kzyov;       if (kzyovwgsef(kzyov)) {         return kzyov;       }     } else {       return mmm[left.second] < mmm[right.second];     }   } };  int open(int cc) {   mmm.clear();   int n, r, o, y, g, b, v;   cin >> n >> r >> o >> y >> g >> b >> v;   pair<int, char> arr[3];   arr[0] = pair<int, char>(r, 'R');   arr[1] = pair<int, char>(y, 'Y');   arr[2] = pair<int, char>(b, 'B');   sort(arr, arr + 3, greater<pair<int, char>>());      for (int i = 0; i < 3; i++) {     mmm[arr[i].second] = i;   }    printf("Case #%d: ", cc);   string sol = "";   bool im = false;   char last = '-';   for (int i = 0; i < n && !im; i++) {     int mi = -1;     sort(arr, arr + 3, my_sort());     for (int j = 0; j < 3; j++) {       if (arr[j].second != last) {         mi = j;         break;       }     }     if (mi == -1 || arr[mi].first <= 0) {       im = true;       break;     }     sol += arr[mi].second;     last = arr[mi].second;     arr[mi].first--;   }   if (im || (sol[0] == sol[n - 1])) {     printf("IMPOSSIBLE\n");   } else {     printf("%s\n", sol.c_str());   }   return 1; }
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_17_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/Thanabhat/outer_temp/Thanabhat/A-small-practice_transformation.out",           "w", stdout);    freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_17_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/Thanabhat/A-small-practice.in",           "r", stdin);    int tc;   cin >> tc;   for (int i = 1; i <= tc; i++) {     open(i);   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cassert> #include <cctype> #include <complex> #include <cstdio> #include <cstring> #include <ctime> #include <fstream> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <queue> #include <stdio.h> #include <stdlib.h> #include <unordered_map>  using namespace std;
ofstream fout;  const long double PI = 3.1415926535897932384626433832795; const int INF = 1000000000; const double EPS = 1e-9;  map<char, int> mmm;  struct my_sort {   bool operator()(const pair<int, char> &left, const pair<int, char> &right) {     if (left.first > right.first) {       return true;     } else {       if (left.first < right.first) {         return false;       } else         return mmm[left.second] < mmm[right.second];     }   } };  inline void ydwtwsxjxc() { fout << "IMPOSSIBLE" << endl; }  int solve(int T) {   int ret_val = 1;   mmm.clear();   int n, r, o, y, g, b, v;   cin >> n >> r >> o >> y >> g >> b >> v;   pair<int, char> arr[3];   arr[0] = pair<int, char>(r, 'R');   arr[1] = pair<int, char>(y, 'Y');   arr[2] = pair<int, char>(b, 'B');   sort(arr, arr + 3, greater<pair<int, char>>());   for (int i = 0; i < 3; i++) {     mmm[arr[i].second] = i;   }   fout << "Case #" << T << ": ";   string sol = "";   bool im = 0;   char last = '-';   for (int i = 0; i < n && !im; i++) {     int get = -1;     sort(arr, arr + 3, my_sort());     int j;     for (j = 0; j < 3; j++) {       if (arr[j].second != last) {         get = j;         break;       }     }     if (get == -1 || arr[get].first <= 0) {       im = true;       break;     }     sol += arr[get].second;     last = arr[get].second;     arr[get].first--;   }   if (im || (sol[0] == sol[n - 1]))     ydwtwsxjxc();   else     fout << sol << endl;    return ret_val; }
int main() {   fout.open("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_17_Usenix_RF_1.0_True_MCTS_Classic_True/okaduki/Thanabhat/outer_temp/Thanabhat/A-small-practice_transformation.out");    ios::sync_with_stdio(false);    int t;   cin >> t;   for (int i = 1; i <= t; i++)     solve(i);    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector>  using namespace std;
const double EPS = 1e-9; const int MAXN = 1005;  pair<int, int> a[3]; int z[1010];
int main() {    int tt;   cin >> tt;   for (int cc = 1; cc <= tt; ++cc) {     double solve = clock();     printf("Case #%d: ", cc);     int n, R, O, Y, G, get, V;     cin >> n >> R >> O >> Y >> G >> get >> V;     a[0] = {R, 0};     a[1] = {Y, 1};     a[2] = {get, 2};     sort(a, a + 3);     memset(z, -1, sizeof z);     for (int i = 2; i >= 0; --i) {       while (a[i].first > 0) {         int pos = -1;         for (int j = 0; j < n; j += 2) {           if (z[j] == -1) {             pos = j;             break;           }         }         if (pos != -1) {           z[pos] = a[i].second;           --a[i].first;           continue;         }         for (int j = 1; j < n; j += 2) {           if (z[j] == -1) {             pos = j;             break;           }         }         z[pos] = a[i].second;         --a[i].first;       }     }     int can = 1;     for (int i = 0; i < n; ++i) {       if (z[i] == z[(i + 1) % n]) {         can = false;       }     }     if (!can) {       puts("IMPOSSIBLE");     } else {       for (int i = 0; i < n; ++i) {         if (z[i] == 0) {           putchar('R');         } else if (z[i] == 1)           putchar('Y');         else {           putchar('B');         }       }       putchar('\n');     }     fprintf(stderr, "case %d solved in %.3f\n", cc,             (clock() - solve) / CLOCKS_PER_SEC);   }   return 0; }
#include <bits/stdc++.h> using namespace std;
typedef long long int lli;  int tc;
int main() {   cin >> tc;   for (int t = 1; t <= tc; t++) {     int n, q;     cin >> n >> q;     int e[109], s[109];     for (int i = 1; i <= n; i++) {       cin >> e[i] >> s[i];     }     int adj[109][109];     for (int i = 1; i <= n; i++) {       for (int j = 1; j <= n; j++) {         cin >> adj[i][j];       }     }     int dist[109];       for (int i = 1; i < n; i++) {       dist[i] = adj[i][i + 1];     }     cout << "Case #" << t << ": ";     for (int nq = 0; nq < q; nq++) {       int u, v;       cin >> u >> v;       double time_taken[109];       for (int i = 1; i <= n; i++) {         time_taken[i] = -1;       }       time_taken[1] = 0;       for (int i = 1; i < n; i++) {            int dist_left = e[i];         int speed = s[i];         double cur_time = time_taken[i];         for (int j = i + 1; j <= n; j++) {             dist_left -= dist[j - 1];           if (dist_left < 0)             break;           cur_time += (dist[j - 1] + 0.0) / s[i];             if (time_taken[j] < 0) {             time_taken[j] = cur_time;           } else {             time_taken[j] = min(time_taken[j], cur_time);           }         }       }       cout << fixed << setprecision(7) << time_taken[v] << endl;     }   } }
#include <bits/stdc++.h> #include <fstream> #include <iostream> using namespace std;
ifstream fin;  using VI = vector<int>; using VVI = vector<VI>; using PII = pair<int, int>; using LL = long long; using VL = vector<LL>; using VVL = vector<VL>; using PLL = pair<LL, LL>; using VS = vector<string>; template <class S, class T> istream &operator>>(istream &r, pair<S, T> &p) {   return r >> p.first >> p.second; } template <class S, class T> ostream &solve(ostream &t, const pair<S, T> &p) {   return t << p.first << " " << p.second; }  template <class T> void get(T &x, T y) {   if (x > y)     x = y; }  const double INF = 1e15;
int main() {   fin.open("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_9_Usenix_RF_1.0_True_MCTS_Classic_True/Thanabhat/okaduki/A-small-practice.in");    int ret_val = 0;   cin.tie(0);   int c;   fin >> c;   for (int d = (1); d < (c + 1); ++d) {     int N, Q;     fin >> N >> Q;     vector<PLL> es(N);     for (int i = (0); i < (N); ++i)       fin >> es[i];      VVL dist(N, VL(N));     int i;     for (i = (0); i < (N); ++i)       for (int j = (0); j < (N); ++j)         fin >> dist[i][j];      while (Q--) {       int U, V;       fin >> U >> V;       --U;       --V;        vector<LL> acc(N);       for (int i = N - 2; i >= 0; --i)         acc[i] = dist[i][i + 1] + acc[i + 1];        vector<double> dp(N + 1, INF);       dp[N - 1] = 0;       for (int i = N - 2; i >= 0; --i) {         for (int j = i + 1; j < N; ++j) {           if (acc[i] - acc[j] > es[i].first)             break;           get(dp[i], dp[j] + (acc[i] - acc[j]) * 1. / es[i].second);         }       }       double ans = dp[0];       cout << "Case #" << d << ": " << fixed << setprecision(9) << ans << endl;     }   }   return ret_val; }
#include <bits/stdc++.h> #include <stdio.h> using namespace std;
using VI = vector<int>; using VVI = vector<VI>; using PII = pair<int, int>; using LL = long long; using VL = vector<LL>; using VVL = vector<VL>; using PLL = pair<LL, LL>; using VS = vector<string>; template <class S, class T> istream &operator>>(istream &is, pair<S, T> &p) {   return is >> p.first >> p.second; } template <class S, class T> ostream &operator<<(ostream &os, const pair<S, T> &p) {   return os << p.first << " " << p.second; }  template <class T> void mini(T &x, T y) {   if (x > y)     x = y; }  const double INF = 1e15;
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_9_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/okaduki/A-small-practice.in",           "r", stdin);    freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_9_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/okaduki/outer_temp/okaduki/A-small-practice_transformation.out",           "w", stdout);    int ret_val = 0;   cin.tie(0);    int tt;   scanf("%d ", &tt);   for (int t_ = (1); t_ < (tt + 1); ++t_) {     int cc, Q;     scanf("%d %d ", &cc, &Q);     vector<PLL> es(cc);     for (int i = (0); i < (cc); ++i)       cin >> es[i];      VVL dist(cc, VL(cc));     for (int i = (0); i < (cc); ++i) {       for (int j = (0); j < (cc); ++j)         cin >> dist[i][j];     }      while (Q--) {       int U, V;       scanf("%d %d ", &U, &V);       --U;       --V;        vector<LL> acc(cc);       for (int i = cc - 2; i >= 0; --i)         acc[i] = dist[i][i + 1] + acc[i + 1];        vector<double> dp(cc + 1, INF);       dp[cc - 1] = 0;       int i;       for (i = cc - 2; i >= 0; --i) {         for (int j = i + 1; j < cc; ++j) {           if (acc[i] - acc[j] > es[i].first)             break;           mini(dp[i], dp[j] + (acc[i] - acc[j]) * 1. / es[i].second);         }       }       double ans = dp[0];       printf("Case #%d: %.9f\n", t_, ans);     }   }   return ret_val; }
#include <bits/stdc++.h> #include <fstream> using namespace std;
ifstream fin;  ofstream fout;  using VI = vector<int>; using VVI = vector<VI>; using PII = pair<int, int>; using LL = long long; using VL = vector<LL>; using VVL = vector<VL>; using PLL = pair<LL, LL>; using VS = vector<string>; template <class S, class T> istream &operator>>(istream &m, pair<S, T> &p) {   return m >> p.first >> p.second; }  template <class T> void do_voicuv_fct(T &x, T t) {   if (x > t) {     x = t;   } }  const double INF = 1e15;
int main() {   fin.open("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_8_Usenix_RF_1.0_True_MCTS_Classic_True/4yn/okaduki/A-small-practice.in");    fout.open("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_8_Usenix_RF_1.0_True_MCTS_Classic_True/4yn/okaduki/outer_temp/okaduki/A-small-practice_transformation.out");    int ret_val = 0;   cin.tie(0);    int n;   fin >> n;   for (int t_ = (1); t_ < (n + 1); ++t_) {     int N, Q;     fin >> N >> Q;     vector<PLL> es(N);     for (int i = (0); i < (N); ++i)       fin >> es[i];      VVL dist(N, VL(N));     for (int i = (0); i < (N); ++i)       for (int j = (0); j < (N); ++j) {         fin >> dist[i][j];       }      for (; Q--;) {       int U, V;       fin >> U >> V;       --U;       --V;        vector<LL> acc(N);       for (int i = N - 2; i >= 0; --i)         acc[i] = dist[i][i + 1] + acc[i + 1];        vector<double> dp(N + 1, INF);       dp[N - 1] = 0;       int i;       for (i = N - 2; i >= 0; --i) {         for (int j = i + 1; j < N; ++j) {           if (acc[i] - acc[j] > es[i].first)             break;           do_voicuv_fct(dp[i], dp[j] + (acc[i] - acc[j]) * 1. / es[i].second);         }       }       double ans = dp[0];       fout << "Case #" << t_ << ": " << fixed << setprecision(9) << ans << endl;     }   }   return ret_val; }
#include <algorithm> #include <climits> #include <cmath> #include <cstdio> #include <cstring> #include <iostream> #include <iterator> #include <map> #include <queue> #include <set> #include <stack> #include <string> #include <unordered_map> #include <utility> #include <vector>    using namespace std;
using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  ll gcd(ll a, ll b) {   ll t;   while ((t = a % b) != 0) {     a = b;     b = t;   }   return b; }  ll fast_exp(ll base, ll n, ll m) {   if (n == 0)     return 1;   ll t = fast_exp(base, n / 2, m);   if (n % 2 == 0)     return (t * t) % m;   else     return (((t * t) % m) * base) % m; }  bool is_set(int i, ll mask) { return (mask >> i) & 1; }  int count_bits(ll mask) {   int ans = 0;   for (int i = 0; i < 64; ++i)     if (is_set(i, mask))       ++ans;   return ans; }  int first_bit(ll mask) {   int i = 0;   while (i < 64)     if (is_set(i++, mask))       return i - 1;   return -1; }
int main() {   ios::sync_with_stdio(false);   int t;   cin >> t;   for (int i = 1; i <= t; ++i) {     int n, q;     cin >> n >> q;     ll e[n], s[n];     for (int i = 0; i < n; ++i)       cin >> e[i] >> s[i];     ll d[n][n];     for (int i = 0; i < n; ++i)       for (int j = 0; j < n; ++j)         cin >> d[i][j];     {       int u, v;       cin >> u >> v;       --u, --v;       double dp[n];       dp[0] = 0;       for (int i = 1; i < n; ++i) {         dp[i] = 1e12;         ll dist = 0;         for (int j = i - 1; j >= 0; --j) {           dist += d[j][j + 1];           if (e[j] > dist)             dp[i] = min(dp[i], dp[j] + dist / static_cast<double>(s[j]));         }       }       printf("Case #%d: %.10f\n", i, dp[v]);     }   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <climits> #include <cmath> #include <cstdio> #include <cstring> #include <fstream> #include <iomanip> #include <iostream> #include <iterator> #include <map> #include <queue> #include <set> #include <stack> #include <string> #include <unordered_map> #include <utility> #include <vector>    using namespace std;
typedef double dbl;  ofstream fout;  using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  ll gcd(ll a, ll b) {   ll t;   for (; (t = a % b) != 0;) {     a = b;     b = t;   }   return b; }  ll do_llqsz_fct(ll tc, ll n, ll m) {   if (n == 0)     return 1;   ll t = do_llqsz_fct(tc, n / 2, m);   if (n % 2 == 0)     return (t * t) % m;   else     return (((t * t) % m) * tc) % m; }  bool is_set(int i, ll invl_Var) { return (invl_Var >> i) & 1; }  int do_intrro_fct(ll invl_Var) {   int nkai_Var = 0;   int i;   for (i = 0; i < 64; ++i)     if (is_set(i, invl_Var))       ++nkai_Var;   return nkai_Var; }  int first_bit(ll invl_Var) {   int ret_val = -1;   int i = 0;   while (i < 64)     if (is_set(i++, invl_Var))       return i - 1;   return ret_val; }
int main() {   fout.open("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_10_Usenix_RF_1.0_True_MCTS_Classic_True/4yn/ibrahim5253/outer_temp/ibrahim5253/A-small-practice_transformation.out");    int ret_val = 0;    int t;   cin >> t;   for (int i = 1; i <= t; ++i) {     int n, q;     cin >> n >> q;     ll e[n], qckl_Var[n];     for (int i = 0; i < n; ++i)       cin >> e[i] >> qckl_Var[i];     ll d[n][n];     for (int i = 0; i < n; ++i)       for (int axwi_Var = 0; axwi_Var < n; ++axwi_Var)         cin >> d[i][axwi_Var];     {       int u, mgni_Var;       cin >> u >> mgni_Var;       --u, --mgni_Var;       double dp[n];       dp[0] = 0;       for (int i = 1; i < n; ++i) {         dp[i] = 1e12;         ll dist = 0;         for (int axwi_Var = i - 1; axwi_Var >= 0; --axwi_Var) {           dist += d[axwi_Var][axwi_Var + 1];           if (e[axwi_Var] > dist)             dp[i] = min(dp[i], dp[axwi_Var] + dist / static_cast<double>(                                                          qckl_Var[axwi_Var]));         }       }       fout << "Case #" << i << ": " << fixed << setprecision(10) << dp[mgni_Var]            << "\n";     }   }   return ret_val; }
#include <algorithm> #include <cstdio> #include <cstring> using namespace std;
int N, Q, U, V; int e[200]; double s[200]; int d[200][200]; int go[200];  double ans[200];
int main(void) {   int t;   scanf("%d", &t);   for (int tt = 1; tt <= t; tt++) {     scanf("%d%d", &N, &Q);     for (int i = 0; i < N; ++i)       scanf("%d%lf", &e[i], &s[i]);     for (int i = 0; i < N; ++i)       for (int j = 0; j < N; ++j)         scanf("%d", &d[i][j]);      for (int k = 0; k < N; ++k)       for (int i = 0; i < N; ++i)         for (int j = 0; j < N; ++j) {           if (i == j || d[i][k] < 0 || d[k][j] < 0)             continue;           if (d[i][j] < 0 || d[i][j] >= d[i][k] + d[k][j]) {             d[i][j] = d[i][k] + d[k][j];           }         }      printf("Case #%d:", tt);      for (; Q--;) {       scanf("%d%d", &U, &V);       --U, --V;       for (int i = 0; i < N; ++i) {         ans[i] = -1;         go[i] = false;       }       ans[U] = 0;          int cur = U;       while (1) {         go[cur] = true;         for (int i = 0; i < N; ++i) {           if (d[cur][i] > e[cur] || d[cur][i] < 0)             continue;           if (ans[i] < 0 || ans[i] > ans[cur] + d[cur][i] / s[cur])             ans[i] = ans[cur] + d[cur][i] / s[cur];         }          double mind = -1;         for (int i = 0; i < N; ++i) {           if (go[i] || ans[i] < 0)             continue;           if (mind < 0 || mind > ans[i]) {             cur = i;             mind = ans[i];           }         }          if (mind < 0)           break;       }        printf(" %lf", ans[V]);     }      puts("");   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <climits> #include <cstdio> #include <cstring> #include <deque> #include <fstream> #include <iterator> #include <math.h> #include <queue> #include <set> #include <stack> #include <stdio.h> #include <stdlib.h> #include <utility> #include <vector> using namespace std;
int N, Q, U, V; int e[200]; double s[200]; int d[200][200]; int go[200];  double ans[200];
int main(void) {   int ret_val = 0;   int t;   scanf("%d", &t);   for (int solve = 1; solve <= t; solve++) {     scanf("%d%d", &N, &Q);     for (int i = 0; i < N; ++i)       scanf("%d%lf", &e[i], &s[i]);     for (int i = 0; i < N; ++i)       for (int j = 0; j < N; ++j)         scanf("%d", &d[i][j]);      for (int k = 0; k < N; ++k)       for (int i = 0; i < N; ++i)         for (int j = 0; j < N; ++j) {           if (i == j || d[i][k] < 0 || d[k][j] < 0)             continue;           if (d[i][j] >= d[i][k] + d[k][j]) {             d[i][j] = d[i][k] + d[k][j];           } else if (d[i][j] < 0) {             d[i][j] = d[i][k] + d[k][j];           }         }      printf("Case #%d:", solve);      for (; Q--;) {       scanf("%d%d", &U, &V);       --U, --V;       for (int i = 0; i < N; ++i) {         ans[i] = -1;         go[i] = false;       }       ans[U] = 0;          int cur = U;       while (1) {         go[cur] = true;         for (int i = 0; i < N; ++i) {           if (d[cur][i] > e[cur] || d[cur][i] < 0)             continue;           if (ans[i] < 0 || ans[i] > ans[cur] + d[cur][i] / s[cur])             ans[i] = ans[cur] + d[cur][i] / s[cur];         }          double mind = -1;         for (int i = 0; i < N; ++i) {           if (go[i] || ans[i] < 0)             continue;           if (mind < 0 || mind > ans[i]) {             cur = i;             mind = ans[i];           }         }          if (mind < 0)           break;       }        printf(" %lf", ans[V]);     }      puts("");   }   return ret_val; }
#include <algorithm> #include <cstdio> #include <cstring> #include <iostream> using namespace std;
int N, Q, U, V; int e[200]; double s[200]; int d[200][200]; int go[200];  double ans[200];
int main(void) {   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_12_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/iPeter/outer_temp/iPeter/A-small-practice_transformation.out",           "w", stdout);    int t;   cin >> t;   for (int tt = 1; tt <= t; tt++) {     cin >> N >> Q;     for (int i = 0; i < N; ++i)       cin >> e[i] >> s[i];     for (int i = 0; i < N; ++i)       for (int j = 0; j < N; ++j)         cin >> d[i][j];      for (int k = 0; k < N; ++k)       for (int i = 0; i < N; ++i)         for (int j = 0; j < N; ++j) {           if (i == j || d[i][k] < 0 || d[k][j] < 0)             continue;           if (d[i][j] < 0 || d[i][j] >= d[i][k] + d[k][j]) {             d[i][j] = d[i][k] + d[k][j];           }         }      printf("Case #%d:", tt);      for (; Q--;) {       cin >> U >> V;       --U, --V;       for (int i = 0; i < N; ++i) {         ans[i] = -1;         go[i] = false;       }       ans[U] = 0;          int cur = U;       while (true) {         go[cur] = true;         for (int i = 0; i < N; ++i) {           if (d[cur][i] > e[cur] || d[cur][i] < 0)             continue;           if (ans[i] < 0 || ans[i] > ans[cur] + d[cur][i] / s[cur])             ans[i] = ans[cur] + d[cur][i] / s[cur];         }          double mind = -1;         for (int i = 0; i < N; ++i) {           if (go[i] || ans[i] < 0)             continue;           if (mind < 0 || mind > ans[i]) {             cur = i;             mind = ans[i];           }         }          if (mind < 0)           break;       }        printf(" %lf", ans[V]);     }      puts("");   }   return 0; }
#include <bits/stdc++.h>  using namespace std;
typedef long long ll; typedef pair<int, int> ii; typedef pair<int, ii> iii;  ll pwr(ll base, ll p, ll mod = (1000000007LL)) {   ll ans = 1;   while (p) {     if (p & 1)       ans = (ans * base) % mod;     base = (base * base) % mod;     p /= 2;   }   return ans; }  ll gcd(ll a, ll b) {   if (b == 0)     return a;   return gcd(b, a % b); }  const int N = 102; int n, q; double endurance[N], speed[N], adj[N][N], dist[N][N];  typedef pair<double, int> pdi; void dijkstra(int src) {   for (int i = 1; i <= n; i++)     dist[src][i] = 1e15;   priority_queue<pdi> pq;   dist[src][src] = 0;   pq.push(pdi(0, src));   while (!pq.empty()) {      int v = pq.top().second;     double d = -pq.top().first;     pq.pop();     if (d > dist[src][v])       continue;      for (int vv = 1; vv <= n; vv++) {       if (adj[v][vv] > endurance[v])         continue;       double dd = d + adj[v][vv] / speed[v];       if (dd < dist[src][vv]) {         dist[src][vv] = dd;         pq.push(pdi(-dd, vv));       }     }   } }
int main() {    ios_base::sync_with_stdio(0);   cin.tie(0);    freopen("C-small-attempt0.in", "r", stdin);   freopen("output.txt", "w", stdout);    int t, x = 1;   cin >> t;   while (t--) {      cin >> n >> q;     for (int i = 1; i <= n; i++)       cin >> endurance[i] >> speed[i];      for (int i = 1; i <= n; i++) {       for (int j = 1; j <= n; j++) {         cin >> adj[i][j];         if (adj[i][j] == -1)           adj[i][j] = 1e15;       }     }      for (int k = 1; k <= n; k++)       for (int i = 1; i <= n; i++)         for (int j = 1; j <= n; j++)           adj[i][j] = min(adj[i][j], adj[i][k] + adj[k][j]);      for (int i = 1; i <= n; i++)       dijkstra(i);      cout << "Case #" << x++ << ":";     while (q--) {       int a, b;       cin >> a >> b;       cout << fixed << setprecision(7) << " " << dist[a][b];     }     cout << endl;   }    return 0; }
#include <bits/stdc++.h> #include <fstream> #include <vector>  using namespace std;
typedef unsigned long long ull; typedef vector<int> VI; typedef long double LD; typedef vector<vector<int>> vvi;  ifstream fin;  long long solve(long long a, long long b) {   if (b == 0)     return a;   return solve(b, a % b); }  const int N = 102; int n, q; double endurance[N], speed[N], adj[N][N], dist[N][N];  inline void nhsbdbujcf(int &src, priority_queue<pair<double, int>> &pq,                        double &dd, int &vv) {   dist[src][vv] = dd;   pq.push(pair<double, int>(-dd, vv)); }  void dijkstra(int src) {   for (int i = 1; i <= n; i++)     dist[src][i] = 1e15;   priority_queue<pair<double, int>> pq;   dist[src][src] = 0;   pq.push(pair<double, int>(0, src));   while (!pq.empty()) {      int v = pq.top().second;     double d = -pq.top().first;     pq.pop();     if (d > dist[src][v])       continue;      for (int vv = 1; vv <= n; vv++) {       if (adj[v][vv] > endurance[v])         continue;       double dd = d + adj[v][vv] / speed[v];       if (dd < dist[src][vv])         nhsbdbujcf(src, pq, dd, vv);     }   } }  inline void jvubjeotno() {   int a, b;   fin >> a >> b;   cout << fixed << setprecision(7) << " " << dist[a][b]; }
int main() {   fin.open("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_13_Usenix_RF_1.0_True_MCTS_Classic_True/sammyMaX/satyaki3794/A-small-practice.in");    int ret_val = 0;    cin.tie(0);    int t, x = 1;   fin >> t;   while (t--) {      fin >> n >> q;     for (int i = 1; i <= n; i++)       fin >> endurance[i] >> speed[i];      for (int i = 1; i <= n; i++) {       for (int j = 1; j <= n; j++) {         fin >> adj[i][j];         if (adj[i][j] == -1)           adj[i][j] = 1e15;       }     }      for (int k = 1; k <= n; k++)       for (int i = 1; i <= n; i++)         for (int j = 1; j <= n; j++)           adj[i][j] = min(adj[i][j], adj[i][k] + adj[k][j]);      for (int i = 1; i <= n; i++)       dijkstra(i);      cout << "Case #" << x++ << ":";     while (q--)       jvubjeotno();     cout << endl;   }   return ret_val; }
#include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <queue> #include <set> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <unordered_map> #include <utility> #include <vector>  using namespace std;
ifstream fin;  typedef long double ld; typedef pair<int, int> PII; typedef vector<int> VI; typedef long double LD; typedef vector<vector<int>> vvi;  long long get(long long base, long long p, long long mod = (1000000007LL)) {   long long ans = 1;   while (p) {     if (p & 1)       ans = (ans * base) % mod;     base = (base * base) % mod;     p /= 2;   }   return ans; }  long long solve(long long a, long long b) {   if (b == 0)     return a;   return solve(b, a % b); }  const int N = 102; int n, q; double endurance[N], speed[N], adj[N][N], dist[N][N];  void dijkstra(int src) {   for (int i = 1; i <= n; i++)     dist[src][i] = 1e15;   priority_queue<pair<double, int>> pq;   dist[src][src] = 0;   pq.push(pair<double, int>(0, src));   while (!pq.empty()) {      int v = pq.top().second;     double d = -pq.top().first;     pq.pop();     if (d > dist[src][v])       continue;      for (int vv = 1; vv <= n; vv++) {       if (adj[v][vv] > endurance[v])         continue;       double dd = d + adj[v][vv] / speed[v];       if (dd < dist[src][vv]) {         dist[src][vv] = dd;         pq.push(pair<double, int>(-dd, vv));       }     }   } }
int main() {   fin.open("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_13_Usenix_RF_1.0_True_MCTS_Classic_True/WCG/satyaki3794/A-small-practice.in");    cin.tie(0);    int t, x = 1;   fin >> t;   for (; t--;) {      fin >> n >> q;     for (int i = 1; i <= n; i++)       fin >> endurance[i] >> speed[i];      for (int i = 1; i <= n; i++) {       for (int j = 1; j <= n; j++) {         fin >> adj[i][j];         if (adj[i][j] == -1)           adj[i][j] = 1e15;       }     }      for (int k = 1; k <= n; k++)       for (int i = 1; i <= n; i++)         for (int j = 1; j <= n; j++)           adj[i][j] = min(adj[i][j], adj[i][k] + adj[k][j]);      for (int i = 1; i <= n; i++)       dijkstra(i);      cout << "Case #" << x++ << ":";     while (q--) {       int a, b;       fin >> a >> b;       cout << fixed << setprecision(7) << " " << dist[a][b];     }     cout << endl;   }    return 0; }
#include <bits/stdc++.h>  using namespace std;
typedef vector<int> vi; typedef long long ll; typedef long double ld; typedef pair<ll, ll> pii; typedef pair<pii, ll> para; const ll inf = 1e16 + 7; const ll maxN = 1e3 + 5;  int n, q, u, v, t; int horse[maxN], dist[maxN][maxN], speed[maxN]; ll pref[maxN]; ld dp[maxN];
int main() {   ios_base::sync_with_stdio(0);   cin >> t;   for (ll x = (1); x <= ((t)); ++x) {     cin >> n >> q;     for (ll i = (1); i <= ((n)); ++i)       cin >> horse[i] >> speed[i];     for (ll i = (1); i <= ((n)); ++i) {       for (ll j = (1); j <= ((n)); ++j) {         cin >> dist[i][j];       }     }     pref[1] = 0;     for (ll i = (2); i <= (n); ++i) {       pref[i] = pref[i - 1] + dist[i - 1][i];     }     cout << "Case #" << x << ": ";     for (ll _ = (0); _ <= ((q)-1); ++_) {       cin >> u >> v;       for (ll i = (1); i <= ((n)); ++i)         dp[i] = (ld)inf;       dp[1] = 0;       for (ll i = (1); i <= ((n)); ++i) {         for (ll j = (i + 1); j <= (n); ++j) {             if (pref[j] - pref[i] > horse[i])             break;           dp[j] = min(dp[j], dp[i] + (pref[j] - pref[i]) / (ld)speed[i]);         }       }       cout << fixed << setprecision(9) << dp[n];     }     cout << endl;   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <unordered_map> #include <utility> #include <vector>  using namespace std;
const int mod = 1000000007; const double eps = 1e-9; const int INF = 1000000000;  typedef pair<int, int> PII; typedef unsigned long long ull; typedef set<int> si; typedef long long LL;  typedef pair<LL, LL> pii;  const LL inf = 1e16 + 7; const LL maxN = 1e3 + 5;  int n, q, u, v, t; int horse[maxN], dist[maxN][maxN], speed[maxN]; LL pref[maxN]; long double dp[maxN];  inline void czdagdprtn(LL &i, LL &get) { cin >> dist[i][get]; }  inline void cgitffatoe(LL &i) {   for (LL get = (1); get <= ((n)); ++get) {     czdagdprtn(i, get);   } }
int main() {    cin >> t;   for (LL x = (1); x <= ((t)); ++x) {     cin >> n >> q;     LL i;     for (i = (1); i <= ((n)); ++i)       cin >> horse[i] >> speed[i];     for (LL i = (1); i <= ((n)); ++i)       cgitffatoe(i);     pref[1] = 0;     for (LL i = (2); i <= (n); ++i) {       pref[i] = pref[i - 1] + dist[i - 1][i];     }     cout << "Case #" << x << ": ";     for (LL _ = (0); _ <= ((q)-1); ++_) {       cin >> u >> v;       for (LL i = (1); i <= ((n)); ++i)         dp[i] = (long double)inf;       dp[1] = 0;       for (LL i = (1); i <= ((n)); ++i) {         for (LL get = (i + 1); get <= (n); ++get) {             if (pref[get] - pref[i] > horse[i])             break;           dp[get] = min(dp[get],                         dp[i] + (pref[get] - pref[i]) / (long double)speed[i]);         }       }       cout << fixed << setprecision(9) << dp[n];     }     cout << endl;   }   return 0; }
#include <bitset> #include <deque> #include <iomanip> #include <iostream> #include <queue> #include <set> #include <sstream> #include <stack>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>    using namespace std;
typedef vector<int> vi; typedef vector<vi> vvi; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<string> vs;  typedef long long LL;             typedef unsigned long long ULL;   typedef unsigned uint;  const double pi = acos(-1.0);   const double eps = 1e-11;       const int MAXI = 0x7fffffff; const int dx[] = {1, 0, -1, 0}; const int dy[] = {0, 1, 0, -1}; const char colors[] = {'R', 'O', 'Y', 'G', 'B', 'V'}; const char dz[] = "SENW"; struct debugger {   template <typename T> debugger &operator,(const T &v) {     cerr << v << " ";     return *this;   } } dbg;  void debugarr(int *arr, int n) {   cout << "[";   for (int i = 0; i < n; i++)     cout << arr[i] << " ";   cout << "]" << endl; }  double besttime[1010]; LL c[110], d[110], dist[110][110], a[110], b[110], dd[110]; long double best[110][110];
int main() {    freopen("input.txt", "r", stdin);   ;      long long n, k, l, m, t, s = 0, p, q;   int i, j;   cin >> t;   int ct = 1;   while (t--) {     scanf("%lld", &n);     ;     scanf("%lld", &q);     ;     for (i = 0; i < n; i++) {       scanf("%lld", &c[i]);       ;       scanf("%lld", &d[i]);       ;     }     for (i = 0; i < n; i++) {       for (j = 0; j < n; j++) {         scanf("%lld", &dist[i][j]);         ;       }     }     for (i = 0; i < q; i++) {       scanf("%lld", &a[i]);       ;       scanf("%lld", &b[i]);       ;     }     dd[0] = 0;     for (i = 1; i < n; i++) {       dd[i] = dd[i - 1] + dist[i - 1][i];     }     besttime[0] = 0.0;     long double r;     for (i = 1; i < n; i++) {       r = 1e18;       for (j = 0; j < i; j++) {         if (dd[i] - dd[j] <= c[j]) {           best[i][j] = besttime[j] + ((dd[i] - dd[j]) * 1.0) / d[j];         } else {           best[i][j] = 1e18;         }         r = min(r, best[i][j]);       }       besttime[i] = r;     }       printf("Case #%d: %0.6lf\n", ct++, besttime[n - 1]);   }   return (0); }
#include <iostream>  using namespace std;
int solve(int cc) {   long long n, q, e[105], s[105], d[105], temp;   cin >> n >> q;   for (int i = 0; i < n; i++) {     cin >> e[i] >> s[i];   }   for (int i = 0; i < n; i++) {     for (int j = 0; j < n; j++) {       if (j == i + 1) {         cin >> d[i];       } else {         cin >> temp;       }     }   }   cin >> temp >> temp;         long double dp[105];   for (int i = 0; i < n; i++) {     dp[i] = 1e11;   }   dp[n - 1] = 0;   for (int i = n - 2; i >= 0; i--) {     long double sss = 0;     long long ee = e[i];     long double tt = 0;     for (int j = i; j < n - 1; j++) {       ee -= d[j];       if (ee < 0) {         break;       }       tt += (1.0 * d[j]) / s[i];         if (j == i || tt + dp[j + 1] < sss) {         sss = tt + dp[j + 1];         }     }     dp[i] = sss;     }   cout << "Case #" << cc << ": " << fixed << dp[0] << endl;   return 1; }
int main() {   int t;   cin >> t;   cout.precision(7);   for (int i = 1; i <= t; i++) {     solve(i);   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> #pragma comment(linker, "/STACK:256000000")  using namespace std;
const double eps = 1e-9; const int mod = 1000000007; ifstream fin;  const int MAXN = 1005;  void get() {}  const int maxN = 110; const long long inf = 1000000000000000000LL;  int n, q; long long d[maxN][maxN]; long long e[maxN], s[maxN];  long long a[maxN], b[maxN];  double c[maxN];  double solve(int u, int v) {   --u;   --v;    for (int i = 0; i < n; ++i) {     c[i] = 1e50;   }   c[u] = 0.0;    for (int steps = 0; steps < 200; ++steps) {     {       int i = 0;       while (i < n) {         for (int j = 0; j < n; ++j) {           if (e[i] < d[i][j]) {             continue;           } else if (i == j || d[i][j] == inf) {             continue;           }           c[j] = min(c[j], c[i] + (double)(d[i][j]) / (double)(s[i]));         }         ++i;       }     }   }   return c[v]; }  inline void kkzsozoszf(int &i, int &j) { d[i][j] = inf; }  void solve(int test) {   fin >> n >> q;   {     int i = 0;     while (i < n) {       fin >> e[i] >> s[i];       ++i;     }   }    for (int i = 0; i < n; ++i) {     for (int j = 0; j < n; ++j) {       fin >> d[i][j];       if (d[i][j] == -1)         kkzsozoszf(i, j);     }   }    for (int i = 0; i < n; ++i) {     for (int j = 0; j < n; ++j) {       for (int r = 0; r < n; ++r) {         d[j][r] = min(d[j][r], d[j][i] + d[i][r]);       }     }   }    vector<double> res;   for (int i = 0; i < q; ++i) {     int u, v;     fin >> u >> v;     res.push_back(solve(u, v));   }    printf("Case #%d:", test);   for (int i = 0; i < q; ++i) {     printf(" %.10lf", res[i]);   }   printf("\n"); }
int main(int y, char *argv[]) {   fin.open("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_19_Usenix_RF_1.0_True_MCTS_Classic_True/kuzphi/sdya/A-small-practice.in");    int left_bound, right_bound;       int t;   fin >> t;   left_bound = 1, right_bound = t;   for (int i = 1; i <= t; ++i) {     if (i >= left_bound && i <= right_bound) {       solve(i);     } else {       get();     }     cerr << i << ": " << clock() << endl;   }    return 0; }
#include <bits/stdc++.h> using namespace std; 
typedef long long int lli;  int tc;  lli ctdy(string input) {   lli dp[18][2][10];   memset(dp, 0, sizeof(dp));   for (int i = '0'; i <= input[0]; i++) {     if (i != input[0]) {       dp[0][0][i - '0'] = 1;     } else {       dp[0][1][i - '0'] = 1;     }   };   for (int i = 0; i < input.size() - 1; i++) {     for (int j = 0; j <= 9; j++) {       for (int k = j; k <= 9; k++) {         dp[i + 1][0][k] += dp[i][0][j];       }     }     for (int j = 0; j <= 9; j++) {       if (dp[i][1][j] == 0)         continue;       for (int k = j; k <= input[i + 1] - '0'; k++) {         if (k != input[i + 1] - '0') {           dp[i + 1][0][k] += dp[i][1][j];         } else {           dp[i + 1][1][k] += dp[i][1][j];         }       }     }   }   lli sum = 0;   for (int i = 0; i <= 9; i++) {     sum += dp[input.size() - 1][0][i];     sum += dp[input.size() - 1][1][i];   }   return sum; }  
int main() {   cin >> tc;   for (int t = 1; t <= tc; t++) {     char c[30];     lli num;     string s;     scanf("%s", c);     sscanf(c, "%lld", &num);     s = c;     lli goal = ctdy(s);       lli ub = num, lb = 0, m;     while (ub - lb > 1) {       m = (ub + lb) / 2;       num = m;       sprintf(c, "%lld", num);       s = c;       if (ctdy(s) != goal) {         lb = m;       } else {         ub = m;       }     }      printf("Case #%d: %lld\n", t, ub);   } }
#include <bits/stdc++.h> using namespace std; 
typedef long long ll; typedef pair<int, int> pii; typedef pair<ll, ll> pll; typedef vector<int> vi; typedef vector<vi> vvi; typedef vector<ll> vll; typedef set<int> si; typedef map<int, int> mii;  const int N = 1002; int t, digits; ll n; bool dp[N][12]; string ans, nString;  bool biggerThanN(string x) {   if (((int)(x).size()) < ((int)(nString).size()))     return false;   if (((int)(x).size()) > ((int)(nString).size()))     return true;   return x > nString; }  string conv(ll x) {   stringstream ss;   ss << x;   return ss.str(); }  void solve(int i, int p, string curr) {   if (biggerThanN(curr)) {     dp[i][p] = true;     return;   }   if (i <= digits + 1 and curr != "") {     if (((int)(curr).size()) > ((int)(ans).size()))       ans = curr;     if (((int)(curr).size()) == ((int)(ans).size()) and curr > ans)       ans = curr;   }   if (i == digits + 1)     return;   if (dp[i][p])     return;    for (int j = (p); j <= (int)(9); ++j)     solve(i + 1, j, curr + char(j + '0')); }  
int main() {   freopen("B-small-attempt0.in", "r", stdin);   freopen("output.txt", "w", stdout);   scanf("%d", &t);   for (int testCase = (1); testCase <= (int)(t); ++testCase) {     cin >> n;     digits = (int)log10(n) + 1;     nString = conv(n);      ans = "";     memset(dp, 0, sizeof dp);     solve(1, 1, "");     printf("Case #%d: ", testCase);     cout << (ans) << endl;   } } 
