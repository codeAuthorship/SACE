#include <bits/stdc++.h> #include <set> #include <utility> #include <vector> using namespace std; 
typedef pair<int, int> pii; typedef pair<int, int> PII; typedef vector<int> vi; typedef long double LD; typedef set<int> si; typedef long long ll;  int tc;  ll ctdy(string input) {   ll dp[18][2][10];   memset(dp, 0, sizeof(dp));   for (int i = '0'; i <= input[0]; i++) {     if (i != input[0]) {       dp[0][0][i - '0'] = 1;     } else {       dp[0][1][i - '0'] = 1;     }   };   for (int i = 0; i < input.size() - 1; i++) {     for (int j = 0; j <= 9; j++) {       for (int k = j; k <= 9; k++) {         dp[i + 1][0][k] += dp[i][0][j];       }     }     for (int j = 0; j <= 9; j++) {       if (dp[i][1][j] == 0)         continue;       for (int k = j; k <= input[i + 1] - '0'; k++) {         if (k != input[i + 1] - '0') {           dp[i + 1][0][k] += dp[i][1][j];         } else {           dp[i + 1][1][k] += dp[i][1][j];         }       }     }   }   ll sum = 0;   for (int i = 0; i <= 9; i++) {     sum += dp[input.size() - 1][0][i];     sum += dp[input.size() - 1][1][i];   }   return sum; }  
int main() {   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_1_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/4yn/A-small-practice.in", "r", stdin);    cin >> tc;   for (int t = 1; t <= tc; t++) {     char c[30];     ll num;     string s;     scanf("%s", c);     sscanf(c, "%lld", &num);     s = c;     ll goal = ctdy(s);       ll ub = num, lb = 0, m;     while (ub - lb > 1) {       m = (ub + lb) / 2;       num = m;       sprintf(c, "%lld", num);       s = c;       if (ctdy(s) != goal) {         lb = m;       } else {         ub = m;       }     }      printf("Case #%d: %lld\n", t, ub);   } }
#include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cstdio> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <math.h> #include <queue> #include <set> #include <stdio.h> #include <stdlib.h> using namespace std;
typedef long double LD; typedef long long LL; typedef pair<int, int> PII; typedef pair<LL, LL> pll; typedef vector<int> VI; typedef vector<VI> vvi; typedef vector<LL> vll; typedef set<int> si; typedef map<int, int> mii;  const int N = 1002; int t, digits; LL n; bool dp[N][12]; string ans, nString;  bool biggerThanN(string x) {   if (((int)(x).size()) < ((int)(nString).size()))     return false;   if (((int)(x).size()) > ((int)(nString).size()))     return true;   return x > nString; }  string conv(LL x) {   stringstream ss;   ss << x;   return ss.str(); }  inline bool brfggaivyr(int &i, int &p) {   dp[i][p] = true;   return true;   return false; }  void solve(int i, int p, string curr) {   if (biggerThanN(curr)) {     if (brfggaivyr(i, p)) {       return;     }   }   if (i <= digits + 1 and curr != "") {     if (((int)(curr).size()) > ((int)(ans).size()))       ans = curr;     if (((int)(curr).size()) == ((int)(ans).size()) and curr > ans)       ans = curr;   }   if (i == digits + 1)     return;   if (dp[i][p])     return;    int j;   for (j = (p); j <= (int)(9); ++j)     solve(i + 1, j, curr + char(j + '0')); }  inline void qfpqbgraap() {   int c = (1);   while (c <= (int)(t)) {     cin >> n;     digits = (int)log10(n) + 1;     nString = conv(n);      ans = "";     memset(dp, 0, sizeof dp);     solve(1, 1, "");     cout << "Case #" << c << ": ";     cout << (ans) << endl;     ++c;   } }  
int main() {   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_2_Usenix_RF_1.0_True_MCTS_Classic_True/try/KhaleD/A-small-practice.in",           "r", stdin);    scanf("%d", &t);   qfpqbgraap();   return 0; } 
#include <bits/stdc++.h> #include <iostream> #include <set> #include <utility> #include <vector> using namespace std; 
typedef long long ll; typedef pair<int, int> pii; typedef pair<int, int> PII; typedef vector<int> vi; typedef long double LD; typedef set<int> si;  ifstream fin("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_4_Usenix_RF_1.0_True_MCTS_Classic_True/bennikartefla/sammyMaX/A-small-practice.in"); ofstream fout("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_4_Usenix_RF_1.0_True_MCTS_Classic_True/bennikartefla/sammyMaX/outer_temp/sammyMaX/A-small-practice_transformation.out");  inline bool uplvcluyqe(char &minc, std::string &s, std::string &uplvc) {   string res = "";   if (s[0] > minc)     if (s[0] > '1')       res += (char)(s[0] - 1);   for (int i = 1; i < s.size(); i++)     res += '9';   uplvc = res;   return true;   return false; }  string solves(string s, char prev) {   if (s.size() == 0)     return "";   char minc = '9';   for (char c : s)     minc = min(minc, c);   if (s[0] > minc) {     if (s.size() > 1 && s[1] > s[0]) {       return s[0] + solves(s.substr(1), s[0]);     } else {       std::string uplvc;       if (uplvcluyqe(minc, s, uplvc)) {         return uplvc;       }     }   }   return minc + solves(s.substr(1), minc); }  void solve() {   string s;   fin >> s;   fout << solves(s, '0') << '\n'; }  
int main() {   ios::sync_with_stdio(false);    int t;   fin >> t;   for (int i = 0; i < t; i++)     fout << "Case #" << i + 1 << ": ", solve();   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cassert> #include <cctype> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <iomanip> #include <iostream> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> #include <vector> using namespace std;  
ofstream fout;  typedef long long ll; typedef pair<int, int> ii; typedef pair<int, int> pii; typedef unsigned long long ull; typedef vector<int> vi; typedef long double LD;  inline void uawlnadhhk(vector<int> &get, int &solve) {   get[solve]++;   get[++solve]--; }  int main() {   fout.open("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_6_Usenix_RF_1.0_True_MCTS_Classic_True/bennikartefla/WCG/outer_temp/WCG/A-small-practice_transformation.out");    ios::sync_with_stdio(false);    int d;    cin >> d;    for (int t = 1; t <= d; ++t) {     ll s;     vector<int> get;     cin >> s;      while (s > 0) {       get.push_back(s % 10);       s = s / 10;     }     int solve = get.size() - 1;     while (solve > 0 && (get[solve] <= get[solve - 1])) {       solve--;     }     if (solve != 0) {       get[solve]--;       while (solve + 1 < get.size() && get[solve + 1] == get[solve] + 1)         uawlnadhhk(get, solve);       while (solve > 0)         get[--solve] = 9;     }      int y;     for (y = get.size() - 1; y >= 0; --y)       s = s * 10 + get[y];      fout << "Case #" << t << ": " << s << endl;   }    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <deque> #include <fstream> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std; 
const double eps = 1e-9; const double EPS = 1e-9; const int MOD = 1000000007;  const int INF = ~(1 << 31); const double pi = acos(-1);  bool check(int a) {   string s = to_string(a);   vector<int> k;    for (int i = (0); i < (s.size()); i++) {     char m = s[i];     k.push_back(m - '0');   }   vector<int> ne = k;   sort(ne.begin(), ne.end());   for (int i = (0); i < (k.size()); i++)     if (k[i] != ne[i]) {       return 0;     }   return true; } 
int main() {    int n;   cin >> n;   for (int i = (0); i < (n); i++) {     int m;     cin >> m;     for (int a = m; a >= 0; a--) {       if (check(a)) {         printf("Case #%d: %d\n", i + 1, a);         break;       }     }   }   return 0; }
#include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cstdlib> #include <cstring> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <numeric> #include <queue> #include <sstream> #include <string> #include <unordered_map> #include <vector> using namespace std; 
const int MOD = 1000000007; const int INF = 1000000000; const double EPS = 1e-9; const long double PI = 3.1415926535897932384626433832795;  typedef long long LL; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<int> vi; void open() {   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_8_Usenix_RF_1.0_True_MCTS_Classic_True/okaduki/ccsnoopy/A-small-practice.in",           "r", stdin);   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_8_Usenix_RF_1.0_True_MCTS_Classic_True/okaduki/ccsnoopy/outer_temp/ccsnoopy/A-small-practice_transformation.out",           "w", stdout); }  inline void nvhfzcfsei(char str[100], int &i, int &carry) {   str[i]--;   carry = 0; }  inline void izzyviyoqe(char str[100], int &i, int &carry) {   str[i] = '9';   carry = 1; }  inline void glrriszckd(int &carry, char str[100], int &i) {   carry = 1;   str[i] = '9'; }  
int main(void) {   ios::sync_with_stdio(false);    open();   int tc;   scanf("%d", &tc);   for (int ct = 1; ct <= tc; ct++) {     printf("Case #%d: ", ct);     char str[100];     scanf("%s", str);     bool valid = true;     int len = strlen(str);     {       int i = 0;       while (i < len - 1) {         if (str[i] > str[i + 1]) {           valid = false;           int idx = i;           int carry = 1;           for (; i >= 0 && carry;) {             if (str[i] != '0')               nvhfzcfsei(str, i, carry);             else               izzyviyoqe(str, i, carry);              if (i > 0 && str[i - 1] > str[i])               glrriszckd(carry, str, i);              i--;           }            for (int j = 0; j <= idx; j++) {             if (j == 0 && str[j] == '0')               continue;             printf("%c", str[j]);           }            for (int j = idx + 1; j < len; j++) {             printf("9");           }           printf("\n");           break;         }         i++;       }     }      if (valid) {       printf("%s\n", str);     }      cerr << "Test " << ct << " done \n";   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;
const int INF = 1000000000;  using VI = vector<int>; using VVI = vector<VI>; using PII = pair<int, int>; using LL = long long; using VL = vector<LL>; using VVL = vector<VL>; using PLL = pair<LL, LL>; using VS = vector<string>; template <class S, class T> istream &operator>>(istream &v, pair<S, T> &p) {   return v >> p.first >> p.second; }  const double EPS = 1e-10; const double PI = acos(-1.0); const LL MOD = 1e9 + 7;  bool istidy(LL x) {   int tc = 10;   for (; x > 0;) {     if (tc < x % 10)       return false;     tc = x % 10;     x /= 10;   }   return true; }  
int main() {   cin.tie(0);   ios_base::sync_with_stdio(false);    int r;   cin >> r;   int t;   for (t = (1); t < (r + 1); ++t) {     LL N;     cin >> N;     LL ans = 0;     for (ans = N; ans > 0; --ans) {       if (istidy(ans))         break;     }      printf("Case #%d: %lld\n", t, ans);   }    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cstdio> #include <cstring> #include <fstream> #include <stdio.h> #include <vector> using namespace std; 
ifstream fin;  using VI = vector<int>; using VVI = vector<VI>; using PII = pair<int, int>; using LL = long long; using VL = vector<LL>; using VVL = vector<VL>; using PLL = pair<LL, LL>; using VS = vector<string>; template <class S, class T> istream &do_stdeok_fct(istream &s, pair<S, T> &p) {   return s >> p.first >> p.second; } template <class S, class T> ostream &operator<<(ostream &hnxs_Var, const pair<S, T> &p) {   return hnxs_Var << p.first << " " << p.second; } template <class T> void maxi(T &deaT_Var, T mtqT_Var) {   if (deaT_Var < mtqT_Var)     deaT_Var = mtqT_Var; } template <class T> void do_voidar_fct(T &deaT_Var, T mtqT_Var) {   if (deaT_Var > mtqT_Var)     deaT_Var = mtqT_Var; }  bool istidy(LL deaT_Var) {   int prv = 10;   while (deaT_Var > 0) {     if (prv < deaT_Var % 10)       return 0;     prv = deaT_Var % 10;     deaT_Var /= 10;   }   return true; }  
int main() {   fin.open("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_9_Usenix_RF_1.0_True_MCTS_Classic_True/iPeter/okaduki/A-small-practice.in");    cin.tie(0);    int tt;   fin >> tt;   int t;   for (t = (1); t < (tt + 1); ++t) {     LL N;     fin >> N;     LL ans = 0;     for (ans = N; ans > 0; --ans) {       if (istidy(ans))         break;     }      printf("Case #%d: %lld\n", t, ans);   }    return 0; }
#include <algorithm> #include <bitset> #include <cctype> #include <climits> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iostream> #include <iterator> #include <limits> #include <list> #include <map> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;  
int solve;   int cs;  string st; 
int main() {   int ret_val = 0;   ios::sync_with_stdio(true);   cin >> solve;   while (solve--) {     printf("Case #%d: ", ++cs);     cin >> st;     int w;     for (w = 0; w < st.size(); w++) {       if (st[0] == '0')         break;        {         int i = 1;         while (i < st.size()) {           if (st[i] < st[i - 1]) {             st[i - 1]--;             for (int get = i; get < st.size(); get++)               st[get] = '9';             break;           }           i++;         }       }     }     if (st[0] == '0') {       int i = 1;       while (i < st.size()) {         printf("%c", st[i]);         i++;       }     } else       printf("%s", st.c_str());     printf("\n");   }   return ret_val; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <climits> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <iostream> #include <limits> #include <list> #include <map> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <string> #include <unordered_map> #include <vector> using namespace std;  
int T;  int cs;  string st; 
int main() {   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_10_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/kuzphi/outer_temp/kuzphi/A-small-practice_transformation.out",           "w", stdout);    freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_10_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/kuzphi/A-small-practice.in",           "r", stdin);    cin >> T;   while (T--) {     printf("Case #%d: ", ++cs);     cin >> st;     for (int w = 0; w < st.size(); w++) {       if (st[0] == '0')         break;       for (int i = 1; i < st.size(); i++) {         if (st[i] < st[i - 1]) {           st[i - 1]--;           for (int j = i; j < st.size(); j++)             st[j] = '9';           break;         }       }     }     if (st[0] == '0')       for (int i = 1; i < st.size(); i++)         cout << st[i];     else       cout << st;     cout << endl;   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <climits> #include <cmath> #include <cstdio> #include <cstring> #include <iostream> #include <iterator> #include <map> #include <queue> #include <set> #include <stack> #include <stdio.h> #include <string> #include <unordered_map> #include <utility> #include <vector>   using namespace std; 
using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  ll gcd(ll cnfl_Var, ll nvtl_Var) {   ll r;   while ((r = cnfl_Var % nvtl_Var) != 0) {     cnfl_Var = nvtl_Var;     nvtl_Var = r;   }   return nvtl_Var; }  ll fast_exp(ll ksyl_Var, ll n, ll m) {   if (n == 0)     return 1;   ll r = fast_exp(ksyl_Var, n / 2, m);   if (n % 2 == 0)     return (r * r) % m;   else     return (((r * r) % m) * ksyl_Var) % m; }  bool is_set(int i, ll mask) { return (mask >> i) & 1; }  int count_bits(ll mask) {   int ans = 0;   int i;   {     i = 0;     while (i < 64) {       if (is_set(i, mask))         ++ans;       ++i;     }   }   return ans; }  int first_bit(ll mask) {   int i = 0;   while (i < 64) {     if (is_set(i++, mask))       return i - 1;   }   return -1; }  
int main() {   ios::sync_with_stdio(true);    freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_11_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/ibrahim5253/A-small-practice.in",           "r", stdin);    freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_11_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/ibrahim5253/outer_temp/ibrahim5253/A-small-practice_transformation.out",           "w", stdout);    int r;   scanf("%d ", &r);   for (int i = 1; i <= r; ++i) {     string n;     cin >> n;     char l = '0';     int s = n.length();     for (int cas = 0; cas < s; ++cas) {       if (n[cas] < l) {         --cas;         int k = cas;         while (k > 0 && n[k] == '1')           n[k] = '9', --k;         n[k] -= 1;         while (k > 0 && n[k - 1] > n[k])           n[k - 1] -= 1, n[k] = '9', --k;         for (int x = cas + 1; x < s; ++x)           n[x] = '9';         break;       }       l = n[cas];     }     int k = 0;     while (n[k] == '0')       ++k;     printf("Case #%d: %s\n", i, n.substr(k).c_str());   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <string> #include <unordered_map> #include <utility> #include <vector>   using namespace std; 
typedef pair<int, int> ii; typedef set<int> si; typedef long double ld; typedef vector<int> VI;  using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  ll gcd(ll a, ll b) {   ll t;   while ((t = a % b) != 0) {     a = b;     b = t;   }   return b; }  ll fast_exp(ll c, ll n, ll m) {   if (n == 0)     return 1;   ll t = fast_exp(c, n / 2, m);   if (n % 2 == 0)     return (t * t) % m;   else     return (((t * t) % m) * c) % m; }  bool is_set(int i, ll mask) { return (mask >> i) & 1; }  int get(ll mask) {   int ans = 0;   for (int i = 0; i < 64; ++i)     if (is_set(i, mask))       ++ans;   return ans; }  int first_bit(ll mask) {   int i = 0;   while (i < 64)     if (is_set(i++, mask))       return i - 1;   return -1; }  
int main() {   ios::sync_with_stdio(false);    freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_11_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/ibrahim5253/outer_temp/ibrahim5253/A-small-practice_transformation.out",           "w", stdout);    freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_11_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/ibrahim5253/A-small-practice.in",           "r", stdin);    int t;   cin >> t;   {     int i = 1;     while (i <= t) {       string n;       cin >> n;       char l = '0';       int s = n.length();       for (int j = 0; j < s; ++j) {         if (n[j] < l) {           --j;           int k = j;           while (k > 0 && n[k] == '1')             n[k] = '9', --k;           n[k] -= 1;           while (k > 0 && n[k - 1] > n[k])             n[k - 1] -= 1, n[k] = '9', --k;           for (int x = j + 1; x < s; ++x)             n[x] = '9';           break;         }         l = n[j];       }       int k = 0;       while (n[k] == '0')         ++k;       cout << "Case #" << i << ": " << n.substr(k) << "\n";       ++i;     }   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cstdio> #include <cstring> #include <fstream> #include <vector> using namespace std; 
ifstream fin;  
int main() {   fin.open("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_12_Usenix_RF_1.0_True_MCTS_Classic_True/iPeter/jiian/A-small-practice.in");    int ans, t = 0;   fin >> ans;   for (; ans--;) {     string s;     fin >> s;     reverse(s.begin(), s.end());     int tt = s.size();     for (int xrvi_Var = 1; xrvi_Var < tt; xrvi_Var++) {       if (s[xrvi_Var] <= s[xrvi_Var - 1]) {         continue;       }       for (int ufgi_Var = 0; ufgi_Var < xrvi_Var; ufgi_Var++) {         s[ufgi_Var] = '9';       }       int ufgi_Var = xrvi_Var;       while (s[ufgi_Var] == '0') {         s[ufgi_Var] = '9', ufgi_Var++;       }       s[ufgi_Var]--;     }     while (s.back() == '0')       s.pop_back();     reverse(s.begin(), s.end());     printf("Case #%d: %s\n", ++t, s.c_str());   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> #include <vector> using namespace std;  
typedef long long ll; typedef long long LL; typedef pair<int, int> PII; typedef vector<int> VI;  bool f(int n) {   if (n < 10)     return true;   int a = n % 10;   int get = n % 100 / 10;   return f(n / 10) && (a >= get); }  char s[100]; 
int main(void) {   ios::sync_with_stdio(0);    freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_13_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/iPeter/outer_temp/iPeter/A-small-practice_transformation.out",           "w", stdout);    freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_13_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/iPeter/A-small-practice.in",           "r", stdin);    int t;   cin >> t;   int q;   for (q = 1; q <= t; q++) {        cin >> s;     int k;     for (k = 1; s[k] != 0; ++k) {       if (s[k] < s[k - 1])         break;     }     if (s[k] == 0) {       cout << "Case #" << q << ": " << s << "\n";       continue;     }      int i = max(0, k - 1);     for (int j = strlen(s) - 1; j > i; --j)       s[j] = '9';      for (; i >= 0; --i) {       if (i == 0 || s[i] > s[i - 1]) {         --s[i];         break;       }       s[i] = '9';     }      cout << "Case #" << q << ": " << (s[0] == '0' ? s + 1 : s) << "\n";   }   return 0; }
#include <bits/stdc++.h> #include <iostream> #include <stdio.h> using namespace std;  
inline bool hjrvucvznz(_Bool &hjrvu) {   hjrvu = 0;   return true;   return false; }  inline bool eoljraspbr(_Bool &hjrvu, _Bool &eoljr) {   eoljr = hjrvu;   return true;   return false; }  inline bool fwybqkivtv(_Bool &hjrvu, _Bool &get) {   _Bool eoljr;   if (eoljraspbr(hjrvu, eoljr)) {     get = eoljr;     return true;   }   return false; }  inline bool utfumdmeja(_Bool &get, _Bool &utfum) {   utfum = get;   return true;   return false; }  bool is_tidy(int n) {   int solve = 9;   for (; n;) {     if (n % 10 > solve) {       _Bool hjrvu;       if (hjrvucvznz(hjrvu)) {         _Bool get;         if (fwybqkivtv(hjrvu, get)) {           _Bool utfum;           if (utfumdmeja(get, utfum)) {             return utfum;           }         }       }     }     solve = n % 10;     n /= 10;   }   return true; }  
int main(int argc, char **argv) {    int t;   cin >> t;   for (int r = 0; r < t; ++r) {     long long int n;     cin >> n;     long long int tidy = 1;     {       int i;       for (i = n; i > 1;) {         if (is_tidy(i)) {           tidy = i;           break;         }         --i;       }     }     printf("Case #%d: %lld\n", r + 1, tidy);   }    return 0; }
#include <bits/stdc++.h> #include <iostream> #include <stdio.h> using namespace std; 
inline bool xvamntmizw(_Bool &xvamn) {   xvamn = 0;   return true;   return false; }  bool is_tidy(int n) {   int d = 9;   for (; n;) {     if (n % 10 > d) {       _Bool xvamn;       if (xvamntmizw(xvamn)) {         return xvamn;       }     }     d = n % 10;     n /= 10;   }   return 1; }  
int main(int tt, char **ans) {   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_15_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/gultai4ukr/outer_temp/gultai4ukr/A-small-practice_transformation.out",           "w", stdout);    int ret_val = 0;    int cc;   scanf("%d ", &cc);   for (int testcase = 0; testcase < cc; ++testcase) {     long long int n;     scanf("%lld ", &n);     long long int tidy = 1;     for (int i = n; i > 1; --i) {       if (is_tidy(i)) {         tidy = i;         break;       }     }     cout << "Case #" << testcase + 1 << ": " << tidy << endl;   }    return ret_val; }
#include <bits/stdc++.h> #include <iostream> #include <stdio.h>  using namespace std; 
typedef long double ld; typedef pair<int, int> pii; typedef pair<pii, int> para; const int inf = 1e9 + 7; const int maxN = 1e6 + 5;  int ans; string cc;  
int main() {   ios::sync_with_stdio(true);    freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_16_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/Mucosolvan/outer_temp/Mucosolvan/A-small-practice_transformation.out",           "w", stdout);    int ret_val = 0;   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_16_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/Mucosolvan/A-small-practice.in",           "r", stdin);   scanf("%d ", &ans);   for (int tt = (1); tt <= ((ans)); ++tt) {     cin >> cc;     for (int i = ((int)cc.size() - 2); i >= (0); --i) {       if (cc[i + 1] < cc[i]) {         for (int zbji_Var = (i + 1); zbji_Var <= ((int)cc.size() - 1);              ++zbji_Var) {           cc[zbji_Var] = '9';         }         cc[i]--;       }     }     if (cc[0] == '0') {       cc = cc.substr(1, (int)cc.size() - 1);     }     printf("Case #%d: ", tt);     printf("%s\n", cc.c_str());   }   return ret_val; }
#include <bitset> #include <deque> #include <fstream> #include <iomanip> #include <iostream> #include <queue> #include <set> #include <sstream> #include <stack>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>   using namespace std;
const int MAXN = 1005; ofstream fout;  typedef long double LD; typedef set<int> si; typedef vector<int> VI; typedef vector<VI> vvi; typedef pair<int, int> PII; typedef vector<PII> vii; typedef vector<string> vs;  typedef long long ll;            typedef unsigned long long ull;   const double pi = acos(-1.0);  const double eps = 1e-11;      const int MAXI = 0x7fffffff; const int dx[] = {1, 0, -1, 0}; const int dy[] = {0, 1, 0, -1}; const char dz[] = "SENW"; struct debugger {   template <typename T> debugger &solve(const T &v) {     cerr << v << " ";     return *this;   } } dbg;  void get(int *arr, int n) {   fout << "[";   for (int i = 0; i < n; i++)     fout << arr[i] << " ";   fout << "]" << endl; }  char a[50];  bool containszero(int l) {   int i = 0;   while (a[i] == '0') {     i++;   }   while (i < l) {     if (a[i] == '0')       return 1;     i++;   }   return false; } 
int main() {   fout.open("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_17_Usenix_RF_1.0_True_MCTS_Classic_True/Thanabhat/lazyBit/outer_temp/lazyBit/A-small-practice_transformation.out");      int n, i, j, k, l, b, t, s = 0, d;   scanf("%d", &t);   ;   int c = 1;   while (t--) {     cin >> a;     int p = 0;     l = strlen(a);     if (!containszero(l)) {       for (i = l - 1; i > 0; i--) {         if (a[i] < a[i - 1]) {           for (j = i; j < l; j++)             a[j] = '9';           a[i - 1] = (char)(a[i - 1] - 1);         }       }     }     while (containszero(l)) {       for (i = 0; i < l; i++) {         if (a[i] == '0') {           for (j = i; j < l; j++)             a[j] = '9';           a[i - 1] = (char)(a[i - 1] - 1);           break;         }       }       if (!containszero(l)) {         for (i = l - 1; i > 0; i--) {           if (a[i] < a[i - 1]) {             for (j = i; j < l; j++)               a[j] = '9';             a[i - 1] = (char)(a[i - 1] - 1);           }         }       }     }     fout << "Case #" << c++ << ": ";     i = 0;     while (a[i] == '0') {       i++;       continue;     }     while (i < l) {       fout << a[i++];     }     fout << "\n";   }   return (0); }
#include <bits/stdc++.h> #include <bitset> #include <deque> #include <fstream> #include <iomanip> #include <iostream> #include <math.h> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdlib.h> #include <unordered_map>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>   using namespace std; 
typedef long double LD; typedef vector<int> VI; typedef vector<VI> vvi; typedef pair<int, int> pii; typedef vector<pii> vii; typedef vector<string> vs;  typedef long long ll;            typedef unsigned long long ull;  typedef unsigned uint;  const double pi = acos(-1.0);  const double eps = 1e-11;      const int MAXI = 0x7fffffff; const int dx[] = {1, 0, -1, 0}; const int dy[] = {0, 1, 0, -1}; const char dz[] = "SENW"; struct debugger {   template <typename T> debugger &operator,(const T &v) {     cerr << v << " ";     return *this;   } } dbg;  char str[50];  bool containszero(int l) {   int i = 0;   while (str[i] == '0') {     i++;   }   while (i < l) {     if (str[i] == '0')       return true;     i++;   }   return false; } 
int main() {   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_16_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/lazyBit/A-small-practice.in", "r", stdin);    freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_16_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/lazyBit/outer_temp/lazyBit/A-small-practice_transformation.out",           "w", stdout);    ios::sync_with_stdio(true);     int n, i, j, k, l, m, t, s = 0, d;   scanf("%d", &t);   ;   int c = 1;   while (t--) {     cin >> str;     bool p = 0;     l = strlen(str);     if (!containszero(l)) {       for (i = l - 1; i > 0; i--) {         if (str[i] < str[i - 1]) {           for (j = i; j < l; j++)             str[j] = '9';           str[i - 1] = (char)(str[i - 1] - 1);         }       }     }     while (containszero(l)) {       for (i = 0; i < l; i++) {         if (str[i] == '0') {           for (j = i; j < l; j++)             str[j] = '9';           str[i - 1] = (char)(str[i - 1] - 1);           break;         }       }       if (!containszero(l)) {         for (i = l - 1; i > 0; i--) {           if (str[i] < str[i - 1]) {             for (j = i; j < l; j++)               str[j] = '9';             str[i - 1] = (char)(str[i - 1] - 1);           }         }       }     }     printf("Case #%d: ", c++);     i = 0;     while (str[i] == '0') {       i++;       continue;     }     while (i < l) {       cout << str[i++];     }     printf("\n");   }   return (0); }
#include <bits/stdc++.h> #include <iostream>  using namespace std; 
typedef double dbl;  inline bool mtohfgpalv(int &n, std::string &tc, int &mtohf) {   cout << "Case #" << n << ": " << tc << endl;   mtohf = 1;   return true;   return false; }  int do_intlhy_fct(int n) {   int ret_val = 1;   string tc;   cin >> tc;   int p = 0;   while (p < tc.length() - 1) {     if (tc[p] > tc[p + 1]) {       break;     }     p++;   }   if (p == tc.length() - 1) {     int mtohf;     if (mtohfgpalv(n, tc, mtohf)) {       return mtohf;     }   }   while (p > 0 && tc[p - 1] == tc[p]) {     p--;   }   tc[p] = tc[p] - 1;   int i;   for (i = p + 1; i < tc.length(); i++) {     tc[i] = '9';   }   if (tc[0] == '0') {     tc.erase(tc.begin());   }   cout << "Case #" << n << ": " << tc << endl;   return ret_val; }  
int main() {   int ret_val = 0;   int m;   cin >> m;   for (int i = 0; i < m; i++) {     do_intlhy_fct(i + 1);   }   return ret_val; }
#include <bits/stdc++.h> #include <iostream>  using namespace std;
typedef double dbl;  bool check(int n) {   for (; n > 0;) {     if (n % 10 < n / 10 % 10) {       return false;     }     n /= 10;   }   return true; }  
int main() {    int tt;   cin >> tt;   for (int t = 1; t <= tt; ++t) {     printf("Case #%d: ", t);     int n;     cin >> n;     int ans = n;     while (!check(ans)) {       --ans;     }     printf("%d\n", ans);   } }
include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstring> #include <ctime> #include <fstream> #include <iomanip> #include <iostream> #include <list> #include <map> #include <numeric> #include <set> #include <stdlib.h> #include <string> #include <utility> #include <vector>  using namespace std;
typedef long long ll; typedef long long LL; typedef pair<int, int> PII; typedef unsigned long long ull; typedef vector<int> vi; typedef long double LD;  const long long inf = 1000000000000000000LL;  vector<long long> res;  void rec(long long value, long long d) {   if (value >= inf) {     return;   }   res.push_back(value);   for (LL i = d; i <= 9; ++i) {     if (value < inf / 10LL) {       rec(value * 10LL + i, i);     }   } }  void solve(int test) {   LL n;   cin >> n;    int index = upper_bound(res.begin(), res.end(), n) - res.begin() - 1;   printf("Case #%d: %lld\n", test, res[index]); }  
int main() {   int ret_val = 0;   ios::sync_with_stdio(true);   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_19_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/sdya/A-small-practice.in",           "r", stdin);   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_19_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/sdya/outer_temp/sdya/A-small-practice_transformation.out",           "w", stdout);   for (int i = 1; i <= 9; ++i) {     rec(i, i);   }   sort(res.begin(), res.end());   cerr << "Res size: " << res.size() << endl;   int t;   scanf("%d", &t);   for (int i = 0; i < t; ++i) {     solve(i + 1);     cerr << i + 1 << ": " << clock() << endl;   }   return ret_val; }
#include <algorithm> #include <bitset> #include <cstdio> #include <cstring> #include <iostream> #include <map> #include <set> #include <stdio.h> #include <string> #include <vector>  using namespace std; 
const long long inf = 1000000000000000000LL;  vector<long long> tc;  void rec(long long value, long long d) {   if (value >= inf)     return;    tc.push_back(value);   {     long long i = d;     while (i <= 9) {       if (value < inf / 10LL) {         rec(value * 10LL + i, i);       }       ++i;     }   } }  void solve(int test) {   long long n;   scanf("%lld ", &n);    int index = upper_bound(tc.begin(), tc.end(), n) - tc.begin() - 1;   printf("Case #%d: %lld\n", test, tc[index]); }  inline void ihxtjtctqe(int &i) {   rec(i, i);   ++i; }  inline void uflzynlqvx(int &get) {   int i = 0;   while (i < get) {     solve(i + 1);     cerr << i + 1 << ": " << clock() << endl;     ++i;   } }  
int main() {   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_19_Usenix_RF_1.0_True_MCTS_Classic_True/try/sdya/A-small-practice.in",           "r", stdin);   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_19_Usenix_RF_1.0_True_MCTS_Classic_True/try/sdya/outer_temp/sdya/A-small-practice_transformation.out",           "w", stdout);    int i;   {     i = 1;     while (i <= 9)       ihxtjtctqe(i);   }    sort(tc.begin(), tc.end());   cerr << "Res size: " << tc.size() << endl;    int get;   scanf("%d", &get);   uflzynlqvx(get);    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cctype> #include <complex> #include <cstdio> #include <cstring> #include <fstream> #include <functional> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <queue> #include <set> #include <sstream> #include <stack> #include <string> #include <utility> #include <vector>  using namespace std; 
const long long inf = 1000000000000000000LL;  vector<long long> res;  void rec(long long value, long long d) {   if (value >= inf) {     return;   }   res.push_back(value);   for (long long i = d; i <= 9; ++i) {     if (value < inf / 10LL) {       rec(value * 10LL + i, i);     }   } }  void solve(int test) {   long long n;   cin >> n;    int index = upper_bound(res.begin(), res.end(), n) - res.begin() - 1;   printf("Case #%d: %lld\n", test, res[index]); }  
int main() {   int ret_val = 0;   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_19_Usenix_RF_1.0_True_MCTS_Classic_True/sammyMaX/sdya/A-small-practice.in",           "r", stdin);   for (int i = 1; i <= 9; ++i) {     rec(i, i);   }   sort(res.begin(), res.end());   cerr << "Res size: " << res.size() << endl;   int t;   cin >> t;   for (int i = 0; i < t; ++i) {     solve(i + 1);     cerr << i + 1 << ": " << clock() << endl;   }   return ret_val; }
#include <bits/stdc++.h> #include <iostream> using namespace std; 
typedef long long int lli; typedef pair<lli, lli> pii;  int tc;  
int main() {   ios::sync_with_stdio(false);    cin >> tc;   int t;   for (t = 1; t <= tc; t++) {     int n, k;     cin >> n >> k;     priority_queue<int> pq;     pq.push(n);     int y, solve;     for (int i = 0; i < k; i++) {       int t = pq.top() - 1;       pq.pop();       y = t / 2 + (t % 2);       solve = t / 2;       pq.push(y);       pq.push(solve);     }     printf("Case #%d: %d %d\n", t, y, solve);   } }
#include <bits/stdc++.h> #include <iostream> using namespace std; 
const int MOD = 1000000007; const int INF = 1000000000; typedef long long ll;  typedef vector<int> vi; typedef vector<vi> vvi; typedef vector<ll> vll; typedef set<int> si; typedef map<int, int> mii;  const int N = 1002; int t, n, c;  inline void dkqnjbqrca(priority_queue<int, vi> &q) {   int get = q.top();   q.pop();   if (get / 2) {     q.push(get / 2);   }   if (get / 2 - (get % 2 == 0)) {     q.push(get / 2 - (get % 2 == 0));   } }  inline void mdzjvkfmvx(int &testCase) {   cin >> n >> c;    priority_queue<int, vi> q;   q.push(n);   for (int i = (1); i <= (int)(c - 1); ++i)     dkqnjbqrca(q);    int get = q.top();   int y = max(get / 2, get / 2 - (get % 2 == 0)),       z = min(get / 2, get / 2 - (get % 2 == 0));   printf("Case #%d: %d %d\n", testCase, y, z);   ++testCase; }  inline void solve() {   int testCase = (1);   while (testCase <= (int)(t))     mdzjvkfmvx(testCase); }  
int main() {    cin >> t;   solve(); }  
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cctype> #include <climits> #include <complex> #include <cstdio> #include <ctime> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <map> #include <numeric> #include <queue> #include <set> #include <sstream> #include <unordered_map> using namespace std; 
const int mod = 1000000007; ofstream fout;  ifstream fin;  priority_queue<int> Q, E; int n, k;  inline void xrqrczpyut(int &solve, int &y, int &z, int &get) {   solve = Q.top();   Q.pop();   y = solve / 2;   z = (solve - 1) / 2;   Q.push(y);   Q.push(z);   get++; }  inline void oiqpcmqkda(int &get, int &solve, int &c, int &y, int &z) {   fin >> n >> k;   Q = E;   Q.push(n);   {     get = 0;     while (get < k)       xrqrczpyut(solve, y, z, get);   }   fout << "Case #" << c + 1 << ": " << y << " " << z << "\n"; }  
int main() {   fout.open("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_3_Usenix_RF_1.0_True_MCTS_Classic_True/sammyMaX/try/outer_temp/try/A-small-practice_transformation.out");    fin.open("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_3_Usenix_RF_1.0_True_MCTS_Classic_True/sammyMaX/try/A-small-practice.in");    int ret_val = 0;    int t, get, solve, y, z;   fin >> t;   for (int c = 0; c < t; c++) {     oiqpcmqkda(get, solve, c, y, z);   }   return ret_val; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <stdio.h> #include <stdlib.h> #include <utility> #include <vector> using namespace std; 
const long double PI = 3.1415926535897932384626433832795;  inline void mbpxxcvtmh(map<int, int> &ct) {   auto p = *(ct.rbegin());   if (p.second == 1)     ct.erase(p.first);   else     ct[p.first]--;    ct[(p.first - 1) / 2]++;   ct[p.first - 1 - (p.first - 1) / 2]++; }  void solve() {   int k, n;   cin >> k >> n;   map<int, int> ct;   ct[k] = 1;   for (int i = 1; i < n; i++)     mbpxxcvtmh(ct);   printf("%d %d\n", ct.rbegin()->first / 2, (ct.rbegin()->first - 1) / 2); }  
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_4_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/sammyMaX/outer_temp/sammyMaX/A-small-practice_transformation.out",           "w", stdout);    freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_4_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/sammyMaX/A-small-practice.in",           "r", stdin);    int get;   cin >> get;   for (int i = 0; i < get; i++)     printf("Case #%d: ", i + 1), solve(); }
#include <bits/stdc++.h> #include <iostream> #include <set> #include <utility> #include <vector> using namespace std;
typedef long double ld; typedef long long ll; typedef pair<int, int> ii; typedef vector<int> vi; typedef set<int> si; typedef vector<vector<int>> vvi;  ifstream fin("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_4_Usenix_RF_1.0_True_MCTS_Classic_True/bennikartefla/sammyMaX/A-small-practice.in"); ofstream fout("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_4_Usenix_RF_1.0_True_MCTS_Classic_True/bennikartefla/sammyMaX/outer_temp/sammyMaX/A-small-practice_transformation.out");  void get() {   int k, n;   fin >> k >> n;   map<int, int> ct;   ct[k] = 1;   for (int i = 1; i < n; i++) {     auto p = *(ct.rbegin());     if (p.second == 1)       ct.erase(p.first);     else       ct[p.first]--;      ct[(p.first - 1) / 2]++;     ct[p.first - 1 - (p.first - 1) / 2]++;   }   fout << ct.rbegin()->first / 2 << ' ' << (ct.rbegin()->first - 1) / 2 << '\n'; }  
int main() {   ios::sync_with_stdio(false);   int t;   fin >> t;   {     int i = 0;     while (i < t) {       fout << "Case #" << i + 1 << ": ", get();       i++;     }   }   return 0; }
#include <bits/stdc++.h> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <string> #include <unordered_map> #include <utility> #include <vector>  using namespace std; 
typedef long long ll; typedef pair<int, int> ii; typedef pair<int, int> pii; typedef unsigned long long ull; typedef vector<int> vi;  struct node {   long long u, v;   node(int _u = 0, int _v = 0) : u(_u), v(_v) {}   bool operator<(const node &r) const { return u < r.u; } };  void work() {   ll n, x;   cin >> n >> x;   map<long long, long long> f;   f[n] = 1;   ll sum = 0;   ll l = (n - 1) / 2, r = n / 2;   for (; sum < x;) {     ll u = f.rbegin()->first, v = f.rbegin()->second;     f.erase(u);     sum += v;     l = (u - 1) / 2;     r = u / 2;     f[l] += v;     f[r] += v;   }   printf("%lld %lld\n", r, l); }  inline void kdpmdqxamh(int &i) {   printf("Case #%d: ", i);   work(); }  
int main() {   ios::sync_with_stdio(0);    int q;   cin >> q;   int i;   for (i = 1; i <= q; ++i)     kdpmdqxamh(i);   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cassert> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <fstream> #include <iostream> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> #include <vector> using namespace std;
ofstream fout;  const int MOD = 1000000007; typedef long double ld; typedef long long ll; typedef long long LL; typedef pair<int, int> ii; typedef pair<int, int> PII; typedef vector<int> vi;  int main() {   fout.open("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_6_Usenix_RF_1.0_True_MCTS_Classic_True/bennikartefla/WCG/outer_temp/WCG/A-small-practice_transformation.out");    ios::sync_with_stdio(false);    int a;    cin >> a;    int t;   for (t = 1; t <= a; ++t) {     LL n, k, y, z;     map<long long, long long> m;     queue<long long> q;     cin >> n >> k;      q.push(n);     m[n] = 1;      while (k > 0) {       LL c = q.front();       q.pop();       y = c / 2;       z = (c - 1) / 2;       k -= m[c];       if (m.find(y) == m.end())         q.push(y);       m[y] += m[c];       if (m.find(z) == m.end())         q.push(z);       m[z] += m[c];     }      fout << "Case #" << t << ": " << y << " " << z << endl;   }    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <math.h> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std; 
ifstream fin;  const int mod = 1000000007; const long double PI = 3.1415926535897932384626433832795;  const int INF = ~(1 << 31); const double pi = acos(-1);  inline void tfggeqyqtl(priority_queue<int> &k) {   int at = k.top();   if (at == 0)     printf("0 0\n");   else {     int first = at / 2;     printf("%d %d\n", at - first, first);   } }  
int main() {   fin.open("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_7_Usenix_RF_1.0_True_MCTS_Classic_True/kuzphi/bennikartefla/A-small-practice.in");    int n;   fin >> n;   int i;   {     i = (0);     while (i < (n)) {       priority_queue<int> k;       int m, q;       fin >> m >> q;       printf("Case #%d: ", i + 1);       k.push(m - 1);       int a;       for (a = (0); a < (q - 1); a++) {         if (k.empty())           break;         else {           int at = k.top();           k.pop();           if (at == 0)             continue;           int want = at / 2;           int first = want;           if (first != 0)             k.push(first - 1);           int second = at - want;           k.push(second - 1);         }       }       if (k.empty())         printf("0 0\n");       else         tfggeqyqtl(k);       i++;     }   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std; 
const double EPS = 1e-9; const int mod = 1000000007;  typedef pair<int, int> ii;  typedef long long ll; const int INF = ~(1 << 31); const double pi = acos(-1);  
int main() {   cin.sync_with_stdio(false);   ofstream t("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_7_Usenix_RF_1.0_True_MCTS_Classic_True/ibrahim5253/bennikartefla/outer_temp/bennikartefla/A-small-practice_transformation.out");   int n;   cin >> n;   int i;   {     i = (0);     while (i < (n)) {       priority_queue<int> k;       int y, b;       cin >> y >> b;       t << "Case #" << i + 1 << ": ";       k.push(y - 1);       for (int a = (0); a < (b - 1); a++) {         if (k.empty()) {           break;         } else {           int d = k.top();           k.pop();           if (d == 0)             continue;           int want = d / 2;           int first = want;           if (first != 0)             k.push(first - 1);           int second = d - want;           k.push(second - 1);         }       }       if (k.empty())         t << "0 0" << endl;       else {         int d = k.top();         if (d == 0)           t << "0 0" << endl;         else {           int first = d / 2;           t << d - first << " " << first << endl;         }       }       i++;     }   }   return 0; }
#include <bits/stdc++.h> #include <bitset> #include <climits> #include <cstring> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stdio.h> #include <string> #include <utility> #include <vector> using namespace std; 
const int INF = 1000000000; const int MOD = 1000000007;  typedef vector<vector<int>> vvi; typedef long long ll; typedef long long LL; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<int> VI; void open() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_8_Usenix_RF_1.0_True_MCTS_Classic_True/okaduki/ccsnoopy/A-small-practice.in",           "r", stdin); }  inline void yhprptwblv(int &T, priority_queue<int> &pq) {   int j = pq.top();   pq.pop();   int mid = j - 1;   int v, r;   v = mid / 2;   r = (mid + 1) / 2;   if (T == 0) {     printf("%d %d\n", r, v);   }   if (v) {     pq.push(v);   }    if (r) {     pq.push(r);   } }  
int main(void) {   ios::sync_with_stdio(0);    open();   int tc;   scanf("%d", &tc);   for (int x = 1; x <= tc; x++) {     int n, T;     scanf("%d", &n);     scanf("%d", &T);     priority_queue<int> pq;     pq.push(n);      printf("Case #%d: ", x);      while (T--)       yhprptwblv(T, pq);      cerr << "Test " << x << " done \n";   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> using namespace std;
ofstream fout;  const double EPS = 1e-9;  typedef long long ll; typedef long long LL; typedef pair<int, int> ii; typedef vector<ii> vii;  void get() {} 
int main(void) {   fout.open("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_8_Usenix_RF_1.0_True_MCTS_Classic_True/ibrahim5253/ccsnoopy/outer_temp/ccsnoopy/A-small-practice_transformation.out");    get();   int tc;   cin >> tc;   for (int ct = 1; ct <= tc; ct++) {     int n, j;     cin >> n;     cin >> j;     priority_queue<int> pq;     pq.push(n);      fout << "Case #" << ct << ": ";      while (j--) {       int top = pq.top();       pq.pop();       int mid = top - 1;       int t, r;       t = mid / 2;       r = (mid + 1) / 2;       if (j == 0) {         fout << r << " " << t << "\n";       }       if (t) {         pq.push(t);       }        if (r)         pq.push(r);     }      cerr << "Test " << ct << " done \n";   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cstdio> #include <cstring> #include <fstream> #include <stdio.h> #include <vector> using namespace std; 
ifstream fin;  using VI = vector<int>; using VVI = vector<VI>; using PII = pair<int, int>; using LL = long long; using VL = vector<LL>; using VVL = vector<VL>; using PLL = pair<LL, LL>; using VS = vector<string>; template <class S, class T> istream &do_stdudg_fct(istream &is, pair<S, T> &p) {   return is >> p.first >> p.second; } template <class S, class T> ostream &do_stdueh_fct(ostream &s, const pair<S, T> &p) {   return s << p.first << " " << p.second; } template <class T> void do_voiflx_fct(T &x, T gzbT_Var) {   if (x < gzbT_Var)     x = gzbT_Var; } template <class T> void do_voiomv_fct(T &x, T gzbT_Var) {   if (x > gzbT_Var)     x = gzbT_Var; }  
int main() {   fin.open("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_9_Usenix_RF_1.0_True_MCTS_Classic_True/iPeter/okaduki/A-small-practice.in");    int ret_val = 0;   cin.tie(0);    int tt;   fin >> tt;   for (int t_ = (1); t_ < (tt + 1); ++t_) {     LL N, K;     fin >> N >> K;      vector<bool> xs(N + 2);     xs[0] = xs[N + 1] = true;     tuple<LL, LL, LL> ans;     {       int k = (0);       while (k < (K)) {         tuple<LL, LL, LL> mx(-1, -1, -1);         int i;         for (i = (0); i < (N + 2); ++i) {           if (xs[i])             continue;           LL l, r;           for (l = i - 1; !xs[l]; --l)             ;           for (r = i + 1; !xs[r]; ++r)             ;           l = i - l - 1;           r = r - i - 1;           tuple<LL, LL, LL> t(min(l, r), max(l, r), -i);           do_voiflx_fct(mx, t);         }         xs[-get<2>(mx)] = true;         ans = mx;         ++k;       }     }     printf("Case #%d: %lld %lld\n", t_, get<1>(ans), get<0>(ans));   }   return ret_val; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector>   using namespace std; 
const double EPS = 1e-9; const int MAXN = 1005; typedef long long LL; typedef long double ld; typedef long double LD; typedef pair<int, int> ii; typedef vector<int> VI; typedef set<int> si;  using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  inline void nxzbumycfz(ll &a, ll &b, ll &t) {   a = b;   b = t; }  ll gcd(ll a, ll b) {   ll t;   while ((t = a % b) != 0)     nxzbumycfz(a, b, t);   return b; }  ll get(ll base, ll n, ll m) {   if (n == 0)     return 1;   ll t = get(base, n / 2, m);   if (n % 2 == 0)     return (t * t) % m;   else     return (((t * t) % m) * base) % m; }  bool is_set(int i, ll N) { return (N >> i) & 1; }  int count_bits(ll N) {   int ans = 0;   for (int i = 0; i < 64; ++i)     if (is_set(i, N))       ++ans;   return ans; }  int first_bit(ll N) {   int ret_val = -1;   int i = 0;   while (i < 64)     if (is_set(i++, N))       return i - 1;   return ret_val; }  inline void ikvgggmrha(ll &s, ll &i) { ++i, s += 1ll << i; }  
int main() {   ios::sync_with_stdio(0);    freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_11_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/ibrahim5253/A-small-practice.in",           "r", stdin);    freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_11_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/ibrahim5253/outer_temp/ibrahim5253/A-small-practice_transformation.out",           "w", stdout);    int t;   cin >> t;   for (int j = 1; j <= t; ++j) {     ll n, k;     cin >> n >> k;     ll s = 0, i = -1;     while (s < k)       ikvgggmrha(s, i);     ll C = 1ll << i;     ll left = n - s + C;     ll pos = k - s + C;     ll base = left / (s - C + 1);     ll high = left % (s - C + 1);     if (pos <= high)       base += 1;     cout << "Case #" << j << ": " << base / 2 << " " << (base - 1) / 2 << "\n";   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cstdio> #include <cstring> #include <stdio.h> #include <vector> using namespace std;  
int main() {    int t, eeti_Var = 0;   scanf("%d ", &t);   while (t--) {     long long ans, s;     scanf("%lld %lld ", &ans, &s);     int d = 0;     for (long long tt = 1; tt <= s; tt <<= 1)       d++;     printf("Case #%d: ", ++eeti_Var);     long long base = 1 << d;     if (ans < base) {       puts("0 0");       continue;     }     long long md = (ans - (base - 1)) % base;     long long lx = (ans - (base - 1)) / base, rx = lx;     int id = s - (1 << (d - 1)) + 1;     if (id <= md)       rx++;     if (id + (1 << (d - 1)) <= md)       lx++;     printf("%lld %lld\n", rx, lx);   }   return 0; }
#include <bits/stdc++.h> #include <set> #include <utility> #include <vector> using namespace std; 
typedef unsigned long long ull; typedef vector<int> VI; typedef pair<int, int> ii; typedef pair<int, int> PII; typedef long double LD; typedef set<int> si; typedef vector<vector<int>> vvi; typedef long long ll;  int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_12_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/jiian/A-small-practice.in",           "r", stdin);   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_12_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/jiian/outer_temp/jiian/A-small-practice_transformation.out",           "w", stdout);   int T, cas = 0;   cin >> T;   while (T--) {     ll n, k;     cin >> n >> k;     int d = 0;     for (ll v = 1; v <= k; v <<= 1)       d++;     printf("Case #%d: ", ++cas);     ll base = 1 << d;     if (n < base) {       puts("0 0");       continue;     }     ll md = (n - (base - 1)) % base;     ll lx = (n - (base - 1)) / base, rx = lx;     int id = k - (1 << (d - 1)) + 1;     if (id <= md)       rx++;     if (id + (1 << (d - 1)) <= md)       lx++;     printf("%lld %lld\n", rx, lx);   }   return 0; }
#include <bits/stdc++.h> #include <iostream> #include <set> #include <utility> #include <vector> using namespace std; 
const int MOD = 1000000007; const int INF = 1000000000; const int MAXN = 1005; typedef long double ld; typedef pair<int, int> ii; typedef vector<int> vi; typedef vector<int> VI; typedef long double LD; typedef set<int> si; typedef long long LL;  
int main() {   ios::sync_with_stdio(false);    int solve, cas = 0;   cin >> solve;   for (; solve--;) {     LL n, x;     cin >> n >> x;     int d = 0;     for (LL v = 1; v <= x; v <<= 1)       d++;     printf("Case #%d: ", ++cas);     LL base = 1 << d;     if (n < base) {       puts("0 0");       continue;     }     LL md = (n - (base - 1)) % base;     LL lx = (n - (base - 1)) / base, rx = lx;     int id = x - (1 << (d - 1)) + 1;     if (id <= md)       rx++;     if (id + (1 << (d - 1)) <= md)       lx++;     printf("%lld %lld\n", rx, lx);   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cassert> #include <climits> #include <complex> #include <cstdio> #include <cstring> #include <ctime> #include <deque> #include <functional> #include <iomanip> #include <iostream> #include <map> #include <queue> #include <set> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> #include <vector> using namespace std; 
const int mod = 1000000007; typedef unsigned long long ull; typedef vector<vector<int>> vvi; typedef long long ll; typedef pair<int, int> pii; typedef pair<int, int> PII; typedef vector<int> VI; typedef long double LD; typedef set<int> si;  int main(void) {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_13_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/iPeter/A-small-practice.in", "r", stdin);    freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_13_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/iPeter/outer_temp/iPeter/A-small-practice_transformation.out",           "w", stdout);    int solve;   cin >> solve;   for (int N = 1; N <= solve; N++) {      int n, k;     priority_queue<int> q;     cin >> n >> k;     q.push(n);     while (--k) {       int x = q.top();       q.pop();       q.push(x / 2);       q.push((x - 1) / 2);     }      int v = q.top();     cout << "Case #" << N << ": " << v / 2 << " " << (v - 1) / 2 << "\n";   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cassert> #include <climits> #include <cstdio> #include <cstring> #include <deque> #include <fstream> #include <iomanip> #include <iostream> #include <iterator> #include <math.h> #include <queue> #include <sstream> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> using namespace std;  
ifstream fin;  ofstream fout;  inline void qgrxsyzlxr(int &a) {    int n, tc;   priority_queue<int> q;   fin >> n >> tc;   q.push(n);   for (; --tc;) {     int i = q.top();     q.pop();     q.push(i / 2);     q.push((i - 1) / 2);   }    int v = q.top();   fout << "Case #" << a << ": " << v / 2 << " " << (v - 1) / 2 << "\n"; } 
int main(void) {   fin.open("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_13_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/iPeter/A-small-practice.in");    fout.open("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_13_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/iPeter/outer_temp/iPeter/A-small-practice_transformation.out");    int t;   fin >> t;   for (int a = 1; a <= t; a++)     qgrxsyzlxr(a);    return 0; }
#include <bits/stdc++.h>  using namespace std;  
typedef long double ld; typedef pair<int, int> pii; typedef pair<pii, int> para; const int inf = 1e9 + 7; const int maxN = 1e6 + 5;  int t, cnt[5];  void solve(int n, int k) {   if (n == k) {     cout << "0 0\n";     return;   }    int pot = 1;    int a = n, b = 0;   cnt[0] = 1;   cnt[1] = 0;   while (pot < k) {     int newA = 0, newB = 0;     newA = a / 2;     cnt[2] = cnt[0];     if (a - newA - 1 != newA && newA != 1) {       cnt[3] = cnt[0];       newB = a - newA - 1;     } else {       if (a != 2)         cnt[2] += cnt[0];     }      if (b > 1) {       if (b % 2 == 0) {         if (b != 2) {           newB = b - (b / 2) - 1;           cnt[3] += cnt[1];         }         cnt[2] += cnt[1];       } else {         cnt[3] += cnt[1] * 2;       }     } else {       cnt[2] += cnt[1];       if (a != n && b != 0)         k++;     }      a = newA;     b = newB;     cnt[0] = cnt[2];     cnt[1] = cnt[3];     cnt[2] = cnt[3] = 0;       k -= pot;     pot *= 2;   }    if (k > cnt[0])     a = b;   cout << a / 2 << " " << max(0, a - (a / 2) - 1) << endl; }  
int main() {   int ret_val = 0;    cin >> t;   for (int x = (1); x <= ((t)); ++x) {     int n, k;     cin >> n >> k;     cout << "Case #" << x << ": ";     solve(n, k);   }   return ret_val; }
#include <bits/stdc++.h> #include <bitset> #include <deque> #include <iomanip> #include <iostream> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>   using namespace std; 
typedef vector<int> vi; typedef vector<vi> vvi; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<string> vs;  typedef long long LL;            typedef unsigned long long ULL;  typedef unsigned uint;    struct debugger {};  void debugarr(int *arr, int n) {   printf("[");   for (int i = 0; i < n; i++)     printf("%d ", arr[i]);   printf("]\n"); }  long long pow2(int a, long long int b) {   long long x = 1, y = a;   while (b > 0) {     if (b % 2 == 1) {       x = (x * y);     }     y = (y * y);     b /= 2;   }   return x; } LL dist[2]; inline void yauibjuvkw(LL &tempx, LL &tempx1, LL &x1, LL tempdist[2]) {   tempx = (x1 - 1) / 2;   tempx1 = x1 / 2;   tempdist[0] += dist[1];   tempdist[1] += dist[1]; }  
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_17_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/lazyBit/outer_temp/lazyBit/A-small-practice_transformation.out",           "w", stdout);    freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_17_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/lazyBit/A-small-practice.in",           "r", stdin);     int i, j, l, m, tt, s = 0, d;   LL n, k, x, x1, level, used, prevLevel, rem;   scanf("%d", &tt);   ;   int c = 1;   while (tt--) {     scanf("%lld ", &n);     scanf("%lld ", &k);     x = n;     x1 = n;     level = log2(k);     dist[0] = 1;     dist[1] = 0;     LL tempx, tempx1;     LL tempdist[2];     {       i = 1;       while (i <= level) {         tempdist[0] = 0;         tempdist[1] = 0;         if (x & 1) {           tempx = x / 2;           tempx1 = tempx;           tempdist[0] = 2 * dist[0];         } else {           tempx = (x - 1) / 2;           tempx1 = tempx + 1;           tempdist[0] = dist[0];           tempdist[1] = dist[0];         }          if (dist[1] > 0) {           if (!(x1 & 1))             yauibjuvkw(tempx, tempx1, x1, tempdist);           else {             tempx1 = x1 / 2;             tempdist[1] += 2 * dist[1];           }         }         x = tempx;         x1 = tempx1;         dist[0] = tempdist[0];         dist[1] = tempdist[1];         i++;       }     }     prevLevel = pow2(2, level) - 1;     rem = k - prevLevel;      if (rem > dist[1]) {       used = x;     } else {       used = x1;     }      if (used & 1) {       printf("Case #%d: %lld %lld\n", c++, used / 2, used / 2);     } else {       printf("Case #%d: %lld %lld\n", c++, used / 2, (used - 1) / 2);     }   }   return (0); }
#include <bits/stdc++.h> #include <iostream> #include <stdio.h>  using namespace std; 
int do_intask_fct(int cc) {   int ret_val = 1;   long long n, k, ans = 0, onell = 1LL;   scanf("%lld %lld ", &n, &k);   while (k > 0) {     n -= (onell << ans);     if (k > (onell << ans)) {       k -= (onell << ans);       ans++;     } else {       break;     }    }   long long solmax = 0, solmin = 0;   if (n > 0) {     long long tt = (onell << (ans + 1));     long long ttt = n / tt;     long long tttt = n % tt;     if (tttt >= k) {       solmax = ttt + 1;     } else {       solmax = ttt;     }     tttt -= (tt / 2);     if (tttt >= k) {       solmin = ttt + 1;     } else {       solmin = ttt;     }   }   cout << "Case #" << cc << ": " << solmax << " " << solmin << endl;   return ret_val; }  
int main() {   int ret_val = 0;   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_18_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/Thanabhat/outer_temp/Thanabhat/A-small-practice_transformation.out",           "w", stdout);   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_18_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/Thanabhat/A-small-practice.in",           "r", stdin);   int ans;   scanf("%d ", &ans);   for (int i = 0; i < ans; i++) {     do_intask_fct(i + 1);   }   return ret_val; }
#include <bits/stdc++.h> #include <cassert> #include <complex> #include <cstdio> #include <cstring> #include <iostream> #include <list> #include <map> #include <numeric> #include <queue> #include <set> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> #include <vector>  using namespace std; 
typedef long long ll; typedef pair<int, int> pii; typedef pair<int, int> PII; typedef vector<int> vi; typedef long double LD; typedef set<int> si;  int solve(int cc) {   int ret_val = 1;   ll n, k, get = 0, onell = 1LL;   scanf("%lld %lld ", &n, &k);   while (k > 0) {     n -= (onell << get);     if (k > (onell << get)) {       k -= (onell << get);       get++;     } else       break;     }   ll solmax = 0, solmin = 0;   if (n > 0) {     ll tt = (onell << (get + 1));     ll ttt = n / tt;     ll tttt = n % tt;     if (tttt >= k) {       solmax = ttt + 1;     } else {       solmax = ttt;     }     tttt -= (tt / 2);     if (tttt >= k) {       solmin = ttt + 1;     } else {       solmin = ttt;     }   }   cout << "Case #" << cc << ": " << solmax << " " << solmin << endl;   return ret_val; }  
int main() {   ios::sync_with_stdio(false);    int ret_val = 0;   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_17_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/Thanabhat/outer_temp/Thanabhat/A-small-practice_transformation.out",           "w", stdout);   int get;   scanf("%d ", &get);   for (int i = 0; i < get; i++) {     solve(i + 1);   }   return ret_val; }
#include <bits/stdc++.h>  using namespace std; 
struct E {   int l, r;   E(int nl, int nr) : l(nl), r(nr) {}   bool operator<(const E &o) const {     int v = r - l;     int ov = o.r - o.l;     if (v / 2 != ov / 2) {       return v / 2 > ov / 2;     }     if ((v + 1) / 2 != (ov + 1) / 2) {       return (v + 1) / 2 > (ov + 1) / 2;     }     return l < o.l;   } };  inline void njyavejvgs(set<struct E> &solve, int &l, int &s) {   solve.emplace(l, s); }  
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_18_Usenix_RF_1.0_True_MCTS_Classic_True/sammyMaX/fragusbot/A-small-practice.in",           "r", stdin);    int t;   scanf("%d", &t);   for (int c = 1; c <= t; ++c) {     printf("Case #%d: ", c);     int n, k;     scanf("%d %d", &n, &k);     set<E> solve = {{0, n + 1}};     while (k-- > 1) {       int l = solve.begin()->l;       int r = solve.begin()->r;       solve.erase(solve.begin());       int s = (l + r) / 2;       if (s - l - 1 >= 1)         njyavejvgs(solve, l, s);       if (r - s - 1 >= 1) {         solve.emplace(s, r);       }     }     int ans = solve.begin()->r - solve.begin()->l;     printf("%d %d\n", (ans + 1) / 2 - 1, ans / 2 - 1);   } }
#include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <complex> #include <cstdio> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <unordered_map> #include <utility> #include <vector> using namespace std; 
ofstream fout;  inline bool qanbmhcerk() {   fout << "IMPOSSIBLE\n";   return 1;   return 0; }  void get() {   string s;   int fsize;   cin >> s >> fsize;    int flips[1005] = {}, res = 0, i = 0;   for (char c : s) {     if (i >= fsize) {       res -= flips[i - fsize];     }     int now = (c == '+');     if (i <= s.size() - fsize)       if ((now + res) % 2 == 0)         flips[i] = 1;     res += flips[i];     i++;     if ((now + res) % 2 == 0) {       if (qanbmhcerk()) {         return;       }     }   }   res = 0;   for (int a : flips)     res += a;   fout << res << '\n'; }  
int main() {   fout.open("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_4_Usenix_RF_1.0_True_MCTS_Classic_True/WCG/sammyMaX/outer_temp/sammyMaX/A-small-practice_transformation.out");    cin.tie(0);   int t;   cin >> t;   {     int i = 0;     while (i < t) {       fout << "Case #" << i + 1 << ": ", get();       i++;     }   }   return 0; }
#include <bits/stdc++.h> #include <cstdio> #include <iostream> #include <stdio.h> #include <string>  using namespace std; 
typedef long long ll; typedef long long LL;  inline void dinwazrham(std::string &s, int &j) {   s[j] = (s[j] == '-' ? '+' : '-'); }  void open() {   string s;   int k;   cin >> s >> k;   int len = (int)s.size();   int ans = 0;   for (int i = 0; i <= len - k; ++i) {     if (s[i] == '-') {       ans++;       for (int j = i; j < i + k; ++j)         dinwazrham(s, j);     }   }   for (int i = len - k + 1; i < len; ++i) {     if (s[i] == '-') {       printf("IMPOSSIBLE\n");       return;     }   }   printf("%d\n", ans); }  
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_5_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/Tashi711/A-small-practice.in",           "r", stdin);    freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_5_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/Tashi711/outer_temp/Tashi711/A-small-practice_transformation.out",           "w", stdout);   int q;   cin >> q;   for (int i = 1; i <= q; ++i) {     printf("Case #%d: ", i);     open();   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cstdio> #include <cstring> #include <iostream> #include <stdio.h> #include <string> #include <vector> using namespace std;
typedef long long ll; typedef long long LL;  inline void lqmldvtdap(int &t) {   string s;   int k, res = 0;   cin >> s >> k;   for (int i = 0; i + k <= s.size(); ++i) {     if (s[i] == '-') {       for (int j = 0; j < k; ++j)         s[i + j] = (s[i + j] == '-') ? '+' : '-';       res++;     }   }   for (int i = 0; i < s.size(); ++i)     if (s[i] == '-')       res = -1;    cout << "Case #" << t << ": ";   if (res == -1)     cout << "IMPOSSIBLE" << endl;   else     cout << res << endl; }  
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_6_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/WCG/outer_temp/WCG/A-small-practice_transformation.out", "w", stdout);    freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_6_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/WCG/A-small-practice.in",           "r", stdin);    int tt;    scanf("%d ", &tt);    for (int t = 1; t <= tt; ++t)     lqmldvtdap(t);    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <cmath> #include <complex> #include <cstdio> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std; 
typedef long long LL; typedef pair<int, int> pii; typedef pair<int, int> PII; typedef unsigned long long ull; typedef vector<int> vi; typedef vector<int> VI;  inline void omvvrffjbd(int &n, std::string &s, int &i) {   int j = 0;   while (j < n) {     s[i + j] = (s[i + j] == '-') ? '+' : '-';     ++j;   } }  inline void plvpayiwvq(int &n, std::string &s, int &i, int &res) {   omvvrffjbd(n, s, i);   res++; }  inline void beuhuoaohf(int &n, std::string &s, int &i, int &res) {   if (s[i] == '-') {     plvpayiwvq(n, s, i, res);   } }  
int main() {   ios::sync_with_stdio(0);    int T;    cin >> T;    for (int t = 1; t <= T; ++t) {     string s;     int n, res = 0;     cin >> s >> n;     for (int i = 0; i + n <= s.size(); ++i)       beuhuoaohf(n, s, i, res);     for (int i = 0; i < s.size(); ++i) {       if (s[i] == '-')         res = -1;     }      cout << "Case #" << t << ": ";     if (res == -1)       cout << "IMPOSSIBLE" << endl;     else       cout << res << endl;   }    return 0; }
#include <bits/stdc++.h> #include <cstdio> #include <cstring> #include <stdio.h> #include <vector> using namespace std; 
using VI = vector<int>; using VVI = vector<VI>; using PII = pair<int, int>; using LL = long long; using VL = vector<LL>; using VVL = vector<VL>; using PLL = pair<LL, LL>; using VS = vector<string>; template <class S, class T> istream &operator>>(istream &is, pair<S, T> &p) {   return is >> p.first >> p.second; } template <class S, class T> ostream &operator<<(ostream &os, const pair<S, T> &p) {   return os << p.first << " " << p.second; }  inline void bltmhoosmi(int &ans, int &K, VI &xs, int &i) {   ++ans;   int k;   for (k = (0); k < (K); ++k)     xs[i + k] = !xs[i + k]; }  inline void yvyszwlhvx(int &ans, int &K, VI &xs, int &i) {   if (!xs[i])     bltmhoosmi(ans, K, xs, i); }  
int main() {   cin.tie(0);    int s;   scanf("%d ", &s);   int t;   {     t = (1);     while (t < (s + 1)) {       string S;       cin >> S;       int K;       scanf("%d ", &K);       int N = int((S).size());       VI xs(N);       for (int i = (0); i < (N); ++i)         xs[i] = S[i] == '+';        int ans = 0;       int i;       {         i = 0;         while (i + K <= N) {           yvyszwlhvx(ans, K, xs, i);           ++i;         }       }       if (accumulate(begin((xs)), end((xs)), 0) != N) {         printf("Case #%d: IMPOSSIBLE\n", t);       } else         printf("Case #%d: %d\n", t, ans);       ++t;     }   }    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <climits> #include <cmath> #include <cstdio> #include <cstring> #include <iostream> #include <iterator> #include <map> #include <queue> #include <set> #include <stack> #include <stdio.h> #include <string> #include <unordered_map> #include <utility> #include <vector>   using namespace std; 
using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  bool is_set(int i, ll mask) { return (mask >> i) & 1; }  int count_bits(ll mask) {   int ans = 0;   for (int i = 0; i < 64; ++i)     if (is_set(i, mask))       ++ans;   return ans; }  
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_11_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/ibrahim5253/outer_temp/ibrahim5253/A-small-practice_transformation.out",           "w", stdout);    freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_11_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/ibrahim5253/A-small-practice.in",           "r", stdin);    int cas;   cin >> cas;   for (int i = 1; i <= cas; ++i) {     string r;     int k;     cin >> r >> k;     int f = 0, n = r.length();     int j;     for (j = 0; j < n - k + 1; ++j) {       if (r[j] == '-') {         ++f;         {           int ubni_Var = j;           while (ubni_Var < j + k) {             r[ubni_Var] = (r[ubni_Var] == '+' ? '-' : '+');             ++ubni_Var;           }         }       }     }     for (int j = 0; j < n; ++j) {       if (r[j] == '-') {         f = -1;         break;       }     }     printf("Case #%d: ", i);     if (f == -1) {       printf("IMPOSSIBLE\n");     } else       printf("%d\n", f);   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cassert> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstring> #include <deque> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <numeric> #include <sstream> #include <stdio.h> #include <utility> using namespace std;  
int N, P; int s[200]; int r[200][200]; int b[200]; int tb[200];  int ll[200][200]; int mm[200][200];  
int main(void) {   freopen("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_13_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/iPeter/outer_temp/iPeter/A-small-practice_transformation.out",           "w", stdout);    freopen("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_13_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/iPeter/A-small-practice.in",           "r", stdin);    int solve;   cin >> solve;   for (int tt = 1; tt <= solve; tt++) {     cin >> N >> P;     for (int i = 0; i < N; ++i)       cin >> s[i];     for (int i = 0; i < N; ++i) {       for (int j = 0; j < P; ++j) {         cin >> r[i][j];       }       sort(r[i], r[i] + P);       for (int j = 0; j < P; ++j) {         ll[i][j] = ceil(1.0 * r[i][j] / (1.1 * s[i]));         mm[i][j] = floor(1.0 * r[i][j] / (0.9 * s[i]));       }     }        int ans = 0;     memset(b, 0, sizeof(b));      while (1) {       int stop = false;       for (int i = 0; i < N; ++i) {         if (b[i] >= P)           stop = true;       }       if (stop)         break;        int cur = 0;       for (int i = 0; i < N; ++i) {         cur = max(cur, ll[i][b[i]]);       }        bool ok = true;       for (int i = 0; i < N; ++i) {         for (int j = b[i]; j <= P; ++j) {           if (j == P || cur < ll[i][j]) {             b[i] = j;             ok = false;             break;           }           if (ll[i][j] > mm[i][j]) {             continue;           }           if (cur <= mm[i][j]) {             tb[i] = j;             break;           }         }       }        if (!ok)         continue;        ++ans;       for (int i = 0; i < N; ++i) {         b[i] = tb[i] + 1;       }     }      cout << "Case #" << tt << ": " << ans << "\n";   }   return 0; }
#include <bits/stdc++.h> #include <fstream>  using namespace std; 
ofstream fout;  ifstream fin;  long long pwr(long long base, long long p, long long v = (1000000007LL)) {   long long ans = 1;   while (p) {     if (p & 1)       ans = (ans * base) % v;     base = (base * base) % v;     p /= 2;   }   return ans; }  long long gcd(long long a, long long b) {   if (b == 0)     return a;   return gcd(b, a % b); }  int n, p, arr[55][55], req[55], DP[10][1024];  int dp(int i, int mask) {   if (i == p) {     int ret_val = 0;     return ret_val;   }   int &ans = DP[i][mask];   if (ans != -1)     return ans;   ans = dp(i + 1, mask);   int j;   for (j = 0; j < p; j++) {     if ((mask >> j) & 1)       continue;     int s = arr[0][i] / req[0];     for (int x = s + 5; x >= s - 5 && x >= 1; x--) {       int lo1 = ceil(1LL * x * req[0] * 0.9),           hi1 = floor(1LL * x * req[0] * 1.1);       int lo2 = ceil(1LL * x * req[1] * 0.9),           hi2 = floor(1LL * x * req[1] * 1.1);       if (arr[0][i] >= lo1 && arr[0][i] <= hi1 && arr[1][j] >= lo2 &&           arr[1][j] <= hi2)         ans = max(ans, 1 + dp(i + 1, mask | (1 << j)));     }   }    return ans; }  
int main() {   fout.open("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_14_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/satyaki3794/outer_temp/satyaki3794/A-small-practice_transformation.out");    fin.open("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_14_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/satyaki3794/A-small-practice.in");    cin.tie(0);    int t, x = 1;   fin >> t;    for (; t--;) {      fin >> n >> p;     for (int i = 0; i < n; i++)       fin >> req[i];     int i;     for (i = 0; i < n; i++)       for (int j = 0; j < p; j++)         fin >> arr[i][j];      if (n == 1) {       int ans = 0;       for (int i = 0; i < p; i++) {         bool ok = false;         for (int x = 2000000; x >= 1; x--) {           int lo = ceil(1LL * x * req[0] * 0.9),               hi = floor(1LL * x * req[0] * 1.1);           if (arr[0][i] >= lo && arr[0][i] <= hi) {             ok = 1;             break;           }         }         ans += ok;       }        fout << "Case #" << x++ << ": " << ans << endl;       continue;     }      memset(DP, -1, sizeof(DP));     fout << "Case #" << x++ << ": " << dp(0, 0) << endl;   }    return 0; }
#include <bits/stdc++.h> #include <iostream> #include <set> #include <utility> #include <vector> using namespace std;  
typedef long long ll; typedef pair<int, int> pii; typedef pair<int, int> PII; typedef vector<int> vi; typedef long double LD;  inline void vktmzekkpk(int &m1, int &m2) { swap(m1, m2); }  inline void utgvdvejjg(int &ans) { ans++; }  int main(int argc, char **argv) {   ios::sync_with_stdio(0);    ifstream fin("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_15_Usenix_RF_1.0_True_MCTS_Classic_True/Mucosolvan/gultai4ukr/A-small-practice.in");    int solve;   fin >> solve;   for (int testcase = 0; testcase < solve; ++testcase) {     int n, p;     fin >> n >> p;     vector<int> need(n);     for (int i = 0; i < n; ++i) {       fin >> need[i];     }     vector<vector<int>> q(n, vector<int>(p));     for (int i = 0; i < n; ++i) {       for (int j = 0; j < p; ++j) {         fin >> q[i][j];       }     }      assert(n < 3);     int ans = 0;     if (n == 1) {       for (int i = 0; i < p; ++i) {         int x = q[0][i] / need[0];         LD fr1 = 1.0L * q[0][i] / (x * need[0]);         if (0.9L <= fr1 && fr1 <= 1.1L) {           ans++;           continue;         }         LD fr2 = 1.0L * q[0][i] / ((x + 1) * need[0]);         if (0.9L <= fr2 && fr2 <= 1.1L)           utgvdvejjg(ans);       }     } else {       vector<int> perm(p);       for (int i = 0; i < p; ++i) {         perm[i] = i;       }       do {         int get = 0;         for (int i = 0; i < p; ++i) {           int m1 = q[0][i] / need[0];           int m2 = q[1][i] / need[1];           if (m2 < m1)             vktmzekkpk(m1, m2);           for (int x = m1; x < m2 + 2; ++x) {             LD fr01 = 1.0L * q[0][i] / (x * need[0]);             LD fr11 = 1.0L * q[1][perm[i]] / (x * need[1]);             LD fr02 = 1.0L * q[0][i] / ((x + 1) * need[0]);             LD fr12 = 1.0L * q[1][perm[i]] / ((x + 1) * need[1]);             if (0.9L <= fr01 && fr01 <= 1.1L && 0.9L <= fr11 && fr11 <= 1.1L) {               get++;               break;             } else {               if (0.9L <= fr02 && fr02 <= 1.1L && 0.9L <= fr12 &&                   fr12 <= 1.1L) {                 get++;                 break;               }             }           }         }         ans = max(ans, get);       } while (next_permutation(perm.begin(), perm.end()));     }      cout << "Case #" << testcase + 1 << ": " << ans << endl;   }    fin.close();    return 0; }
#include <bitset> #include <cctype> #include <climits> #include <deque> #include <fstream> #include <iomanip> #include <iostream> #include <iterator> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>   using namespace std;
const int INF = 1000000000;  typedef long double ld; typedef vector<int> VI; typedef vector<VI> vvi; typedef pair<int, int> PII; typedef vector<PII> vii; typedef vector<string> vs;   struct debugger {   template <typename T> debugger &solve(const T &v) {     cerr << v << " ";     return *this;   } };  inline void tbsjyzskhm(int &n, int *arr) {   int i = 0;   while (i < n) {     cout << arr[i] << " ";     i++;   } }  void get(int *arr, int n) {   cout << "[";   tbsjyzskhm(n, arr);   cout << "]" << endl; }  char str[50];  inline void twiiyubkvb(int &j) {   if (str[j] == '-')     str[j] = '+';   else     str[j] = '-'; }  
int main() {    int n, i, tc, l, m, t, s = 0, d;   scanf("%d", &t);   ;   int c = 1;   while (t--) {     cin >> str;     cin >> tc;     int ans = 0;     l = strlen(str);     for (i = 0; i + tc - 1 < l; i++) {       if (str[i] == '+')         continue;       s = 0;       for (int j = i; s < tc; s++, j++)         twiiyubkvb(j);       ans++;     }     for (i = 0; i < l; i++) {       if (str[i] == '-')         break;     }     if (i < l) {       printf("Case #%d: IMPOSSIBLE\n", c++);     } else {       printf("Case #%d: %d\n", c++, ans);     }   }   return (0); }
#include <bits/stdc++.h> #include <bitset> #include <climits> #include <deque> #include <fstream> #include <iomanip> #include <iostream> #include <iterator> #include <math.h> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <unordered_map>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>   using namespace std;
const int mod = 1000000007; const double EPS = 1e-9;  typedef set<int> si; typedef vector<int> VI; typedef vector<VI> vvi; typedef pair<int, int> pii; typedef vector<pii> vii; typedef vector<string> vs;  typedef long long ll;           typedef unsigned long long ULL;  typedef unsigned uint;    struct debugger {   template <typename T> debugger &get(const T &v) {     cerr << v << " ";     return *this;   } };  void solve(int *arr, int n) {   cout << "[";   for (int i = 0; i < n; i++)     cout << arr[i] << " ";   cout << "]" << endl; }  int req[110], lb[110], ub[110]; int q[110][110]; inline void mkdomovsgw(_Bool vis[52][52], vector<pair<int, int>> &v, int &o) {   vis[v[o].first][v[o].second] = 0; } 
int main() {   ios::sync_with_stdio(true);    ;   freopen("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_17_Usenix_RF_1.0_True_MCTS_Classic_True/Thanabhat/lazyBit/outer_temp/lazyBit/A-small-practice_transformation.out",           "w", stdout);   ;    int n, i, j, k, a, b, t, s = 0, d, r, ans, p;   scanf("%d", &t);   ;   int c = 1;   while (t--) {     memset((req), (0), sizeof(req));     memset((lb), (0), sizeof(lb));     memset((ub), (0), sizeof(ub));     memset((q), (0), sizeof(q));     scanf("%d", &n);     ;     scanf("%d", &p);     ;     for (i = 0; i < n; i++) {       scanf("%d", &req[i]);       ;     }     for (i = 0; i < n; i++) {       for (j = 0; j < p; j++) {         scanf("%d", &q[i][j]);         ;       }     }     {       i = 0;       while (i < n) {         sort(q[i], q[i] + p);         i++;       }     }     for (i = 0; i < n; i++) {       double nt = (9 * req[i]) / 10.0;       lb[i] = (int)nt;       if (lb[i] < nt)         lb[i]++;       ub[i] = (11 * req[i]) / 10;     }     int ns;     ans = 0;     bool vis[52][52];     memset((vis), (0), sizeof(vis));      for (i = 0; i < n; i++) {       for (j = 0; j < p; j++) {         if (q[i][j] < lb[i])           continue;         ns = q[i][j] / lb[i];         int mx = q[i][j] / ub[i];         if (mx * ub[i] < q[i][j]) {           mx++;         }         swap(mx, ns);         while (ns <= mx) {           bool f = 1;            vector<pair<int, int>> v;           v.clear();           int b;           for (b = i + 1; b < n; b++) {             f = 0;             for (int o = 0; o < p; o++) {                   if (!vis[b][o] && ns * lb[b] <= q[b][o] &&                   ns * ub[b] >= q[b][o]) {                 vis[b][o] = true;                 v.push_back(make_pair(b, o));                 f = 1;                 break;               }             }              if (f == 0)               break;           }           if (f == 0) {             for (int o = 0; o < v.size(); o++)               mkdomovsgw(vis, v, o);           } else {             ans++;              break;           }           ns++;         }       }       break;     }     printf("Case #%d: %d\n", c++, ans);   }   return (0); }
#include <bits/stdc++.h> #include <iomanip> #include <iostream>  using namespace std; 
char s[77]; int q[7777]; int d[7777];  
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_18_Usenix_RF_1.0_True_MCTS_Classic_True/4yn/fragusbot/A-small-practice.in",           "r", stdin);    int tt;   cin >> tt;   for (int t = 1; t <= tt; ++t) {     cout << "Case #" << t << ": ";     int k;     cin >> s >> k;     int n = strlen(s);     q[0] = 1 << n;     {       int i = 0;       while (i < n) {         if (s[i] == '-') {           q[0] |= 1 << (n - 1 - i);         }         ++i;       }     }     memset(d, -1, sizeof d);     d[q[0]] = 0;     for (int qh = 0, qt = 1; qh < qt; ++qh) {       int x = q[qh];       for (int i = 0; i <= n - k; ++i) {         int nx = x ^ (((1 << k) - 1) << i);         if (d[nx] == -1) {           d[nx] = d[x] + 1;           q[qt++] = nx;         }       }     }     if (d[1 << n] == -1) {       puts("IMPOSSIBLE");     } else {       cout << d[1 << n] << "\n";     }   } }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <iostream> #include <map> #include <numeric> #include <set> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector>  using namespace std; 
typedef long long ll; typedef pair<int, int> pii; typedef pair<int, int> PII; typedef vector<int> vi; typedef long double LD; typedef set<int> si;  void solve(int test) {   string s;   cin >> s;   int k;   cin >> k;    int n = s.size();    int ans = 0;   for (int i = 0; i + k - 1 < n; ++i) {     if (s[i] == '-') {       ++ans;       for (int j = i; j < i + k; ++j) {         s[j] = (s[j] == '+' ? '-' : '+');       }     }   }    if (count(s.begin(), s.end(), '+') != n) {     printf("Case #%d: IMPOSSIBLE\n", test);   } else {     printf("Case #%d: %d\n", test, ans);   } }  
int main() {   int ret_val = 0;   ios::sync_with_stdio(true);   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_19_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/sdya/A-small-practice.in",           "r", stdin);   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_19_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/sdya/outer_temp/sdya/A-small-practice_transformation.out",           "w", stdout);   int get;   scanf("%d", &get);   for (int i = 0; i < get; ++i) {     solve(i + 1);     cerr << i + 1 << ": " << clock() << endl;   }   return ret_val; }
#include <algorithm> #include <bits/stdc++.h> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iostream> #include <iterator> #include <list> #include <map> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std; 
const int MOD = 1000000007;  typedef long long ll;  int unit[52]; int wt[52][52]; int mn[52][52], mx[52][52]; int f; vector<pair<int, int>> adjList[1010]; int par[1010]; int n, p;  void open() {   freopen("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_8_Usenix_RF_1.0_True_MCTS_Classic_True/ibrahim5253/ccsnoopy/A-small-practice.in",           "r", stdin);   freopen("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_8_Usenix_RF_1.0_True_MCTS_Classic_True/ibrahim5253/ccsnoopy/outer_temp/ccsnoopy/A-small-practice_transformation.out",           "w", stdout); }  void augment(int x) {   if (par[x] != x) {     for (int i = 0; i < adjList[par[x]].size(); i++) {       if (adjList[par[x]][i].first == x) {         f = min(f, adjList[par[x]][i].second);         break;       }     }     augment(par[x]);     for (int i = 0; i < adjList[par[x]].size(); i++) {       if (adjList[par[x]][i].first == x) {         adjList[par[x]][i].second -= f;         break;       }     }      for (int i = 0; i < adjList[x].size(); i++) {       if (adjList[x][i].first == par[x]) {         adjList[x][i].second += f;         break;       }     }   } }  int maxflow() {   int mf = 0;   f = 0;   while (true) {     f = 0;     memset(par, -1, sizeof(par));     queue<int> q;     q.push(n * p);     par[n * p] = n * p;     bool found = false;      while (!q.empty()) {       int node = q.front();        q.pop();       for (int i = 0; i < adjList[node].size(); i++) {          int nx = adjList[node][i].first;         int cap = adjList[node][i].second;          if (cap > 0)           if (par[nx] == -1) {             par[nx] = node;             if (nx == n * p + 1) {               f = 1000000000;               augment(nx);               found = true;                break;             }             q.push(nx);           }       }       if (found)         break;     }      if (f == 0)       break;     mf += f;   }    return mf; }  
int main(void) {   ios::sync_with_stdio(false);    open();   int tc;   cin >> tc;    {     int t = 1;     while (t <= tc) {       map<int, int> mp;        cin >> n;       cin >> p;       for (int i = 0; i < n; i++)         cin >> unit[i];        memset(mn, -1, sizeof(mn));       memset(mx, -1, sizeof(mx));        for (int i = 0; i < n; i++) {         for (int j = 0; j < p; j++) {           cin >> wt[i][j];           int tmp1 = floor(1.0 * wt[i][j] / (0.9 * unit[i]));           int tmp2 = ceil(1.0 * wt[i][j] / (1.1 * unit[i]));           int bawah = min(tmp1, tmp2);           int atas = max(tmp1, tmp2);              while (bawah <= atas) {             if (bawah * 0.9 * unit[i] - 1e-9 <= 1.0 * wt[i][j] &&                 1.0 * wt[i][j] <= bawah * 1.1 * unit[i] + 1e-9)               break;             else               bawah++;           }               if (bawah > atas)             continue;            while (atas >= bawah) {             if (atas * 0.9 * unit[i] - 1e-9 <= 1.0 * wt[i][j] &&                 1.0 * wt[i][j] <= atas * 1.1 * unit[i] + 1e-9)               break;             else               atas--;           }               mn[i][j] = bawah;           mx[i][j] = atas;           }       }        for (int i = 0; i < 1010; i++)         adjList[i].clear();        for (int i = 0; i < n - 1; i++) {         for (int j = 0; j < p; j++) {           if (mn[i][j] <= 0)             continue;           for (int N = 0; N < p; N++) {             if (mn[i + 1][N] <= 0)               continue;               if ((mn[i][j] <= mn[i + 1][N] && mn[i + 1][N] <= mx[i][j]) ||                 (mn[i + 1][N] <= mn[i][j] && mn[i][j] <= mx[i + 1][N])) {                adjList[i * p + j].push_back(pair<int, int>((i + 1) * p + N, 1));               adjList[(i + 1) * p + N].push_back(pair<int, int>(i * p + j, 0));             }           }         }       }        for (int j = 0; j < p; j++) {          if (mn[0][j] > 0) {           adjList[n * p].push_back(pair<int, int>(j, 1));           adjList[j].push_back(pair<int, int>(n * p, 0));         }          if (mn[n - 1][j] > 0) {           adjList[(n - 1) * p + j].push_back(pair<int, int>(n * p + 1, 1));           adjList[n * p + 1].push_back(pair<int, int>((n - 1) * p + j, 0));         }       }        printf("Case #%d: %d\n", t, maxflow());       cerr << "Test " << t << " done \n";       t++;     }   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cmath> #include <cstdlib> #include <cstring> #include <ctime> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <map> #include <numeric> #include <queue> #include <set> #include <stack> #include <stdio.h> #include <string> #include <utility> #include <vector> using namespace std;
ofstream fout;  typedef unsigned long long ull; typedef vector<vector<int>> vvi; typedef long long ll; typedef pair<int, int> ii; typedef long double LD;  ifstream fin;  using VI = vector<int>; using VVI = vector<VI>; using PII = pair<int, int>; using LL = long long; using VL = vector<LL>; using VVL = vector<VL>; using PLL = pair<LL, LL>; using VS = vector<string>; template <class S, class T> istream &solve(istream &v, pair<S, T> &p) {   return v >> p.first >> p.second; } template <class S, class T> ostream &do_stdkgq_fct(ostream &b, const pair<S, T> &p) {   return b << p.first << " " << p.second; } template <class T> void maxi(T &x, T y) {   if (x < y)     x = y; } template <class T> void get(T &x, T y) {   if (x > y)     x = y; }  const double EPS = 1e-10; const double PI = acos(-1.0); const LL MOD = 1e9 + 7;  
int main() {   ios::sync_with_stdio(false);    fout.open("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_9_Usenix_RF_1.0_True_MCTS_Classic_True/ibrahim5253/okaduki/outer_temp/okaduki/A-small-practice_transformation.out");    fin.open("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_9_Usenix_RF_1.0_True_MCTS_Classic_True/ibrahim5253/okaduki/A-small-practice.in");    cin.tie(0);    int T;   fin >> T;   for (int q = (1); q < (T + 1); ++q) {     int N, P;     fin >> N >> P;     VL rs(N);     for (int i = (0); i < (N); ++i)       fin >> rs[i];     VVL qs(N, VL(P));     for (int i = (0); i < (N); ++i) {       for (int r = (0); r < (P); ++r)         fin >> qs[i][r];       sort(begin(((qs[i]))), end(((qs[i]))));     }      LL ans = 0;     if (N == 1) {       for (int i = (0); i < (P); ++i) {         int lb_k = ceil(qs[0][i] * 1. / (rs[0] * 1.1));         int ub_k = floor(qs[0][i] * 1. / (rs[0] * 0.9));         if (lb_k <= ub_k)           ++ans;       }     } else {       int i2 = 0;       for (int i1 = (0); i1 < (P); ++i1) {         int lb_k = ceil(qs[0][i1] * 1. / (rs[0] * 1.1));         int ub_k = floor(qs[0][i1] * 1. / (rs[0] * 0.9));          while (i2 < P) {           int lb2_k = (int)ceil(qs[1][i2] * 1. / (rs[1] * 1.1));           int ub2_k = (int)floor(qs[1][i2] * 1. / (rs[1] * 0.9));           if (lb_k <= ub2_k && lb2_k <= ub_k) {             ++ans;             ++i2;             break;           } else if (ub_k < lb2_k) {             break;           }           ++i2;         }       }     }      fout << "Case #" << q << ": " << ans << "\n";   }    return 0; }
#include <algorithm> #include <bitset> #include <climits> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <iomanip> #include <iostream> #include <limits> #include <list> #include <map> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <string> #include <unordered_map> #include <vector> using namespace std; 
int T;  int cs, ans;  int Hd, Ad, Hk, Ak, B, D; struct Rec {   int Hd, Ad, Hk, Ak;   Rec(int Hd, int Ad, int Hk, int Ak) : Hd(Hd), Ad(Ad), Hk(Hk), Ak(Ak) {}   Rec() {} }; int operator<(Rec a, Rec b) {   if (a.Hd == b.Hd && a.Ad == b.Ad && a.Hk == b.Hk)     return a.Ak < b.Ak;   if (a.Hd == b.Hd)     if (a.Ad == b.Ad)       return a.Hk < b.Hk;   if (a.Hd == b.Hd)     return a.Ad < b.Ad;   return a.Hd < b.Hd; } map<Rec, int> dis;  inline bool budyhksfzw() {   return true;   return false; }  inline bool rhicguvbot() {   return true;   return false; }  inline bool znvuoqqhyk() {   if (budyhksfzw()) {     if (rhicguvbot()) {       return true;     }   }   return false; }  void Push(queue<Rec> &Q, Rec w, int turn) {   w.Hd -= w.Ak;   if (w.Hd <= 0)     return;    if (dis.find(w) != dis.end()) {     if (znvuoqqhyk()) {       return;     }   }   dis[w] = turn;   Q.push(w); } 
int main() {   int ret_val = 0;   ios::sync_with_stdio(true);   cin >> T;   while (T--) {     cout << "Case #" << ++cs << ": ";     cin >> Hd >> Ad >> Hk >> Ak >> B >> D;     if ((Ak - D) > Hd) {       puts("IMPOSSIBLE");       continue;     }     queue<Rec> Q;     Q.push(Rec(Hd, Ad, Hk, Ak));     dis.clear();     dis[Rec(Hd, Ad, Hk, Ak)] = 0;     int ck = 1;     for (; Q.size();) {       Rec nxt = Q.front();       Q.pop();       int turn = dis[nxt] + 1;       Rec cure = nxt;       cure.Hd = Hd;       Push(Q, cure, turn);        Rec attack = nxt;       attack.Hk -= nxt.Ad;        if (attack.Hk <= 0) {          ans = turn;         ck = 0;         break;       }       Push(Q, attack, turn);        Rec buff = nxt;       buff.Ad += B;       Push(Q, buff, turn);        Rec debuff = nxt;       debuff.Ak = max(0, debuff.Ak - D);       Push(Q, debuff, turn);     }     if (!ck)       cout << ans << "\n";     else       puts("IMPOSSIBLE");   }   return ret_val; }
#include <algorithm> #include <bits/stdc++.h> #include <cassert> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstring> #include <deque> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <numeric> #include <sstream> #include <stdio.h> #include <utility> using namespace std; 
int N, P; int s[200]; int r[200][200]; int b[200]; int tb[200];  int ll[200][200]; int mm[200][200];  
int main(void) {   freopen("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_13_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/iPeter/outer_temp/iPeter/A-small-practice_transformation.out",           "w", stdout);    freopen("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_13_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/iPeter/A-small-practice.in",           "r", stdin);    int solve;   cin >> solve;   for (int tt = 1; tt <= solve; tt++) {     cin >> N >> P;     for (int i = 0; i < N; ++i)       cin >> s[i];     for (int i = 0; i < N; ++i) {       for (int j = 0; j < P; ++j) {         cin >> r[i][j];       }       sort(r[i], r[i] + P);       for (int j = 0; j < P; ++j) {         ll[i][j] = ceil(1.0 * r[i][j] / (1.1 * s[i]));         mm[i][j] = floor(1.0 * r[i][j] / (0.9 * s[i]));       }     }        int ans = 0;     memset(b, 0, sizeof(b));      while (1) {       int stop = false;       for (int i = 0; i < N; ++i) {         if (b[i] >= P)           stop = true;       }       if (stop)         break;        int cur = 0;       for (int i = 0; i < N; ++i) {         cur = max(cur, ll[i][b[i]]);       }        bool ok = true;       for (int i = 0; i < N; ++i) {         for (int j = b[i]; j <= P; ++j) {           if (j == P || cur < ll[i][j]) {             b[i] = j;             ok = false;             break;           }           if (ll[i][j] > mm[i][j]) {             continue;           }           if (cur <= mm[i][j]) {             tb[i] = j;             break;           }         }       }        if (!ok)         continue;        ++ans;       for (int i = 0; i < N; ++i) {         b[i] = tb[i] + 1;       }     }      cout << "Case #" << tt << ": " << ans << "\n";   }   return 0; }
#include <bits/stdc++.h> #include <fstream>  using namespace std; 
ofstream fout;  ifstream fin;  long long pwr(long long base, long long p, long long v = (1000000007LL)) {   long long ans = 1;   while (p) {     if (p & 1)       ans = (ans * base) % v;     base = (base * base) % v;     p /= 2;   }   return ans; }  long long gcd(long long a, long long b) {   if (b == 0)     return a;   return gcd(b, a % b); }  int n, p, arr[55][55], req[55], DP[10][1024];  int dp(int i, int mask) {   if (i == p) {     int ret_val = 0;     return ret_val;   }   int &ans = DP[i][mask];   if (ans != -1)     return ans;   ans = dp(i + 1, mask);   int j;   for (j = 0; j < p; j++) {     if ((mask >> j) & 1)       continue;     int s = arr[0][i] / req[0];     for (int x = s + 5; x >= s - 5 && x >= 1; x--) {       int lo1 = ceil(1LL * x * req[0] * 0.9),           hi1 = floor(1LL * x * req[0] * 1.1);       int lo2 = ceil(1LL * x * req[1] * 0.9),           hi2 = floor(1LL * x * req[1] * 1.1);       if (arr[0][i] >= lo1 && arr[0][i] <= hi1 && arr[1][j] >= lo2 &&           arr[1][j] <= hi2)         ans = max(ans, 1 + dp(i + 1, mask | (1 << j)));     }   }    return ans; }  
int main() {   fout.open("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_14_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/satyaki3794/outer_temp/satyaki3794/A-small-practice_transformation.out");    fin.open("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_14_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/satyaki3794/A-small-practice.in");    cin.tie(0);    int t, x = 1;   fin >> t;    for (; t--;) {      fin >> n >> p;     for (int i = 0; i < n; i++)       fin >> req[i];     int i;     for (i = 0; i < n; i++)       for (int j = 0; j < p; j++)         fin >> arr[i][j];      if (n == 1) {       int ans = 0;       for (int i = 0; i < p; i++) {         bool ok = false;         for (int x = 2000000; x >= 1; x--) {           int lo = ceil(1LL * x * req[0] * 0.9),               hi = floor(1LL * x * req[0] * 1.1);           if (arr[0][i] >= lo && arr[0][i] <= hi) {             ok = 1;             break;           }         }         ans += ok;       }        fout << "Case #" << x++ << ": " << ans << endl;       continue;     }      memset(DP, -1, sizeof(DP));     fout << "Case #" << x++ << ": " << dp(0, 0) << endl;   }    return 0; }
#include <bits/stdc++.h> #include <iostream> #include <set> #include <utility> #include <vector> using namespace std; 
typedef long long ll; typedef pair<int, int> pii; typedef pair<int, int> PII; typedef vector<int> vi; typedef long double LD;  inline void vktmzekkpk(int &m1, int &m2) { swap(m1, m2); }  inline void utgvdvejjg(int &ans) { ans++; }  int main(int argc, char **argv) {   ios::sync_with_stdio(0);    ifstream fin("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_15_Usenix_RF_1.0_True_MCTS_Classic_True/Mucosolvan/gultai4ukr/A-small-practice.in");    int solve;   fin >> solve;   for (int testcase = 0; testcase < solve; ++testcase) {     int n, p;     fin >> n >> p;     vector<int> need(n);     for (int i = 0; i < n; ++i) {       fin >> need[i];     }     vector<vector<int>> q(n, vector<int>(p));     for (int i = 0; i < n; ++i) {       for (int j = 0; j < p; ++j) {         fin >> q[i][j];       }     }      assert(n < 3);     int ans = 0;     if (n == 1) {       for (int i = 0; i < p; ++i) {         int x = q[0][i] / need[0];         LD fr1 = 1.0L * q[0][i] / (x * need[0]);         if (0.9L <= fr1 && fr1 <= 1.1L) {           ans++;           continue;         }         LD fr2 = 1.0L * q[0][i] / ((x + 1) * need[0]);         if (0.9L <= fr2 && fr2 <= 1.1L)           utgvdvejjg(ans);       }     } else {       vector<int> perm(p);       for (int i = 0; i < p; ++i) {         perm[i] = i;       }       do {         int get = 0;         for (int i = 0; i < p; ++i) {           int m1 = q[0][i] / need[0];           int m2 = q[1][i] / need[1];           if (m2 < m1)             vktmzekkpk(m1, m2);           for (int x = m1; x < m2 + 2; ++x) {             LD fr01 = 1.0L * q[0][i] / (x * need[0]);             LD fr11 = 1.0L * q[1][perm[i]] / (x * need[1]);             LD fr02 = 1.0L * q[0][i] / ((x + 1) * need[0]);             LD fr12 = 1.0L * q[1][perm[i]] / ((x + 1) * need[1]);             if (0.9L <= fr01 && fr01 <= 1.1L && 0.9L <= fr11 && fr11 <= 1.1L) {               get++;               break;             } else {               if (0.9L <= fr02 && fr02 <= 1.1L && 0.9L <= fr12 &&                   fr12 <= 1.1L) {                 get++;                 break;               }             }           }         }         ans = max(ans, get);       } while (next_permutation(perm.begin(), perm.end()));     }      cout << "Case #" << testcase + 1 << ": " << ans << endl;   }    fin.close();    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <deque> #include <fstream> #include <functional> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <set> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <unordered_map> #include <utility> #include <vector> using namespace std;
const double eps = 1e-9; typedef long double ld; typedef long double LD; typedef long long LL; typedef pair<int, int> PII; typedef pair<LL, LL> pll; typedef vector<int> vi; typedef vector<vi> vvi; typedef vector<LL> vll; typedef set<int> si; typedef map<int, int> mii;  const int N = 50; int t, n, m; char a[N][N];  inline void dzpzxjxrlh(int &i, int &j) {   if (a[i][j] == '?')     a[i][j] = a[i][j + 1];   --j; }  
int main() {   ios::sync_with_stdio(false);    freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_2_Usenix_RF_1.0_True_MCTS_Classic_True/try/KhaleD/A-small-practice.in",           "r", stdin);   freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_2_Usenix_RF_1.0_True_MCTS_Classic_True/try/KhaleD/outer_temp/KhaleD/A-small-practice_transformation.out",           "w", stdout);   scanf("%d", &t);   for (int x = (1); x <= (int)(t); ++x) {     scanf("%d%d", &n, &m);     for (int i = (0); i <= (int)(n - 1); ++i)       scanf("%s", a[i]);      for (int i = (0); i <= (int)(n - 1); ++i) {       int j;       for (j = (1); j <= (int)(m - 1); ++j)         if (a[i][j] == '?')           a[i][j] = a[i][j - 1];       {         int j;         for (j = (m - 2); j >= (int)(0);)           dzpzxjxrlh(i, j);       }     }     int j;     for (j = (0); j <= (int)(m - 1); ++j) {       for (int i = (1); i <= (int)(n - 1); ++i)         if (a[i][j] == '?')           a[i][j] = a[i - 1][j];       int i;       for (i = (n - 2); i >= (int)(0); --i)         if (a[i][j] == '?')           a[i][j] = a[i + 1][j];     }      printf("Case #%d:\n", x);     for (int i = (0); i <= (int)(n - 1); ++i) {       for (int j = (0); j <= (int)(m - 1); ++j)         printf("%c", a[i][j]);       puts("");     }   }   return 0; }
#include <bits/stdc++.h> #include <bitset> #include <cctype> #include <climits> #include <cmath> #include <cstdlib> #include <cstring> #include <ctime> #include <fstream> #include <iostream> #include <math.h> #include <sstream> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std; 
typedef unsigned long long ull; typedef long double ld; typedef long long LL; typedef pair<int, int> ii; typedef pair<LL, LL> pll; typedef vector<int> VI; typedef vector<VI> vvi; typedef vector<LL> vll; typedef set<int> si; typedef map<int, int> mii;  const int N = 50; int t, n, m; char a[N][N];  inline void twzaymaome(int &solve) {   for (int b = (1); b <= (int)(m - 1); ++b)     if (a[solve][b] == '?')       a[solve][b] = a[solve][b - 1];   for (int b = (m - 2); b >= (int)(0); --b)     if (a[solve][b] == '?')       a[solve][b] = a[solve][b + 1]; }  
int main() {    freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_2_Usenix_RF_1.0_True_MCTS_Classic_True/WCG/KhaleD/A-small-practice.in",           "r", stdin);    cin >> t;   for (int c = (1); c <= (int)(t); ++c) {     cin >> n >> m;     for (int solve = (0); solve <= (int)(n - 1); ++solve)       cin >> a[solve];      for (int solve = (0); solve <= (int)(n - 1); ++solve)       twzaymaome(solve);      for (int b = (0); b <= (int)(m - 1); ++b) {       for (int solve = (1); solve <= (int)(n - 1); ++solve)         if (a[solve][b] == '?')           a[solve][b] = a[solve - 1][b];       for (int solve = (n - 2); solve >= (int)(0); --solve)         if (a[solve][b] == '?')           a[solve][b] = a[solve + 1][b];     }      printf("Case #%d:\n", c);     for (int solve = (0); solve <= (int)(n - 1); ++solve) {       for (int b = (0); b <= (int)(m - 1); ++b)         printf("%c", a[solve][b]);       puts("");     }   } }  
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std; 
const double eps = 1e-9;  ofstream d("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_4_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/sammyMaX/outer_temp/sammyMaX/A-small-practice_transformation.out");  inline void kdzucydesu(vector<std::string> &rows, int &i, int &j, char &found) {   rows[i][j] = found; }  inline void shstdxrnou(vector<pair<int, int>> &founds, int &i, int &j) {   founds.push_back({i, j}); }  void rsolve(int r0, int r1, int c0, int c1, vector<string> &rows) {   vector<pair<int, int>> founds;   for (int i = r0; i < r1; i++)     for (int j = c0; j < c1; j++)       if (rows[i][j] != '?')         shstdxrnou(founds, i, j);   cout << r0 << ' ' << r1 << ' ' << c0 << ' ' << c1 << ' ' << founds.size()        << '\n';   if (founds.size() == 0) {     cout << "WTF???\n";     return;   }   if (founds.size() == 1) {     char found = rows[founds[0].first][founds[0].second];     for (int i = r0; i < r1; i++)       for (int j = c0; j < c1; j++)         kdzucydesu(rows, i, j, found);     return;   } else {     int R1 = founds[0].first, C1 = founds[0].second, get = founds[1].first,         C2 = founds[1].second;     if (C1 == C2) {       rsolve(r0, max(R1, get), c0, c1, rows);       rsolve(max(R1, get), r1, c0, c1, rows);     } else {       rsolve(r0, r1, c0, max(C1, C2), rows);       rsolve(r0, r1, max(C1, C2), c1, rows);     }   }   cout << r0 << ' ' << r1 << ' ' << c0 << ' ' << c1 << "done\n"; }  void solve() {   int r, c;   cin >> r >> c;   vector<string> rows(r);   for (string &s : rows)     cin >> s;   rsolve(0, r, 0, c, rows);   for (string s : rows)     d << s << '\n';   cout << "solve done"; }  
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_4_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/sammyMaX/A-small-practice.in",           "r", stdin);    int t;   cin >> t;   {     int i = 0;     while (i < t) {       d << "Case #" << i + 1 << ":\n", solve();       i++;     }   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <complex> #include <cstdio> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <stdio.h> #include <stdlib.h> #include <string> #include <vector> using namespace std; 
ofstream x("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_4_Usenix_RF_1.0_True_MCTS_Classic_True/WCG/sammyMaX/outer_temp/sammyMaX/A-small-practice_transformation.out");  inline bool kgshexgtbi() {   cout << "WTF???\n";   return 1;   return false; }  inline bool ocfbkwpwog(vector<pair<int, int>> &founds, int &r0, int &r1,                        int &c0, int &c1, vector<std::string> &rows) {   char found = rows[founds[0].first][founds[0].second];   for (int get = r0; get < r1; get++)     for (int j = c0; j < c1; j++)       rows[get][j] = found;   return true;   return false; }  void rsolve(int r0, int r1, int c0, int c1, vector<string> &rows) {   vector<pair<int, int>> founds;   int get;   for (get = r0; get < r1; get++)     for (int j = c0; j < c1; j++)       if (rows[get][j] != '?')         founds.push_back({get, j});   cout << r0 << ' ' << r1 << ' ' << c0 << ' ' << c1 << ' ' << founds.size()        << '\n';   if (founds.size() == 0) {     if (kgshexgtbi()) {       return;     }   }   if (founds.size() == 1) {     if (ocfbkwpwog(founds, r0, r1, c0, c1, rows)) {       return;     }   } else {     int R1 = founds[0].first, C1 = founds[0].second, R2 = founds[1].first,         C2 = founds[1].second;     if (C1 == C2) {       rsolve(r0, max(R1, R2), c0, c1, rows);       rsolve(max(R1, R2), r1, c0, c1, rows);     } else {       rsolve(r0, r1, c0, max(C1, C2), rows);       rsolve(r0, r1, max(C1, C2), c1, rows);     }   }   cout << r0 << ' ' << r1 << ' ' << c0 << ' ' << c1 << "done\n"; }  void solve() {   int r, c;   cin >> r >> c;   vector<string> rows(r);   for (string &s : rows)     cin >> s;   rsolve(0, r, 0, c, rows);   for (string s : rows)     x << s << '\n';   cout << "solve done"; }  inline void hxizkrfapo(int &t) {   int get = 0;   for (; get < t;) {     x << "Case #" << get + 1 << ":\n", solve();     get++;   } }  
int main() {   int t;   cin >> t;   hxizkrfapo(t); }
#include <bits/stdc++.h> #include <iostream> #include <utility> #include <vector> using namespace std;
typedef long long ll; typedef pair<int, int> ii; typedef pair<int, int> pii; typedef unsigned long long ull; typedef vector<int> vi; typedef long double LD;  ofstream fout("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_4_Usenix_RF_1.0_True_MCTS_Classic_True/bennikartefla/sammyMaX/outer_temp/sammyMaX/A-small-practice_transformation.out");  inline bool bxdidhqdov() {   cout << "WTF???\n";   return true;   return false; }  inline bool iubceoaccv() {   if (bxdidhqdov()) {     return true;   }   return false; }  inline bool xzdowytooa() {   return true;   return false; }  void rsolve(int r0, int r1, int c0, int c1, vector<string> &rows) {   vector<pair<int, int>> founds;   for (int i = r0; i < r1; i++)     for (int j = c0; j < c1; j++)       if (rows[i][j] != '?')         founds.push_back({i, j});   cout << r0 << ' ' << r1 << ' ' << c0 << ' ' << c1 << ' ' << founds.size()        << '\n';   if (founds.size() == 0) {     if (iubceoaccv()) {       if (xzdowytooa()) {         return;       }     }   }   if (founds.size() == 1) {     char found = rows[founds[0].first][founds[0].second];     for (int i = r0; i < r1; i++)       for (int j = c0; j < c1; j++)         rows[i][j] = found;     return;   } else {     int R1 = founds[0].first, C1 = founds[0].second, R2 = founds[1].first,         C2 = founds[1].second;     if (C1 == C2) {       rsolve(r0, max(R1, R2), c0, c1, rows);       rsolve(max(R1, R2), r1, c0, c1, rows);     } else {       rsolve(r0, r1, c0, max(C1, C2), rows);       rsolve(r0, r1, max(C1, C2), c1, rows);     }   }   cout << r0 << ' ' << r1 << ' ' << c0 << ' ' << c1 << "done\n"; }  void get() {   int r, c;   cin >> r >> c;   vector<string> rows(r);   for (string &s : rows)     cin >> s;   rsolve(0, r, 0, c, rows);   for (string s : rows)     fout << s << '\n';   cout << "solve done"; }  
int main() {   int t;   cin >> t;   int i;   for (i = 0; i < t; i++)     fout << "Case #" << i + 1 << ":\n", get();   return 0; }
#include <algorithm> #include <climits> #include <cstdio> #include <cstring> #include <deque> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector>  using namespace std;
const double eps = 1e-9;  const int N = 100;  int n, m;  void handle_line(string &s) {   char last = '?';   for (int i = 0; i < m; ++i) {     if (s[i] == '?') {       s[i] = last;     } else {       last = s[i];     }   }   for (int i = m - 1; i >= 0; --i) {     if (s[i] == '?') {       s[i] = last;     } else {       last = s[i];     }   } }  string s[N];  void work() {   scanf("%d %d ", &n, &m);   string qs;   for (int i = 1; i <= m; ++i) {     qs.push_back('?');   }   int st = -1;   for (int i = 1; i <= n; ++i) {     cin >> s[i];     if (s[i] != qs) {       st = i;     }   }   handle_line(s[st]);   for (int i = st - 1; i >= 1; --i) {     if (s[i] == qs) {       s[i] = s[i + 1];     } else {       handle_line(s[i]);     }   }   for (int i = st + 1; i <= n; ++i) {     if (s[i] == qs) {       s[i] = s[i - 1];     } else {       handle_line(s[i]);     }   }   int i;   for (i = 1; i <= n; ++i) {     cout << s[i] << endl;   } }  
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_5_Usenix_RF_1.0_True_MCTS_Classic_True/WCG/Tashi711/A-small-practice.in",           "r", stdin);    int q;   scanf("%d ", &q);   for (int i = 1; i <= q; ++i) {     cout << "Case #" << i << ":\n";     work();   }   return 0; }
#include <bits/stdc++.h> #include <iostream> using namespace std; 
const int MAXN = 1005;  typedef long long LL;  void open() {}  inline void rkvfceimez(int &miny, int &maxy, std::string ret[30], int &N,                        std::string T[30], int &i, int &j) {   for (int ans = miny; ans <= maxy; ans++)     ret[N][ans] = T[i][j]; }  inline void smrxhegzxn(int &minx) { minx--; }  
int main(void) {   ios::sync_with_stdio(true);    open();   int tc;   scanf("%d", &tc);    for (int t = 1; t <= tc; t++) {     int r, c;     scanf("%d", &r);     scanf("%d", &c);     string T[30];     string ret[30];     for (int i = 0; i < r; i++) {       cin >> T[i];        ret[i] = T[i];     }      for (int i = 0; i < r; i++) {       for (int j = 0; j < c; j++) {         if (T[i][j] == '?')           continue;         int minx, maxx;         minx = maxx = i;         int miny, maxy;         miny = maxy = j;         while (miny > 0 && T[i][miny - 1] == '?' && ret[i][miny - 1] == '?')           miny--;         while (maxy < c - 1 && T[i][maxy + 1] == '?' && ret[i][maxy + 1] == '?')           maxy++;         while (minx > 0) {           bool valid = true;           for (int N = miny; N <= maxy; N++) {             if (T[minx - 1][N] != '?' || ret[minx - 1][N] != '?') {               valid = false;               break;             }           }           if (valid)             smrxhegzxn(minx);           else             break;         }         bool adabawah = false;         for (int N = i + 1; N < r; N++) {           for (int ans = 0; ans < c; ans++) {             if (T[N][ans] != '?') {               adabawah = true;               break;             }           }         }         if (!adabawah) {           maxx = r - 1;         }          for (int N = minx; N <= maxx; N++)           rkvfceimez(miny, maxy, ret, N, T, i, j);       }     }      printf("Case #%d: \n", t);     for (int i = 0; i < r; i++)       cout << ret[i] << "\n";      cerr << "Test " << t << " done \n";   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cmath> #include <cstdlib> #include <cstring> #include <ctime> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <map> #include <numeric> #include <queue> #include <stack> #include <stdio.h> #include <string> #include <utility> #include <vector> using namespace std; 
using VI = vector<int>; using VVI = vector<VI>; using PII = pair<int, int>; using LL = long long; using VL = vector<LL>; using VVL = vector<VL>; using PLL = pair<LL, LL>; using VS = vector<string>; template <class S, class T> istream &do_stdtbs_fct(istream &is, pair<S, T> &p) {   return is >> p.first >> p.second; } template <class S, class T> ostream &solve(ostream &os, const pair<S, T> &p) {   return os << p.first << " " << p.second; } template <class T> void do_voiffs_fct(T &x, T y) {   if (x < y)     x = y; } template <class T> void get(T &x, T y) {   if (x > y)     x = y; }  
int main() {   cin.tie(0);   ios_base::sync_with_stdio(false);    int T;   cin >> T;   for (int c = (1); c < (T + 1); ++c) {     int H, W;     cin >> H >> W;     VS vs(H);     for (int y = (0); y < (H); ++y)       cin >> vs[y];      set<char> memo;     for (int y = (0); y < (H); ++y) {       int x = (0);       while (x < (W)) {         if (vs[y][x] != '?' && !memo.count(vs[y][x])) {           memo.insert(vs[y][x]);            int lx, rx, ty, by;           for (lx = x - 1; lx >= 0; --lx)             if (vs[y][lx] != '?')               break;           ++lx;           for (rx = x + 1; rx < W; ++rx)             if (vs[y][rx] != '?')               break;            for (ty = y - 1; ty >= 0; --ty) {             bool ok = true;             {               int xx = lx;               for (; xx < rx;) {                 if (vs[ty][xx] != '?')                   ok = false;                 ++xx;               }             }             if (!ok)               break;           }           ++ty;           for (by = y + 1; by < H; ++by) {             bool ok = true;             for (int xx = lx; xx < rx; ++xx) {               if (vs[by][xx] != '?')                 ok = 0;             }             if (!ok)               break;           }            int yy;           for (yy = (ty); yy < (by); ++yy)             for (int xx = (lx); xx < (rx); ++xx)               vs[yy][xx] = vs[y][x];         }         ++x;       }     }      printf("Case #%d:\n", c);     int y;     for (y = (0); y < (H); ++y)       printf("%s\n", vs[y].c_str());   }    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstring> #include <ctime> #include <fstream> #include <iomanip> #include <iostream> #include <list> #include <queue> #include <set> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> #include <vector> using namespace std; 
typedef unsigned long long ull; typedef vector<vector<int>> vvi; typedef long long ll; typedef pair<int, int> pii; typedef pair<int, int> PII; typedef vector<int> VI; typedef long double LD;  int n, N; char s[50][50]; 
int main(void) {   ios::sync_with_stdio(false);    freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_13_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/iPeter/outer_temp/iPeter/A-small-practice_transformation.out",           "w", stdout);    freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_13_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/iPeter/A-small-practice.in",           "r", stdin);    int solve;   cin >> solve;   for (int tc = 1; tc <= solve; tc++) {     cin >> n >> N;     for (int get = 0; get < n; ++get)       cin >> s[get];      int ufx, ufy = 0;     {       int get = 0;       while (get < n) {         ufx = 0;         int fill = false;         for (int j = 0; j < N; ++j) {           if (s[get][j] == '?')             continue;           fill = true;           int st = ufx, ed = j + 1;           for (; ed < N && s[get][ed] == '?'; ++ed)             ;           {             int x = st;             while (x < ed) {               for (int y = ufy; y <= get; ++y)                 s[y][x] = s[get][j];               ++x;             }           }           ufx = ed;         }         if (fill)           ufy = get + 1;         ++get;       }     }      for (int get = 0; get < n; ++get)       for (int j = 0; j < N; ++j)         if (s[get][j] == '?')           s[get][j] = s[get - 1][j];      cout << "Case #" << tc << ":\n";     {       int get = 0;       while (get < n) {         cout << s[get] << "\n";         ++get;       }     }   }   return 0; }
#include <bits/stdc++.h> #include <fstream>  using namespace std;
const int MAXN = 1005;  ifstream fin;  ofstream fout;  long long pwr(long long base, long long p, long long mod = (1000000007LL)) {   long long ans = 1;   while (p) {     if (p & 1)       ans = (ans * base) % mod;     base = (base * base) % mod;     p /= 2;   }   return ans; }  int r, c; char arr[26][26];  
int main() {   fin.open("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_14_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/satyaki3794/A-small-practice.in");    fout.open("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_14_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/satyaki3794/outer_temp/satyaki3794/A-small-practice_transformation.out");    cin.tie(0);    int t, x = 1;   fin >> t;     while (t--) {      fin >> r >> c;     for (int i = 1; i <= r; i++)       fin >> (arr[i] + 1);      for (int i = 1; i <= r; i++) {       for (int j = 1; j <= c; j++)         if (arr[i][j] != '?') {            int miny = j, maxy = j;            int y = j - 1;           for (; y >= 1 && arr[i][y] == '?';) {             arr[i][y--] = arr[i][j];             miny = y + 1;           }            y = j + 1;           for (; y <= c && arr[i][y] == '?';) {             arr[i][y++] = arr[i][j];             maxy = y - 1;           }         }     }      queue<pair<int, int>> qq;     for (int i = 1; i <= r; i++) {       if (arr[i][1] != '?') {          int x = i - 1;         for (; x >= 1 && arr[x][1] == '?';) {           for (int j2 = 1; j2 <= c; j2++)             arr[x][j2] = arr[x + 1][j2];           x--;         }          x = i + 1;         while (x <= r && arr[x][1] == '?') {           for (int j2 = 1; j2 <= c; j2++)             arr[x][j2] = arr[x - 1][j2];           x++;         }       }     }      fout << "Case #" << x++ << ":" << endl;     for (int i = 1; i <= r; i++)       fout << (arr[i] + 1) << endl;   }    return 0; }
#include <bits/stdc++.h> #include <iostream> #include <vector>  using namespace std; 
typedef long double ld; typedef vector<int> vi; typedef long double LD; typedef long long LL; typedef pair<int, int> pii; typedef pair<int, pii> iii;  LL pwr(LL base, LL p, LL mod = (1000000007LL)) {   LL ans = 1;   while (p) {     if (p & 1)       ans = (ans * base) % mod;     base = (base * base) % mod;     p /= 2;   }   return ans; }  LL gcd(LL a, LL b) {   if (b == 0)     return a;   return gcd(b, a % b); }  int r, c; char arr[26][26];  
int main() {   ios::sync_with_stdio(false);    cin.tie(0);    int t, x = 1;   cin >> t;    while (t--) {      cin >> r >> c;     for (int i = 1; i <= r; i++)       cin >> (arr[i] + 1);      for (int i = 1; i <= r; i++)       for (int j = 1; j <= c; j++)         if (arr[i][j] != '?') {            int miny = j, maxy = j;            int y = j - 1;           while (y >= 1 && arr[i][y] == '?') {             arr[i][y--] = arr[i][j];             miny = y + 1;           }            y = j + 1;           while (y <= c && arr[i][y] == '?') {             arr[i][y++] = arr[i][j];             maxy = y - 1;           }         }      queue<pii> qq;     for (int i = 1; i <= r; i++)       if (arr[i][1] != '?') {          int x = i - 1;         while (x >= 1 && arr[x][1] == '?') {           for (int j2 = 1; j2 <= c; j2++)             arr[x][j2] = arr[x + 1][j2];           x--;         }          x = i + 1;         while (x <= r && arr[x][1] == '?') {           for (int j2 = 1; j2 <= c; j2++)             arr[x][j2] = arr[x - 1][j2];           x++;         }       }      cout << "Case #" << x++ << ":" << endl;     for (int i = 1; i <= r; i++)       cout << (arr[i] + 1) << endl;   }    return 0; }
#include <bits/stdc++.h> #include <iostream> #include <stdio.h> using namespace std;  
int main(int argc, char **argv) {    int t;   scanf("%d ", &t);   {     int testcase = 0;     while (testcase < t) {       int r, c;       scanf("%d %d ", &r, &c);       vector<string> v(r);       for (int i = 0; i < r; ++i) {         cin >> v[i];        }        int i;       for (i = 0; i < r; ++i) {         for (int solve = 0; solve < c; ++solve) {           if (v[i][solve] == '?') {             int dist = c, index = solve;             for (int N = 0; N < c; ++N) {               if (v[i][N] != '?') {                 if (abs(solve - N) < dist) {                   dist = abs(solve - N);                   index = N;                 }               }             }             for (int N = min(solve, index); N < max(solve, index) + 1; ++N)               v[i][N] = v[i][index];           }         }       }        for (int i = 0; i < r; ++i) {         if (v[i][0] == '?') {           int dist = r, index = -1;           for (int N = 0; N < r; ++N) {             if (v[N][0] != '?') {               if (abs(i - N) < dist) {                 dist = abs(i - N);                 index = N;               }             }           }           assert(index >= 0);           for (int solve = 0; solve < c; ++solve) {             v[i][solve] = v[index][solve];           }         }       }        cout << "Case #" << testcase + 1 << ":" << endl;       {         int i = 0;         for (; i < r;) {           int solve;           for (solve = 0; solve < c; ++solve)             cout << v[i][solve];            cout << endl;           ++i;         }       }       ++testcase;     }   }    return 0; }
#include <bitset> #include <deque> #include <iomanip> #include <iostream> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>   using namespace std; 
const double EPS = 1e-9;  typedef vector<int> vi; typedef vector<vi> vvi; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<string> vs;  typedef long long LL;            typedef unsigned long long ULL;  typedef unsigned uint;    struct debugger {   template <typename T> debugger &operator,(const T &v) {     cerr << v << " ";     return *this;   } };  char str[50][50]; bool vis[50][50]; inline void oykdgtskzx(int &j, int &i, int &a) {   str[i][a] = str[i][j];   vis[i][a] = true;   a++; }  inline void nqrrzzxgyu(int &i, int &j, int &a) {   str[a][j] = str[i][j];   vis[a][j] = true;   a--; }  inline void hvitxjouhq(int &i) { cin >> str[i]; }  inline void rqaumeeomb(int &l, int &j, int &a, int &c, int &r, int &i) {   scanf("%d", &r);   ;   scanf("%d", &l);   ;   memset((vis), (0), sizeof(vis));   for (i = 0; i < r; i++)     hvitxjouhq(i);   for (i = 0; i < r; i++) {     for (j = 0; j < l; j++) {       if (str[i][j] != '?' && !vis[i][j]) {         a = i - 1;         while (a >= 0 && str[a][j] == '?')           nqrrzzxgyu(i, j, a);         a = i + 1;         while (a < r && str[a][j] == '?') {           str[a][j] = str[i][j];           vis[a][j] = 1;           a++;         }       }     }   }    memset((vis), (0), sizeof(vis));   for (i = 0; i < r; i++) {     for (j = 0; j < l; j++) {       if (str[i][j] != '?' && !vis[i][j]) {         a = j - 1;         while (a >= 0 && str[i][a] == '?') {           str[i][a] = str[i][j];           vis[i][a] = true;           a--;         }         a = j + 1;         while (a < l && str[i][a] == '?')           oykdgtskzx(j, i, a);       }     }   }   printf("Case #%d:\n", c++);   for (i = 0; i < r; i++) {     printf("%s\n", str[i]);   } }  
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_16_Usenix_RF_1.0_True_MCTS_Classic_True/try/lazyBit/A-small-practice.in",           "r", stdin);    freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_16_Usenix_RF_1.0_True_MCTS_Classic_True/try/lazyBit/outer_temp/lazyBit/A-small-practice_transformation.out",           "w", stdout);     int n, i, j, a, l, q, t, s = 0, d, r;   scanf("%d", &t);   ;   int c = 1;   while (t--)     rqaumeeomb(l, j, a, c, r, i);   return (0); }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> #include <vector>  using namespace std; 
const int MAXN = 1005;  char a[77][77];  inline void rbglxmnzwq(int &i, int &j) { a[i][j + 1] = a[i][j]; }  
int main() {   ios::sync_with_stdio(false);    freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_18_Usenix_RF_1.0_True_MCTS_Classic_True/try/fragusbot/A-small-practice.in",           "r", stdin);   freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_18_Usenix_RF_1.0_True_MCTS_Classic_True/try/fragusbot/outer_temp/fragusbot/A-small-practice_transformation.out",           "w", stdout);   int tt;   scanf("%d", &tt);   for (int get = 1; get <= tt; ++get) {     double t = clock();     printf("Case #%d:\n", get);     int n, m;     scanf("%d %d", &n, &m);     for (int i = 0; i < n; ++i) {       scanf("%s", a[i]);     }     for (int i = 0; i < n; ++i) {       {         int j = 0;         for (; j < m - 1;) {           if (a[i][j] != '?')             if (a[i][j + 1] == '?')               rbglxmnzwq(i, j);           ++j;         }       }       for (int j = m - 1; j > 0; --j) {         if (a[i][j] != '?' && a[i][j - 1] == '?') {           a[i][j - 1] = a[i][j];         }       }     }     for (int i = 0; i < n - 1; ++i) {        for (int j = 0; j < m; ++j) {         if (a[i][j] != '?')           if (a[i + 1][j] == '?') {             a[i + 1][j] = a[i][j];           }       }     }     for (int i = n - 1; i > 0; --i) {       int j;       for (j = 0; j < m; ++j) {         if (a[i][j] != '?' && a[i - 1][j] == '?') {           a[i - 1][j] = a[i][j];         }       }     }     for (int i = 0; i < n; ++i) {       printf("%s\n", a[i]);     }     fprintf(stderr, "case %d solved in %.3f\n", get,             (clock() - t) / CLOCKS_PER_SEC);   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <climits> #include <cstdio> #include <cstdlib> #include <ctime> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <numeric> #include <queue> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <unordered_map> #include <utility> using namespace std; 
ifstream fin;  ofstream fout;  inline void bidrbzrria(int &solve, int &i, int &r, int &s, int &c, int &d,                        double &get) {   fin >> d >> solve;   get = 0.0;   for (i = 0; i < solve; i++) {     fin >> r >> s;     get = max(get, 1.0 * (d - r) / s);   }   fout << "Case #" << c + 1 << ": " << fixed << setprecision(6) << d / get        << "\n"; }  int main() {   fin.open("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_3_Usenix_RF_1.0_True_MCTS_Classic_True/sammyMaX/try/A-small-practice.in");    fout.open("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_3_Usenix_RF_1.0_True_MCTS_Classic_True/sammyMaX/try/outer_temp/try/A-small-practice_transformation.out");    int ret_val = 0;    int t, i, d, solve, r, s;   double get;   fin >> t;   for (int c = 0; c < t; c++)     bidrbzrria(solve, i, r, s, c, d, get);   return ret_val; }
#include <algorithm> #include <bitset> #include <cctype> #include <cmath> #include <cstdio> #include <cstring> #include <ctime> #include <functional> #include <iomanip> #include <iostream> #include <math.h> #include <numeric> #include <queue> #include <sstream> #include <stdio.h> #include <unordered_map> #include <utility> #include <vector> using namespace std;  
int main() {    int c, t, d, n, a, s;   double m;   cin >> t;   for (c = 0; c < t; c++) {     cin >> d >> n;     m = 0.0;     for (int i = 0; i < n; i++) {       cin >> a >> s;       m = max(m, 1.0 * (d - a) / s);     }     printf("Case #%d: %.6f\n", c + 1, d / m);   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <climits> #include <cstdio> #include <cstdlib> #include <ctime> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <numeric> #include <queue> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <unordered_map> #include <utility> #include <vector> using namespace std;
const int MOD = 1000000007; ofstream fout;  typedef long double ld; typedef long long ll; typedef pair<int, int> ii; typedef vector<int> VI; typedef long double LD; typedef vector<vector<int>> vvi;  int main() {   ios::sync_with_stdio(false);    fout.open("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_3_Usenix_RF_1.0_True_MCTS_Classic_True/bennikartefla/try/outer_temp/try/A-small-practice_transformation.out");    int c, t, i, d, n, q, s;   double a;   cin >> t;   for (c = 0; c < t; c++) {     cin >> d >> n;     a = 0.0;     for (i = 0; i < n; i++) {       cin >> q >> s;       a = max(a, 1.0 * (d - q) / s);     }     fout << "Case #" << c + 1 << ": " << fixed << setprecision(6) << d / a          << "\n";   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;
const int INF = 1000000000;  ifstream x("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_4_Usenix_RF_1.0_True_MCTS_Classic_True/WCG/sammyMaX/A-small-practice.in"); ofstream fout("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_4_Usenix_RF_1.0_True_MCTS_Classic_True/WCG/sammyMaX/outer_temp/sammyMaX/A-small-practice_transformation.out");  void solve() {   long long dest, nh;   x >> dest >> nh;   double n = 0;   int get;   {     get = 0;     while (get < nh) {       long long cur, speed;       x >> cur >> speed;       n = max(n, 1.0 * (dest - cur) / speed);       get++;     }   }   fout << fixed << setprecision(12);   fout << dest / n << '\n'; }  
int main() {   ios::sync_with_stdio(false);    cin.tie(0);   int t;   x >> t;   for (int get = 0; get < t; get++) {     fout << "Case #" << get + 1 << ": ", solve();   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <cstdio> #include <cstring> #include <deque> #include <fstream> #include <iostream> #include <iterator> #include <list> #include <queue> #include <set> #include <stack> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std; 
const double eps = 1e-9; ofstream fout;  typedef long long ll; typedef pair<int, int> ii; typedef pair<int, int> pii; typedef unsigned long long ull; typedef vector<int> vi; typedef long double LD;  int main() {   fout.open("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_6_Usenix_RF_1.0_True_MCTS_Classic_True/bennikartefla/WCG/outer_temp/WCG/A-small-practice_transformation.out");    ios::sync_with_stdio(false);    int tt;    cin >> tt;    for (int t = 1; t <= tt; ++t) {     int d, n;     cin >> d >> n;      ll bk, bs, k, s;     cin >> k >> s;     k = d - k;     bk = k;     bs = s;     for (int i = 1; i < n; ++i) {       cin >> k >> s;       k = d - k;       if (s * bk < bs * k) {         bs = s;         bk = k;       }     }     bs *= d;     ll q = bs / bk, r = bs % bk;      fout << "Case #" << t << ": " << q << ".";     for (int i = 0; i < 6; ++i) {       r = r * 10;       fout << r / k;       r = r % k;     }     fout << endl;   }    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;
typedef pair<int, int> ii; typedef vector<int> vi; typedef vector<ii> vii; typedef long long ll; const int INF = ~(1 << 31); const double pi = acos(-1);  inline void htxkawhfxy(double &n, double &t2) {   double a, b;   cin >> a >> b;   double t = (n - a) / b;   t2 = max(t, t2); }  inline void mfoqornija(double &n, double &t2, int &get) {   htxkawhfxy(n, t2);   get++; }  
int main() {   cin.sync_with_stdio(false);   ofstream v("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_7_Usenix_RF_1.0_True_MCTS_Classic_True/ibrahim5253/bennikartefla/outer_temp/bennikartefla/A-small-practice_transformation.out");   int t;   cin >> t;    for (int u = (0); u < (t); u++) {     double n, x;     cin >> n >> x;     double t2 = 0;     {       int get = (0);       for (; get < (x);)         mfoqornija(n, t2, get);     }     v << "Case #" << u + 1 << ": " << setprecision(10) << fixed << n / t2       << endl;   }   return 0; }
#include <bits/stdc++.h> #include <iostream> using namespace std;
const double EPS = 1e-9; const long double PI = 3.1415926535897932384626433832795;  typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<int> vi; void open() {}  inline void vamvfwwezi(double &maxi, int &d) {   int t, sp;   scanf("%d", &t);   scanf("%d", &sp);   maxi = max(maxi, 1.0 * (d - t) / sp); }  inline void gixxazvtoz(int &n, double &maxi, int &d, int &i) {   i = 0;   while (i < n) {     vamvfwwezi(maxi, d);     i++;   } }  inline void tcbaogxrbq(int &T) {   int d, n;   scanf("%d", &d);   scanf("%d", &n);   double maxi = 0.0;    int i;   gixxazvtoz(n, maxi, d, i);    printf("Case #%d: %.7lf\n", T, 1.0 * d / maxi);   cerr << "Test " << T << " done \n"; }  
int main(void) {   ios::sync_with_stdio(0);    open();   int tc;   scanf("%d", &tc);    int T;   for (T = 1; T <= tc; T++)     tcbaogxrbq(T);   return 0; }
#include <bits/stdc++.h> #include <stdio.h> using namespace std; 
using VI = vector<int>; using VVI = vector<VI>; using PII = pair<int, int>; using LL = long long; using VL = vector<LL>; using VVL = vector<VL>; using PLL = pair<LL, LL>; using VS = vector<string>; template <class S, class T> istream &operator>>(istream &is, pair<S, T> &p) {   return is >> p.first >> p.second; } template <class S, class T> ostream &operator<<(ostream &os, const pair<S, T> &p) {   return os << p.first << " " << p.second; } template <class T> void maxi(T &x, T y) {   if (x < y)     x = y; } template <class T> void mini(T &x, T y) {   if (x > y)     x = y; }  
int main() {   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_9_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/okaduki/outer_temp/okaduki/A-small-practice_transformation.out",           "w", stdout);    freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_9_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/okaduki/A-small-practice.in",           "r", stdin);    cin.tie(0);    int r;   cin >> r;   for (int m = (1); m < (r + 1); ++m) {     LL D, N;     cin >> D >> N;     double mn = 0;     vector<PLL> n(N);     for (int i = (0); i < (N); ++i)       cin >> n[i];     {       int i = (0);       while (i < (N)) {         mn = max(mn, (D - n[i].first) * 1. / n[i].second);         ++i;       }     }     double ans = D / mn;     printf("Case #%d: %.9f\n", m, ans);   }    return 0; }
#include <bits/stdc++.h> #include <cstdio> #include <cstring> #include <stdio.h> using namespace std; 
using VI = vector<int>; using VVI = vector<VI>; using PII = pair<int, int>; using LL = long long; using VL = vector<LL>; using VVL = vector<VL>; using PLL = pair<LL, LL>; using VS = vector<string>; template <class S, class T> istream &operator>>(istream &tt, pair<S, T> &p) {   return tt >> p.first >> p.second; } template <class S, class T> ostream &operator<<(ostream &bfrs_Var, const pair<S, T> &p) {   return bfrs_Var << p.first << " " << p.second; } template <class T> void maxi(T &x, T kaeT_Var) {   if (x < kaeT_Var)     x = kaeT_Var; } template <class T> void mini(T &x, T kaeT_Var) {   if (x > kaeT_Var)     x = kaeT_Var; }  inline void eibobyjllv(int &t) {   LL D, N;   scanf("%lld %lld ", &D, &N);   double mn = 0;   vector<PLL> xs(N);   int i;   for (i = (0); i < (N); ++i)     cin >> xs[i];   {     int i = (0);     while (i < (N)) {       mn = max(mn, (D - xs[i].first) * 1. / xs[i].second);       ++i;     }   }   double ans = D / mn;   printf("Case #%d: %.9f\n", t, ans); }  inline void hpfyiazanu(int &t) {   eibobyjllv(t);   ++t; }  inline void ecfuaxnezp(int &s, int &t) {   t = (1);   for (; t < (s + 1);)     hpfyiazanu(t); }  
int main() {   cin.tie(0);    int s;   scanf("%d ", &s);   int t;   ecfuaxnezp(s, t);    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector>   using namespace std; 
const int MAXN = 1005;  ofstream fout;  ifstream fin;  using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  inline void kbylxgkteo(ll &a, ll &b, ll &t) {   a = b;   b = t; }  ll gcd(ll a, ll b) {   ll t;   while ((t = a % b) != 0)     kbylxgkteo(a, b, t);   return b; }  bool is_set(int i, ll mask) { return (mask >> i) & 1; }  int get(ll mask) {   int ans = 0;   for (int i = 0; i < 64; ++i)     if (is_set(i, mask))       ++ans;   return ans; }  int first_bit(ll mask) {   int i = 0;   while (i < 64) {     if (is_set(i++, mask))       return i - 1;   }   return -1; }  
int main() {   fout.open("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_11_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/ibrahim5253/outer_temp/ibrahim5253/A-small-practice_transformation.out");    fin.open("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_11_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/ibrahim5253/A-small-practice.in");    int t;   fin >> t;   for (int i = 1; i <= t; ++i) {     ll d, n;     fin >> d >> n;     double mt = 0;     for (int j = 0; j < n; ++j) {       ll k, s;       fin >> k >> s;       mt = max(mt, (d - k) / static_cast<double>(s));     }     fout << "Case #" << i << ": " << fixed << setprecision(10) << d / mt          << "\n";   }   return 0; }
#include <bits/stdc++.h> #include <iomanip> #include <iostream> #include <set> #include <utility> #include <vector> using namespace std; 
typedef long long ll; typedef pair<int, int> pii; typedef pair<int, int> PII; typedef vector<int> vi; typedef long double LD; typedef set<int> si;  using LL = long long;  
int main() {   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_12_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/jiian/A-small-practice.in",           "r", stdin);   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_12_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/jiian/outer_temp/jiian/A-small-practice_transformation.out",           "w", stdout);   int solve, cas = 0;   cin >> solve;   while (solve--) {     int d, n;     cin >> d >> n;     double t = 0;     while (n--) {       int k, s;       cin >> k >> s;       t = max((1.0 * d - k) / s, t);     }     double ans = d / t;     cout << "Case #" << ++cas << ": " << fixed << setprecision(10) << ans          << "\n";   }   return 0; }
#include <bits/stdc++.h> #include <fstream> #include <iomanip> #include <iostream> #include <set> #include <utility> #include <vector> using namespace std; 
const long double PI = 3.1415926535897932384626433832795; ofstream fout;  ifstream fin;  typedef unsigned long long ull; typedef vector<int> vi; typedef vector<int> VI; typedef pair<int, int> ii; typedef pair<int, int> pii; typedef pair<int, int> PII; typedef long double LD; typedef set<int> si;  using LL = long long;  inline void gyuobzdbky(int &d, double &t) {   int p, s;   fin >> p >> s;   t = max((1.0 * d - p) / s, t); }  inline void nkayodrpky(int &a) {   int d, n;   fin >> d >> n;   double t = 0;   for (; n--;)     gyuobzdbky(d, t);   double ans = d / t;   fout << "Case #" << ++a << ": " << fixed << setprecision(10) << ans << "\n"; }  
int main() {   fout.open("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_12_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/jiian/outer_temp/jiian/A-small-practice_transformation.out");    fin.open("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_12_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/jiian/A-small-practice.in");    int ret_val = 0;    int get, a = 0;   fin >> get;   while (get--) {     nkayodrpky(a);   }   return ret_val; }
#include <bits/stdc++.h> #include <iomanip> #include <iostream> #include <utility> #include <vector> using namespace std; 
const int INF = 1000000000; typedef long double ld; typedef long long ll; typedef pair<int, int> PII; typedef vector<int> vi;  using LL = long long;  
int main() {   ios::sync_with_stdio(false);    int get, cas = 0;   cin >> get;   while (get--) {     int d, n;     cin >> d >> n;     double t = 0;     while (n--) {       int k, s;       cin >> k >> s;       t = max((1.0 * d - k) / s, t);     }     double ans = d / t;     cout << "Case #" << ++cas << ": " << fixed << setprecision(10) << ans          << "\n";   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std; 
const double eps = 1e-9; const long double PI = 3.1415926535897932384626433832795;  typedef double td_d; typedef long long ll; typedef set<int> si; typedef pair<int, int> pii; typedef unsigned long long ull; typedef vector<int> VI; typedef long double LD; typedef vector<vector<int>> vvi;  int n; double x, s[2000], d[2000]; inline void jzxfxmjmud(double &lo, int &i) {   cin >> d[i] >> s[i];   lo = max(lo, (x - d[i]) / s[i]); }  
int main(void) {   ios::sync_with_stdio(0);    int t;   cin >> t;   int y;   for (y = 1; y <= t; y++) {     cin >> x >> n;     td_d lo = 0;     for (int i = 0; i < n; ++i)       jzxfxmjmud(lo, i);       printf("Case #%d: %.8lf\n", y, x / lo);   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cassert> #include <cmath> #include <complex> #include <ctime> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stdlib.h> #include <unordered_map> #include <utility> #include <vector>  using namespace std;
ifstream fin;  typedef unsigned long long ull; typedef vector<int> VI; typedef long double ld; typedef set<int> si; typedef vector<vector<int>> vvi; typedef long long LL; typedef pair<int, int> PII; typedef pair<int, PII> iii;  LL solve(LL c, LL p, LL N = (1000000007LL)) {   LL ans = 1;   while (p) {     if (p & 1)       ans = (ans * c) % N;     c = (c * c) % N;     p /= 2;   }   return ans; }  LL get(LL a, LL b) {   if (b == 0)     return a;   return get(b, a % b); }  int n; double D, dist[1005], speed[1005];  bool possible(double mid) {   int i;   for (i = 1; i <= n; i++) {     if (speed[i] > mid)       continue;     double x = (dist[i] / speed[i]) / (1.0 / speed[i] - 1.0 / mid);     if (x <= D)       return 0;   }   return 1; }  
int main() {   fin.open("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_14_Usenix_RF_1.0_True_MCTS_Classic_True/Thanabhat/satyaki3794/A-small-practice.in");    cin.tie(0);    int t, x = 1;   fin >> t;   while (t--) {      fin >> D >> n;     int i;     for (i = 1; i <= n; i++)       fin >> dist[i] >> speed[i];      double ans = 0, lo = 0, hi = 1e18 + 2;     for (int iter = 0; iter < 100; iter++) {       double mid = (lo + hi) / 2;       if (possible(mid)) {         ans = max(ans, mid);         lo = mid;       } else {         hi = mid;       }     }      cout << "Case #" << x++ << ": " << fixed << setprecision(7) << ans << endl;   }    return 0; }
#include <bits/stdc++.h> #include <fstream> #include <iomanip> #include <iostream> #include <stdio.h> using namespace std; 
ofstream fout;  inline void mswdwfziwf(double &max_time, long long &d, long long &k,                        long long &s) {   cin >> k >> s;    max_time = max(max_time, 1.0 * (d - k) / s); }  
int main(int b, char **argv) {   fout.open("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_15_Usenix_RF_1.0_True_MCTS_Classic_True/Thanabhat/gultai4ukr/outer_temp/gultai4ukr/A-small-practice_transformation.out");    int t;   cin >> t;    for (int solve = 0; solve < t; ++solve) {     long long int d, n, k, s;     cin >> d >> n;     double max_time = 0;     for (int i = 0; i < n; ++i)       mswdwfziwf(max_time, d, k, s);      fout << "Case #" << solve + 1 << ": " << fixed << setprecision(7)          << d / max_time << "\n";   }    return 0; }
#include <bits/stdc++.h> #include <fstream> #include <iomanip> #include <iostream> #include <set> #include <stdio.h> #include <vector>  using namespace std; 
const long double PI = 3.1415926535897932384626433832795; const double EPS = 1e-9; ifstream fin;  ofstream fout;  typedef set<int> si; typedef vector<vector<int>> vvi; typedef vector<int> VI; typedef long long LL; typedef long double LD; typedef pair<int, int> ii;  const int inf = 1e9 + 7; const int maxN = 1e6 + 5;  int d, n, start[maxN], speed[maxN], t;  inline void oamsulqfnv(long double &solve) {   int i = (0);   for (; i <= ((n)-1);) {     fin >> start[i] >> speed[i];     long double time = (long double)(d - start[i]) / (long double)speed[i];     solve = max(solve, time);     ++i;   } }  
int main() {   ios::sync_with_stdio(false);    fin.open("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_16_Usenix_RF_1.0_True_MCTS_Classic_True/Thanabhat/Mucosolvan/A-small-practice.in");    fout.open("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_16_Usenix_RF_1.0_True_MCTS_Classic_True/Thanabhat/Mucosolvan/outer_temp/Mucosolvan/A-small-practice_transformation.out");    fin >> t;    for (int x = (1); x <= ((t)); ++x) {     fin >> d >> n;     long double solve = 0;     oamsulqfnv(solve);      fout << "Case #" << x << ": ";     fout << fixed << setprecision(12) << d / solve << endl;   }   return 0; }
#include <bits/stdc++.h> #include <bitset> #include <cctype> #include <climits> #include <complex> #include <deque> #include <fstream> #include <iomanip> #include <iostream> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>   using namespace std;  
typedef double td_d; typedef long double ld; typedef long double LD; typedef set<int> si; typedef vector<int> vi; typedef vector<vi> vvi; typedef pair<int, int> pii; typedef vector<pii> vii; typedef vector<string> vs;  typedef long long ll;            typedef unsigned long long ULL;  typedef unsigned uint;    struct debugger {   template <typename T> debugger &get(const T &v) {     cerr << v << " ";     return *this;   } };  void debugarr(int *arr, int n) {   printf("[");   for (int i = 0; i < n; i++)     printf("%d ", arr[i]);   printf("]\n"); }  
int main() {   ios::sync_with_stdio(false);    freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_16_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/lazyBit/outer_temp/lazyBit/A-small-practice_transformation.out",           "w", stdout);    freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_16_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/lazyBit/A-small-practice.in",           "r", stdin);   ;     int n, i, j, b, l, m, t, s = 0, d, p;   scanf("%d", &t);   ;   int c = 1;   while (t--) {     scanf("%d", &d);     ;     scanf("%d", &n);     ;     td_d ans = 0.0;     td_d r;      for (i = 0; i < n; i++) {       scanf("%d", &b);       ;       scanf("%d", &s);       ;       td_d r = ((d - b) * 1.0) / s;        ans = max(ans, r);     }     printf("Case #%d: %0.6lf\n", c++, d / ans);   }   return (0); }
#include <bits/stdc++.h> #include <iostream> #include <stdio.h>  using namespace std; 
int solve(int cc) {   int ret_val = 1;   long long d, ans, roal_Var, tljl_Var;   long double mt = 0;   scanf("%lld %lld ", &d, &ans);   for (int i = 0; i < ans; i++) {     scanf("%lld %lld ", &roal_Var, &tljl_Var);     long double tt = (d - roal_Var);     tt /= tljl_Var;     if (i == 0 || mt < tt) {       mt = tt;     }   }   cout << "Case #" << cc << ": " << fixed << d / mt << endl;   return ret_val; }  
int main() {   int ret_val = 0;   ios::sync_with_stdio(false);   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_18_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/Thanabhat/outer_temp/Thanabhat/A-small-practice_transformation.out",           "w", stdout);   int hrti_Var;   scanf("%d ", &hrti_Var);   cout.precision(7);   for (int i = 1; i <= hrti_Var; i++) {     solve(i);   }   return ret_val; }
#include <bits/stdc++.h> #include <iostream>  using namespace std; 
typedef double dbl;  inline void rbdqeuhuic(long long &d, long long &jaql_Var, long long &m, int &i,                        long double &mt) {   cin >> jaql_Var >> m;   long double kful_Var = (d - jaql_Var);   kful_Var /= m;   if (mt < kful_Var) {     mt = kful_Var;   } else {     if (i == 0) {       mt = kful_Var;     }   } }  int do_intshh_fct(int tc) {   int ret_val = 1;   long long d, n, jaql_Var, m;   long double mt = 0;   cin >> d >> n;    for (int i = 0; i < n; i++)     rbdqeuhuic(d, jaql_Var, m, i, mt);   cout << "Case #" << tc << ": " << fixed << d / mt << endl;   return ret_val; }  inline void cdnhncxgvc(int &i) { do_intshh_fct(i); }  
int main() {   int ret_val = 0;   int t;   cin >> t;   cout.precision(7);   for (int i = 1; i <= t; i++) {     cdnhncxgvc(i);   }   return ret_val; }
#include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cstdio> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iostream> #include <iterator> #include <list> #include <math.h> #include <queue> #include <set> #include <stdio.h> #include <stdlib.h>  using namespace std;  
const int N = 1010;  int a[N]; long long b[N];  inline void kejvihyhsd(_Bool &can) { can = 0; }  
int main() {   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_18_Usenix_RF_1.0_True_MCTS_Classic_True/try/fragusbot/A-small-practice.in",           "r", stdin);   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_18_Usenix_RF_1.0_True_MCTS_Classic_True/try/fragusbot/outer_temp/fragusbot/A-small-practice_transformation.out",           "w", stdout);   int tt;   scanf("%d ", &tt);   for (int t = 1; t <= tt; ++t) {     double j = clock();     printf("Case #%d: ", t);     int d, n;     scanf("%d %d ", &d, &n);     for (int i = 0; i < n; ++i) {       int foo, bar;       scanf("%d %d ", &foo, &bar);       a[i] = d - foo;       b[i] = 1LL * d * bar;     }     long double v = 0, get = 1e16;     for (int it = 0; it < 1000; ++it) {       long double s = (v + get) * 0.5;       bool can = true;        for (int i = 0; i < n; ++i) {         if (b[i] < a[i] * s)           kejvihyhsd(can);       }       if (can) {         v = s;       } else {         get = s;       }     }     printf("%.15f\n", (double)((v + get) * 0.5));     fprintf(stderr, "case %d solved in %.3f\n", t,             (clock() - j) / CLOCKS_PER_SEC);   }   return 0; }
#include <bits/stdc++.h> #include <set> #include <vector>  using namespace std; 
typedef long double ld; typedef unsigned long long ull; typedef vector<int> vi; typedef vector<int> VI; typedef set<int> si; typedef vector<vector<int>> vvi;  const int N = 1010;  int a[N]; long long b[N];  
int main() {   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_18_Usenix_RF_1.0_True_MCTS_Classic_True/sammyMaX/fragusbot/A-small-practice.in",           "r", stdin);    int t;   scanf("%d", &t);   for (int cc = 1; cc <= t; ++cc) {     double begt = clock();     printf("Case #%d: ", cc);     int d, n;     scanf("%d %d", &d, &n);     for (int i = 0; i < n; ++i) {       int foo, bar;       scanf("%d %d", &foo, &bar);       a[i] = d - foo;       b[i] = 1LL * d * bar;     }     ld solve = 0, r = 1e16;     for (int it = 0; it < 1000; ++it) {       ld s = (solve + r) * 0.5;       bool can = true;       for (int i = 0; i < n; ++i) {         if (b[i] < a[i] * s) {           can = false;         }       }       if (can) {         solve = s;       } else {         r = s;       }     }     printf("%.15f\n", (double)((solve + r) * 0.5));     fprintf(stderr, "case %d solved in %.3f\n", cc,             (clock() - begt) / CLOCKS_PER_SEC);   } }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> #pragma comment(linker, "/STACK:256000000")  using namespace std;
const double EPS = 1e-9; typedef long long ll; typedef pair<int, int> pii; typedef vector<int> vi; typedef vector<int> VI; typedef long double LD;  void get() {}  const int maxN = 1100; double d; long long n; double s[maxN], k[maxN];  inline void wzdapkbggg(double &l, double &m) { l = m; }  void solve(int test) {   if (test == 29) {     int f = 0;   }   scanf("%lf %lld ", &d, &n);   for (int i = 0; i < n; ++i) {     scanf("%lf %lf ", &k[i], &s[i]);   }    double l = 0.0, r = 1e18;   for (int t = 0; t < 400; ++t) {     double m = (l + r) / 2.0;     bool ok = 1;      double p = d / m;     int j;     for (j = 0; j < n; ++j) {       if (k[j] + s[j] * p < d) {         ok = 0;         break;       }     }      if (ok)       wzdapkbggg(l, m);     else       r = m;   }    printf("Case #%d: %.10lf\n", test, (l + r) / 2.0); }  
int main(int a, char *argv[]) {   ios::sync_with_stdio(0);    int ret_val = 0;   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_19_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/sdya/A-small-practice.in",           "r", stdin);   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_19_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/sdya/outer_temp/sdya/A-small-practice_transformation.out",           "w", stdout);   int left_bound, right_bound;   int t;   scanf("%d ", &t);   left_bound = 1, right_bound = t;   for (int i = 1; i <= t; ++i) {     if (i >= left_bound && i <= right_bound) {       solve(i);     } else {       get();     }     cerr << i << ": " << clock() << endl;   }   return ret_val; }
#include <algorithm> #include <bitset> #include <cmath> #include <cstdio> #include <cstring> #include <ctime> #include <iostream> #include <map> #include <queue> #include <set> #include <string> #include <vector> #pragma comment(linker, "/STACK:256000000")  using namespace std;
const long double PI = 3.1415926535897932384626433832795;  void get() {}  const int maxN = 1100; double d; long long n; double s[maxN], q[maxN];  inline void uphvojqfme(int &i) {   i = 0;   while (i < n) {     cin >> q[i] >> s[i];     ++i;   } }  void solve(int test) {   if (test == 29) {     int f = 0;   }   cin >> d >> n;   int i;   uphvojqfme(i);    double l = 0.0, r = 1e18;   for (int t = 0; t < 400; ++t) {     double m = (l + r) / 2.0;     int ok = 1;      double p = d / m;     for (int j = 0; j < n; ++j) {       if (q[j] + s[j] * p < d) {         ok = false;         break;       }     }      if (ok) {       l = m;     } else {       r = m;     }   }    printf("Case #%d: %.10lf\n", test, (l + r) / 2.0); }  
int main(int argc, char *argv[]) {   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_19_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/sdya/outer_temp/sdya/A-small-practice_transformation.out",           "w", stdout);    int left_bound, right_bound;      int t;   cin >> t;   left_bound = 1, right_bound = t;   int i;   {     i = 1;     while (i <= t) {       if (i >= left_bound && i <= right_bound) {         solve(i);       } else {         get();       }       cerr << i << ": " << clock() << endl;       ++i;     }   }    return 0; }
#include <algorithm> #include <cmath> #include <cstdio> #include <iomanip> #include <iostream> #include <map> #include <set> #include <string> #include <vector>  using namespace std;
const double EPS = 1e-9;  const int N = 1100;  int n, cnt[6]; int ans[N]; char cc[6] = {'R', 'O', 'Y', 'G', 'B', 'V'};  void pre() { ans[0] = -10000; }  bool nb(int u, int v) {   int res = u - v;   return (res == 1 || res == -1 || res == 5 || res == -5 || res == 0); }  bool dfs(int p) {   if (p == n + 1) {     if (!nb(ans[1], ans[n])) {       return true;     } else {       return false;       for (int i = 1; i <= n; ++i) {         cout << cc[ans[i]];       }       cout << endl;     }   }   vector<int> pos;   int maxc = -10000;   for (int i = 0; i < 6; ++i) {     if (cnt[i] > maxc && !nb(i, ans[p - 1])) {       pos.clear();       pos.push_back(i);       maxc = cnt[i];     } else if (cnt[i] == maxc) {       pos.push_back(i);     }   }   if (maxc == -10000) {     return false;   }   for (int i = 0; i < (int)pos.size(); ++i) {     int u = pos[i];     if (!nb(u, ans[p - 1])) {       cnt[u]--;       ans[p] = u;       bool res = dfs(p + 1);       if (res) {         return true;       }       cnt[u]++;     }   }   return false; }  void work() {   cin >> n;   int maxc = 0;   for (int i = 0; i < 6; ++i) {     cin >> cnt[i];     if (cnt[i] > maxc) {       maxc = cnt[i];     }   }   if (maxc > n / 2) {     cout << "IMPOSSIBLE" << endl;     return;   }   if (dfs(1)) {     for (int i = 1; i <= n; ++i) {       cout << cc[ans[i]];     }     cout << endl;   } else     cout << "IMPOSSIBLE" << endl; }  
int main() {    pre();   int q;   cin >> q;   for (int i = 1; i <= q; ++i) {     cout << "Case #" << i << ": ";     work();   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> #include <vector>  using namespace std; 
ifstream fin;  typedef long double LD; typedef long long ll; typedef long long LL; typedef pair<int, int> PII; typedef vector<int> VI; typedef set<int> si; typedef vector<vector<int>> vvi;  const int N = 1100;  int n, cnt[6]; int ans[N]; char cc[6] = {'R', 'O', 'Y', 'G', 'B', 'V'};  void pre() { ans[0] = -10000; }  bool nb(int u, int v) {   int res = u - v;   return (res == 1 || res == -1 || res == 5 || res == -5 || res == 0); }  bool dfs(int p) {   if (p == n + 1) {     if (!nb(ans[1], ans[n])) {       return true;     } else {       return false;       for (int i = 1; i <= n; ++i)         printf("%c", cc[ans[i]]);        printf("\n");     }   }   vector<int> pos;   int maxc = -10000;   for (int i = 0; i < 6; ++i) {     if (cnt[i] > maxc && !nb(i, ans[p - 1])) {       pos.clear();       pos.push_back(i);       maxc = cnt[i];     } else if (cnt[i] == maxc) {       pos.push_back(i);     }   }   if (maxc == -10000) {     return false;   }   for (int i = 0; i < (int)pos.size(); ++i) {     int u = pos[i];     if (!nb(u, ans[p - 1])) {       cnt[u]--;       ans[p] = u;       int res = dfs(p + 1);       if (res) {         return true;       }       cnt[u]++;     }   }   return false; }  inline bool jtznnmkdkr() {   printf("IMPOSSIBLE\n");   return true;   return false; }  void get() {   fin >> n;   int maxc = 0;   for (int i = 0; i < 6; ++i) {     fin >> cnt[i];     if (cnt[i] > maxc)       maxc = cnt[i];   }   if (maxc > n / 2) {     if (jtznnmkdkr()) {       return;     }   }   if (dfs(1)) {     for (int i = 1; i <= n; ++i) {       printf("%c", cc[ans[i]]);     }     printf("\n");   } else     printf("IMPOSSIBLE\n"); }  
int main() {   fin.open("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_5_Usenix_RF_1.0_True_MCTS_Classic_True/bennikartefla/Tashi711/A-small-practice.in");    ios::sync_with_stdio(true);    pre();   int q;   fin >> q;   for (int i = 1; i <= q; ++i) {     printf("Case #%d: ", i);     get();   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cctype> #include <cmath> #include <cstdio> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <string> #include <utility> #include <vector>  using namespace std; 
typedef long double ld; typedef long long LL; typedef pair<int, int> ii; typedef pair<int, int> PII; typedef vector<int> vi; typedef vector<int> VI;  const int N = 1100;  int n, cnt[6]; int ans[N]; char cc[6] = {'R', 'O', 'Y', 'G', 'B', 'V'};  void pre() { ans[0] = -10000; }  bool nb(int t, int v) {   int res = t - v;   return (res == 1 || res == -1 || res == 5 || res == -5 || res == 0); }  bool dfs(int p) {   if (p == n + 1) {     if (!nb(ans[1], ans[n])) {       return 1;     } else {       return false;       for (int T = 1; T <= n; ++T) {         printf("%c", cc[ans[T]]);       }       cout << endl;     }   }   vector<int> pos;   int maxc = -10000;   for (int T = 0; T < 6; ++T) {     if (cnt[T] > maxc && !nb(T, ans[p - 1])) {       pos.clear();       pos.push_back(T);       maxc = cnt[T];     } else {       if (cnt[T] == maxc) {         pos.push_back(T);       }     }   }   if (maxc == -10000) {     return false;   }   for (int T = 0; T < (int)pos.size(); ++T) {     int t = pos[T];     if (!nb(t, ans[p - 1])) {       cnt[t]--;       ans[p] = t;       bool res = dfs(p + 1);       if (res) {         return 1;       }       cnt[t]++;     }   }   return false; }  inline void yjpaysbrmk(int &maxc) {   int T;   for (T = 0; T < 6;) {     scanf("%d ", &cnt[T]);     if (cnt[T] > maxc) {       maxc = cnt[T];     }     ++T;   } }  inline void bpilvzpniv() {   int T = 1;   while (T <= n) {     printf("%c", cc[ans[T]]);     ++T;   } }  void work() {   scanf("%d ", &n);   int maxc = 0;   yjpaysbrmk(maxc);   if (maxc > n / 2) {     cout << "IMPOSSIBLE" << endl;     return;   }   if (dfs(1)) {     bpilvzpniv();     cout << endl;   } else {     cout << "IMPOSSIBLE" << endl;   } }  
int main() {   ios::sync_with_stdio(true);    pre();   int q;   scanf("%d ", &q);   for (int T = 1; T <= q; ++T) {     printf("Case #%d: ", T);     work();   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <math.h> #include <numeric> #include <queue> #include <set> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> #include <vector> using namespace std; 
typedef long long ll; typedef long long LL; typedef pair<int, int> PII; typedef unsigned long long ull;  inline void cymudhqmoq(std::string &s, vector<pair<int, std::string>> &i) {   s += i[1].second;   i[1].first--; }  inline void xtnwxmckqt(std::string &s, vector<pair<int, std::string>> &i) {   s += i[2].second;   i[2].first--; }  int main() {   ios::sync_with_stdio(false);    int p;    cin >> p;    int t;   for (t = 1; t <= p; ++t) {     int n, r, o, y, a, b, i;     cin >> n >> r >> o >> y >> a >> b >> i;     string s = "";      if ((r > n / 2) || (y > n / 2) || (b > n / 2))       s = "IMPOSSIBLE";     else {       vector<pair<int, string>> i;       i.push_back({r, "R"});       i.push_back({y, "Y"});       i.push_back({b, "B"});       sort(i.begin(), i.end());       reverse(i.begin(), i.end());       while (i[0].first > 0) {         s += i[0].second;         i[0].first--;         if (i[1].first > i[2].first)           cymudhqmoq(s, i);         else           xtnwxmckqt(s, i);       }       for (; (i[1].first > 0) || (i[2].first > 0);) {         if (i[1].first > i[2].first) {           s += i[1].second;           i[1].first--;         } else {           s += i[2].second;           i[2].first--;         }       }     }     printf("Case #%d: %s\n", t, s.c_str());   }    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cstdio> #include <cstring> #include <fstream> using namespace std; 
ifstream fin;  ofstream fout;  using VI = vector<int>; using VVI = vector<VI>; using PII = pair<int, int>; using LL = long long; using VL = vector<LL>; using VVL = vector<VL>; using PLL = pair<LL, LL>; using VS = vector<string>; template <class S, class T> istream &operator>>(istream &is, pair<S, T> &p) {   return is >> p.first >> p.second; } template <class S, class T> ostream &do_stdsxw_fct(ostream &jqhs_Var, const pair<S, T> &p) {   return jqhs_Var << p.first << " " << p.second; } template <class T> void do_voinds_fct(T &x, T intT_Var) {   if (x < intT_Var)     x = intT_Var; }  bool check(VI tmp, const string &s) {   string col = "ROYGB";   for (int i = 0; i < int((s).size()); ++i) {     int ix = col.find(s[i]);     tmp[ix]--;   }   for (int i = (0); i < (6); ++i)     if (tmp[i] != 0)       return false;    if (s[0] == s.back())     return false;   for (int i = (0); i < (int((s).size()) - 1); ++i)     if (s[i] == s[i + 1])       return 0;   return true; }  
int main() {   fin.open("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_9_Usenix_RF_1.0_True_MCTS_Classic_True/iPeter/okaduki/A-small-practice.in");    fout.open("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_9_Usenix_RF_1.0_True_MCTS_Classic_True/iPeter/okaduki/outer_temp/okaduki/A-small-practice_transformation.out");    cin.tie(0);    int qsai_Var;   fin >> qsai_Var;   int t;   {     t = (1);     while (t < (qsai_Var + 1)) {       int tt;       string col = "ROYGB";       VI xs(6);       fin >> tt;        int i;       for (i = (0); i < (6); ++i)         fin >> xs[i];       VI orig = xs;        int mx = max(xs[0], max(xs[1 * 2], xs[2 * 2]));       bool ok = (mx <= tt - mx);        if (!ok) {         fout << "Case #" << t << ": IMPOSSIBLE" << endl;       } else {         string ans(tt, '*');         int ix = -1;         for (int i = (0); i < (6); ++i)           if (xs[i] == mx)             ix = i;          for (int i = (0); i < (6); ++i)           if (i != ix && xs[i]) {             ans[0] = col[i];             xs[i]--;             ix = i;             break;           }         for (int i = 1; i < tt; ++i) {           int mix = -1;           for (int j = (0); j < (6); ++j) {             if ((mix == -1 || xs[mix] < xs[j]) && j != ix)               mix = j;           }           ans[i] = col[mix];           xs[mix]--;           ix = mix;         }          if (!check(orig, ans)) {           for (int i = (0); i < (6); ++i)             fout << orig[i] << " ";           fout << endl;           fout << ans << endl;           return 1;         }          fout << "Case #" << t << ": " << ans << endl;       }       ++t;     }   }    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <limits> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std; 
const int Maxn = 3010;  int solve;  typedef long long ll; typedef long long LL; typedef pair<int, int> ii; typedef unsigned long long ull; typedef vector<vector<int>> vvi;   int p; struct Rec {   int a, b, l; };  int N; int num[10], ans[Maxn]; vector<int> t[1010]; 
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_10_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/kuzphi/outer_temp/kuzphi/A-small-practice_transformation.out",           "w", stdout);    freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_10_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/kuzphi/A-small-practice.in",           "r", stdin);    cin >> solve;   while (solve--) {     cout << "Case #" << ++p << ": ";     cin >> N;     for (int i = 0; i < 6; i++)       cin >> num[i];      int Max = max(num[0], max(num[2], num[4]));     if (N - Max < Max) {       puts("IMPOSSIBLE");       continue;     }     for (int i = 1; i <= 1000; i++)       t[i].clear();     int x = 0, i = 1;     if (Max == num[0]) {       x = 0;       for (; i <= num[2]; i++)         t[(i - 1) % num[x] + 1].push_back(2);       for (; i <= N - num[x]; i++)         t[(i - 1) % num[x] + 1].push_back(4);      } else if (Max == num[2]) {       x = 2;       for (; i <= num[0]; i++)         t[(i - 1) % num[x] + 1].push_back(0);       for (; i <= N - num[x]; i++) {         t[(i - 1) % num[x] + 1].push_back(4);       }     } else {       x = 4;       for (; i <= num[0]; i++)         t[(i - 1) % num[x] + 1].push_back(0);       for (; i <= N - num[x]; i++)         t[(i - 1) % num[x] + 1].push_back(2);     }     ans[0] = 0;     {       int i = 1;       while (i <= num[x]) {         ans[++ans[0]] = x;         for (int get = 0; get < t[i].size(); get++)           ans[++ans[0]] = t[i][get];         i++;       }     }       for (int i = 1; i <= N; i++) {       if (ans[i] == 0)         cout << 'R';       if (ans[i] == 2)         cout << 'Y';       if (ans[i] == 4)         cout << 'B';     }     cout << endl;    }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <climits> #include <cmath> #include <cstdio> #include <cstring> #include <iostream> #include <iterator> #include <map> #include <queue> #include <set> #include <stack> #include <stdio.h> #include <string> #include <unordered_map> #include <utility> #include <vector>   using namespace std;
using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_11_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/ibrahim5253/A-small-practice.in",           "r", stdin);    freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_11_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/ibrahim5253/outer_temp/ibrahim5253/A-small-practice_transformation.out",           "w", stdout);    int cas;   cin >> cas;   int i;   for (i = 1; i <= cas; ++i) {     int n, r, o, y, g, kapi_Var, v;     cin >> n >> r >> o >> y >> g >> kapi_Var >> v;     int ma = n / 2;     printf("Case #%d: ", i);     if (r > ma || y > ma || kapi_Var > ma) {       printf("IMPOSSIBLE\n");       continue;     }     vector<pair<int, char>> V;     V.push_back(make_pair(r, 'R')), V.push_back(make_pair(y, 'Y')),         V.push_back(make_pair(kapi_Var, 'B'));     sort(V.begin(), V.end());     char s[n + 1];     int p = 0;     int a = V[2].first;     while (a--)       s[p] = V[2].second, p = (p + 2) % n, p = (p == 0 ? 1 : p);     a = V[1].first;     while (a--)       s[p] = V[1].second, p = (p + 2) % n, p = (p == 0 ? 1 : p);     a = V[0].first;     for (; a--;) {       s[p] = V[0].second, p = (p + 2) % n, p = (p == 0 ? 1 : p);     }     for (int i = 0; i < n; ++i)       printf("%c", s[i]);     printf("\n");   }   return 0; }
#include <bits/stdc++.h> #include <iostream> #include <utility> #include <vector> using namespace std;
const int INF = 1000000000; const int mod = 1000000007; const long double PI = 3.1415926535897932384626433832795; typedef vector<vector<int>> vvi; typedef long long ll; typedef pair<int, int> PII; typedef pair<int, int> pii; typedef unsigned long long ull; typedef vector<int> VI; typedef long double LD;  using LL = long long;  int x[6]; string s = "ROYGBV";  
int main() {   ios::sync_with_stdio(0);    freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_12_Usenix_RF_1.0_True_MCTS_Classic_True/Mucosolvan/jiian/A-small-practice.in",           "r", stdin);    int solve, v = 0;   cin >> solve;   for (; solve--;) {     int n;     cin >> n;     for (int get = 0; get < 6; get++)       cin >> x[get];     string t = "";     int flag = 0;     while (t.size() < n) {       int mx = 0, c = 0;       for (int get = 0; get < 6; get++) {         if (s[get] == t.back())           continue;         if (x[get] == mx && t.size())           if (s[get] == t[0])             mx = x[get], c = get;         if (x[get] > mx)           mx = x[get], c = get;       }       if (s[c] == t.back() || x[c] == 0) {         flag = 1;         break;       }       t.push_back(s[c]);       x[c]--;     }      if (t.size() > 1 && t[0] == t.back())       flag = 1;     printf("Case #%d: ", ++v);     if (flag)       puts("IMPOSSIBLE");     else       printf("%s\n", t.c_str());   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <complex> #include <cstdio> #include <cstring> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std; 
typedef long long ll; typedef pair<int, int> pii; typedef pair<int, int> PII; typedef vector<int> vi;   int N, R, O, Y, G, B, V; int s[2000]; 
int main(void) {   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_13_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/iPeter/outer_temp/iPeter/A-small-practice_transformation.out",           "w", stdout);    freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_13_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/iPeter/A-small-practice.in",           "r", stdin);    int b;   scanf("%d", &b);   for (int ans = 1; ans <= b; ans++) {     scanf("%d%d%d%d%d%d%d", &N, &R, &O, &Y, &G, &B, &V);      cout << "Case #" << ans << ": ";      if (V > Y) {       puts("IMPOSSIBLE");       continue;     } else if (O > B || G > R) {       puts("IMPOSSIBLE");       continue;     }      if (O == B && O > 0) {       if (O + B < N) {         puts("IMPOSSIBLE");       } else {         for (; O > 0; --O)           cout << "OB";         puts("");       }       continue;     }     if (G == R)       if (G > 0) {         if (G + R < N)           puts("IMPOSSIBLE");         else {           for (; G > 0; --G)             cout << "RG";           puts("");         }         continue;       }     if (Y == V && V > 0) {       if (Y + V < N) {         puts("IMPOSSIBLE");       } else {         for (; V > 0; --V)           cout << "YV";         puts("");       }       continue;     }      B -= O;     R -= G;     Y -= V;     int y = B + R + Y;     if (B > R + Y || R > B + Y || Y > B + R) {       puts("IMPOSSIBLE");       continue;     }     memset(s, -1, sizeof(s));      int maxc = 0, c = R, c2 = Y, mc2 = 1, mc3 = 2;     if (B > R && B > Y)       maxc = 2, c = B, mc3 = 0;     if (Y > B)       if (Y > R)         maxc = 1, c = Y, c2 = R, mc2 = 0;       for (int i = 0; i < c; i++) {       s[i * 2] = maxc;     }     for (int i = y - 1 - (y % 2), j = 0; j < c2; i -= 2, ++j) {       s[i] = mc2;     }     for (int i = 0; i < y; i++) {       if (s[i] < 0)         s[i] = mc3;     }      for (int i = 0; i < y; i++) {       if (s[i] == 0) {         cout << "R";         for (; G > 0; --G)           cout << "GR";                } else if (s[i] == 1) {         cout << "Y";         for (; V > 0; --V)           cout << "VY";                } else {         cout << "B";         for (; O > 0; --O)           cout << "OB";                }     }     puts("");        }   return 0; }
#include <bits/stdc++.h> #include <bitset> #include <cassert> #include <climits> #include <complex> #include <ctime> #include <deque> #include <fstream> #include <iomanip> #include <iostream> #include <list> #include <map> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <unordered_map> #include <utility> #include <vector> using namespace std; 
ifstream fin;  ofstream fout;  bool comp(pair<int, char> &get, pair<int, char> &r) {   return get.first < r.first; }  inline void ckhiqmqsqk(pair<int, char> solve[3], int &i) {   if (solve[i].first) {     fout << solve[i].second << endl;   } }  
int main(int argc, char **j) {   fin.open("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_15_Usenix_RF_1.0_True_MCTS_Classic_True/Thanabhat/gultai4ukr/A-small-practice.in");    fout.open("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_15_Usenix_RF_1.0_True_MCTS_Classic_True/Thanabhat/gultai4ukr/outer_temp/gultai4ukr/A-small-practice_transformation.out");    int t;   fin >> t;   for (int p = 0; p < t; ++p) {     int n, r, o, y, g, b, v;     fin >> n >> r >> o >> y >> g >> b >> v;     int m = max(r, max(y, b));     fout << "Case #" << p + 1 << ": ";      pair<int, char> solve[] = {{r, 'R'}, {y, 'Y'}, {b, 'B'}};     sort(solve, &solve[3], comp);      if (r + y + b == 1) {       {         int i = 0;         while (i < 3) {           ckhiqmqsqk(solve, i);           ++i;         }       }       continue;     }      if (m > (r + y + b) / 2.0) {       fout << "IMPOSSIBLE" << endl;       continue;     }      while (solve[1].first > solve[0].first) {       fout << solve[2].second << solve[1].second;       solve[2].first--;       solve[1].first--;     }     int odd = 0;     while (solve[2].first) {       fout << solve[2].second << solve[odd % 2].second;       solve[2].first--;       solve[odd % 2].first--;       odd++;     }     for (; solve[odd % 2].first;) {       fout << solve[odd % 2].second;       solve[odd % 2].first--;       odd++;     }     fout << endl;   }    return 0; }
#include <bitset> #include <cctype> #include <climits> #include <complex> #include <deque> #include <iomanip> #include <iostream> #include <math.h> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdlib.h>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>   using namespace std; 
const int MOD = 1000000007; const double EPS = 1e-9;  typedef set<int> si; typedef vector<int> vi; typedef vector<vi> vvi; typedef pair<int, int> PII; typedef vector<PII> vii; typedef vector<string> vs;  typedef long long LL;            typedef unsigned long long ull;   const double pi = acos(-1.0);  const double eps = 1e-11;      const int MAXI = 0x7fffffff; const int dx[] = {1, 0, -1, 0}; const int dy[] = {0, 1, 0, -1}; const char colors[] = {'R', 'O', 'Y', 'G', 'B', 'V'}; const char dz[] = "SENW"; struct debugger {  } dbg;  void get(int *arr, int n) {   cout << "[";   for (int i = 0; i < n; i++)     cout << arr[i] << " ";   cout << "]" << endl; }   vector<pair<int, int>> v; 
int main() {    ;       int n, i, j, k, l, m, t, s = 0, d, p;   cin >> t;   ;   int c = 1;   while (t--) {     cin >> n;     ;     vector<int> a(1010);     int b[1010];     v.clear();     for (i = 0; i < 6; i++) {       cin >> a[i];       ;     }     d = 0;     v.push_back(make_pair(a[0], 0));     v.push_back(make_pair(a[2], 2));     v.push_back(make_pair(a[4], 4));     if (v[2].first > v[0].first + v[1].first) {       printf("Case #%d: IMPOSSIBLE\n", c++);       continue;     }     sort(v.begin(), v.end());     for (; d < n;) {       if (v[2].first > 0) {         a[d++] = v[2].second;         v[2].first--;          if (v[1].first > 0) {           a[d++] = v[1].second;           v[1].first--;         } else if (v[0].first > 0) {           a[d++] = v[0].second;           v[0].first--;           if (v[2].first == 0)             break;         }       } else         break;          }     s = 0;         if (v[0].first > 0) {       for (i = 0; i < d; i++) {         b[s++] = a[i];         if (v[0].first > 0)           if (a[i + 1] != v[0].second) {             b[s++] = v[0].second;             v[0].first--;           }               }       for (i = 0; i < s - 1; i++) {         if (b[i] == b[i + 1]) {           printf("Case #%d: IMPOSSIBLE\n", c++);           break;         }       }       if (i != s - 1)         continue;       if (b[s - 1] == b[0]) {         printf("Case #%d: IMPOSSIBLE\n", c++);         continue;       }       printf("Case #%d: ", c++);       for (i = 0; i < s; i++) {         printf("%c", colors[b[i]]);       }       cout << endl;     } else if (a[d - 1] == a[0]) {       printf("Case #%d: IMPOSSIBLE\n", c++);     } else {       printf("Case #%d: ", c++);       for (i = 0; i < d; i++)         printf("%c", colors[a[i]]);        cout << endl;     }   }   return (0); }
#include <algorithm> #include <bits/stdc++.h> #include <fstream> #include <iostream> #include <map> #include <stdio.h>  using namespace std; 
ifstream fin;  map<char, int> mmm;  struct my_sort {   bool operator()(const pair<int, char> &left, const pair<int, char> &right) {     if (left.first > right.first) {       return true;     } else {       if (left.first < right.first) {         return false;       } else {         return mmm[left.second] < mmm[right.second];       }     }   } };  int do_intfca_fct(int cc) {   int ret_val = 1;   mmm.clear();   int n, tt, o, y, g, b, v;   fin >> n >> tt >> o >> y >> g >> b >> v;   pair<int, char> arr[3];   arr[0] = pair<int, char>(tt, 'R');   arr[1] = pair<int, char>(y, 'Y');   arr[2] = pair<int, char>(b, 'B');   sort(arr, arr + 3, greater<pair<int, char>>());   for (int i = 0; i < 3; i++) {     mmm[arr[i].second] = i;   }   printf("Case #%d: ", cc);   string sol = "";   bool im = false;   char last = '-';   for (int i = 0; i < n && !im; i++) {     int mi = -1;     sort(arr, arr + 3, my_sort());     for (int j = 0; j < 3; j++) {       if (arr[j].second != last) {         mi = j;         break;       }     }     if (mi == -1 || arr[mi].first <= 0) {       im = true;       break;     }     sol += arr[mi].second;     last = arr[mi].second;     arr[mi].first--;   }   if (im || (sol[0] == sol[n - 1])) {     printf("IMPOSSIBLE\n");   } else {     printf("%s\n", sol.c_str());   }   return ret_val; }  
int main() {   int ret_val = 0;   fin.open("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_18_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/Thanabhat/A-small-practice.in");   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_18_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/Thanabhat/outer_temp/Thanabhat/A-small-practice_transformation.out",           "w", stdout);   int ans;   fin >> ans;   for (int i = 1; i <= ans; i++) {     do_intfca_fct(i);   }   return ret_val; }
#include <bits/stdc++.h> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <cstdlib> #include <cstring> #include <deque> #include <functional> #include <list> #include <map> #include <math.h> #include <numeric> #include <set> #include <stdio.h> #include <unordered_map> #include <utility> #include <vector> using namespace std;
const long double PI = 3.1415926535897932384626433832795; typedef long double ld; typedef pair<int, int> PII; typedef unsigned long long ull; typedef vector<int> VI; typedef long double LD; typedef long long ll;  int tc;  
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_1_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/4yn/A-small-practice.in",           "r", stdin);    cin >> tc;   for (int t = 1; t <= tc; t++) {     int n, q;     cin >> n >> q;     int e[109], s[109];     for (int i = 1; i <= n; i++) {       cin >> e[i] >> s[i];     }     int adj[109][109];     for (int i = 1; i <= n; i++) {       for (int j = 1; j <= n; j++) {         cin >> adj[i][j];       }     }     int dist[109];      for (int i = 1; i < n; i++) {       dist[i] = adj[i][i + 1];     }     printf("Case #%d: ", t);     for (int nq = 0; nq < q; nq++) {       int u, v;       cin >> u >> v;       double time_taken[109];       for (int i = 1; i <= n; i++) {         time_taken[i] = -1;       }       time_taken[1] = 0;       for (int i = 1; i < n; i++) {               int dist_left = e[i];         int speed = s[i];         double cur_time = time_taken[i];         for (int j = i + 1; j <= n; j++) {            dist_left -= dist[j - 1];           if (dist_left < 0)             break;           cur_time += (dist[j - 1] + 0.0) / s[i];                      if (time_taken[j] < 0) {             time_taken[j] = cur_time;           } else {             time_taken[j] = min(time_taken[j], cur_time);           }         }       }       printf("%.7f\n", time_taken[v]);     }   } }
#include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <list> #include <map> #include <math.h> #include <stdio.h> #include <stdlib.h> #include <utility> #include <vector> using namespace std; 
const int MOD = 1000000007; const int INF = 1000000000; const long double PI = 3.1415926535897932384626433832795;  int tc;  inline void yavvvhvfgz(int adj[109][109], int &b, int &j) {   scanf("%d ", &adj[b][j]); }  
int main() {    freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_1_Usenix_RF_1.0_True_MCTS_Classic_True/try/4yn/outer_temp/4yn/A-small-practice_transformation.out",           "w", stdout);   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_1_Usenix_RF_1.0_True_MCTS_Classic_True/try/4yn/A-small-practice.in",           "r", stdin);   scanf("%d ", &tc);   for (int t = 1; t <= tc; t++) {     int n, q;     scanf("%d %d ", &n, &q);     int e[109], s[109];     for (int b = 1; b <= n; b++) {       scanf("%d %d ", &e[b], &s[b]);     }     int adj[109][109];     for (int b = 1; b <= n; b++) {       for (int j = 1; j <= n; j++)         yavvvhvfgz(adj, b, j);     }     int a[109];      for (int b = 1; b < n; b++) {       a[b] = adj[b][b + 1];     }     cout << "Case #" << t << ": ";     for (int nq = 0; nq < q; nq++) {       int u, v;       scanf("%d %d ", &u, &v);       double time_taken[109];       for (int b = 1; b <= n; b++) {         time_taken[b] = -1;       }       time_taken[1] = 0;       for (int b = 1; b < n; b++) {                 int dist_left = e[b];         int speed = s[b];         double cur_time = time_taken[b];         for (int j = b + 1; j <= n; j++) {            dist_left -= a[j - 1];           if (dist_left < 0)             break;           cur_time += (a[j - 1] + 0.0) / s[b];                      if (time_taken[j] < 0)             time_taken[j] = cur_time;           else {             time_taken[j] = min(time_taken[j], cur_time);           }         }       }       cout << fixed << setprecision(7) << time_taken[v] << "\n";     }   }   return 0; }
#include <algorithm> #include <cstdio> #include <cstring> #include <iomanip> #include <iostream>  using namespace std; 
typedef double td_d;  long long gra[100 + 1][100 + 1]; int lim[100 + 1], spd[100 + 1], vis[100 + 1]; double dis[100 + 1]; int n, q;  double dijkstra(int s, int e) {   int i, j, u;   td_d newd;   memset(vis, 0, sizeof(vis));   fill(dis + 1, dis + n + 1, 1000000000000000000LL);   dis[s] = 0.0;   for (i = 1; i <= n; i++) {     newd = 1000000000000000000LL;     u = -1;     for (j = 1; j <= n; j++) {       if ((vis[j] == 0) && (newd > dis[j])) {         newd = dis[j];         u = j;       }     }     if (u == -1) {       break;     }     vis[u] = 1;     for (j = 1; j <= n; j++) {       if ((lim[u] >= gra[u][j]) &&           (dis[j] > dis[u] + 1.0 * gra[u][j] / spd[u])) {         dis[j] = dis[u] + 1.0 * gra[u][j] / spd[u];       }     }   }   return dis[e]; }  
int main() {    int c, t, i, j, u, v;   scanf("%d", &t);   for (c = 0; c < t; c++) {     scanf("%d %d", &n, &q);     for (i = 1; i <= n; i++) {       scanf("%d %d", &lim[i], &spd[i]);     }     for (i = 1; i <= n; i++) {       for (j = 1; j <= n; j++) {         scanf("%lld", &gra[i][j]);         if (gra[i][j] == -1) {           gra[i][j] = 1000000000000000000LL;         }       }     }     for (int k = 1; k <= n; k++) {       for (i = 1; i <= n; i++) {         for (j = 1; j <= n; j++) {           gra[i][j] = min(gra[i][j], gra[i][k] + gra[k][j]);         }       }     }     cout << "Case #" << c + 1 << ":";     for (i = 0; i < q; i++) {       scanf("%d %d", &u, &v);       cout << " " << fixed << setprecision(9) << dijkstra(u, v);     }     cout << "\n";   }   return 0; }
#include <algorithm> #include <bitset> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <deque> #include <fstream> #include <functional> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> #include <vector> using namespace std;  
int n, q, u, v; long long e[102]; double s[102]; long long d[102][102]; double bt[102]; bool vi[102];  
int main() {   int tt;    cin >> tt;    for (int t = 1; t <= tt; ++t) {     cin >> n >> q;     for (int i = 1; i <= n; ++i)       cin >> e[i] >> s[i];     for (int i = 1; i <= n; ++i)       for (int j = 1; j <= n; ++j)         cin >> d[i][j];      for (int k = 1; k <= n; ++k)       for (int i = 1; i <= n; ++i)         for (int j = 1; j <= n; ++j)           if ((d[i][k] != -1) && (d[k][j] != -1) &&               ((d[i][j] == -1) || (d[i][j] > d[i][k] + d[k][j])))             d[i][j] = d[i][k] + d[k][j];      printf("Case #%d:", t);      for (int i = 0; i < q; ++i) {       cin >> u >> v;       for (int j = 1; j <= n; ++j) {         bt[j] = -1;         vi[j] = false;       }       bt[u] = 0;       while (!vi[v]) {         int cur = -1;         for (int j = 1; j <= n; ++j)           if (!vi[j] && (bt[j] != -1) && ((cur == -1) || (bt[cur] > bt[j])))             cur = j;         vi[cur] = true;         for (int j = 1; j <= n; ++j)           if ((d[cur][j] != -1) && (d[cur][j] <= e[cur]) &&               ((bt[j] == -1) || ((bt[j] - bt[cur]) * s[cur] > d[cur][j])))             bt[j] = bt[cur] + d[cur][j] / s[cur];       }       printf(" %.6lf", bt[v]);     }     printf("\n");   }    return 0; }
#include <bits/stdc++.h> #include <stdio.h> using namespace std; 
typedef long double td_ld; typedef pair<int, int> ii; typedef vector<int> vi; typedef vector<ii> vii; typedef long long ll; const long double INF = 1000000000000; const long double pi = acos(-1); typedef pair<long double, int> di;  int mxdist[120]; int conspeed[120]; long double matrix[120][120]; long double matrix2[120][120];  void fill(int at) {   bool vis[120];   memset(vis, 0, sizeof(vis));   vis[at] = true;   priority_queue<pair<long double, int>, vector<di>, greater<di>> q;   q.push(pair<long double, int>(0, at));   for (; !q.empty();) {     int cur = q.top().second;     td_ld range = q.top().first;     q.pop();     for (int i = (0); i < (120); i++) {       if (matrix[cur][i] != -1 && i != cur && !vis[i]) {         td_ld thedist = matrix[cur][i];         range += thedist;         if (range > mxdist[at]) {           range -= thedist;           continue;         }         matrix2[at][i] = min(range / conspeed[at], matrix2[at][i]);         q.push(pair<long double, int>(range, i));         range -= thedist;       }     }   } }  long double query(int start, int end) {   priority_queue<di, vector<di>, greater<di>> pq;   pq.push(di(0, start));   long double dist[150];   bool vis[150];   for (int i = (0); i < (150); i++)     dist[i] = INF;   memset(vis, 0, sizeof(vis));   dist[start] = 0;   while (!pq.empty()) {     di cur = pq.top();     pq.pop();     for (int i = (0); i < (120); i++) {       if (matrix2[cur.second][i] != -1) {         td_ld ne = min(dist[i], cur.first + matrix2[cur.second][i]);         if (ne >= dist[i])           continue;         dist[i] = ne;         pq.push(di(dist[i], i));       }     }   }   return dist[end]; }  
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_7_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/bennikartefla/A-small-practice.in",           "r", stdin);    ofstream fout("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_7_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/bennikartefla/outer_temp/bennikartefla/A-small-practice_transformation.out");   int tc;   scanf("%d ", &tc);   for (int u = (0); u < (tc); u++) {     int n, q;     memset(mxdist, 0, sizeof(mxdist));     memset(conspeed, 0, sizeof(conspeed));     for (int i = (0); i < (120); i++)       for (int a = (0); a < (120); a++)         matrix[i][a] = -1;     for (int i = (0); i < (120); i++)       for (int a = (0); a < (120); a++)         matrix2[i][a] = INF;     scanf("%d %d ", &n, &q);     for (int i = (0); i < (n); i++) {       int dist, speed;       scanf("%d %d ", &dist, &speed);       mxdist[i] = dist;       conspeed[i] = speed;     }     for (int i = (0); i < (n); i++) {       int a = (0);       while (a < (n)) {         cin >> matrix[i][a];         a++;       }     }     for (int i = (0); i < (n); i++)       fill(i);     for (int i = (0); i < (120); i++)       for (int a = (0); a < (120); a++)         if (matrix2[i][a] == INF)           matrix2[i][a] = -1;     vector<ii> all(q);     for (int i = (0); i < (q); i++)       cin >> all[i].first >> all[i].second;     fout << "Case #" << u + 1 << ": ";     for (int i = (0); i < (q); i++) {       fout << setprecision(9) << fixed            << query(all[i].first - 1, all[i].second - 1) << " ";     }     fout << endl;   }   return 0; }
#include <bits/stdc++.h> #include <set> #include <vector> using namespace std; 
const int mod = 1000000007;  typedef vector<vector<int>> vvi; typedef pair<int, int> pii; typedef vector<int> vi; typedef vector<pii> vii; typedef long long LL; const long double INF = 1000000000000; const long double pi = acos(-1); typedef pair<long double, int> di;  int mxdist[120]; int conspeed[120]; long double matrix[120][120]; long double matrix2[120][120];  void fill(int T) {   bool vis[120];   memset(vis, 0, sizeof(vis));   vis[T] = true;   priority_queue<pair<long double, int>, vector<di>, greater<di>> solve;   solve.push(pair<long double, int>(0, T));   for (; !solve.empty();) {     int cur = solve.top().second;     long double range = solve.top().first;     solve.pop();     for (int i = (0); i < (120); i++) {       if (matrix[cur][i] != -1 && i != cur && !vis[i]) {         long double thedist = matrix[cur][i];         range += thedist;         if (range > mxdist[T]) {           range -= thedist;           continue;         }         matrix2[T][i] = min(range / conspeed[T], matrix2[T][i]);         solve.push(pair<long double, int>(range, i));         range -= thedist;       }     }   } }  long double query(int start, int end) {   priority_queue<di, vector<di>, greater<di>> pq;   pq.push(di(0, start));   vector<long double> dist(150);   bool vis[150];   for (int i = (0); i < (150); i++)     dist[i] = INF;   memset(vis, 0, sizeof(vis));   dist[start] = 0;   while (!pq.empty()) {     di cur = pq.top();     pq.pop();     for (int i = (0); i < (120); i++) {       if (matrix2[cur.second][i] != -1) {         long double ne = min(dist[i], cur.first + matrix2[cur.second][i]);         if (ne >= dist[i])           continue;         dist[i] = ne;         pq.push(di(dist[i], i));       }     }   }   return dist[end]; }  inline void cuqttllvck(int &i, int &get) {   if (matrix2[i][get] == INF)     matrix2[i][get] = -1;   get++; }  inline void oygotmgtug(vector<pii> &all, int &i) {   cin >> all[i].first >> all[i].second;   i++; }  
int main() {   cin.sync_with_stdio(false);   ofstream fout("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_7_Usenix_RF_1.0_True_MCTS_Classic_True/okaduki/bennikartefla/outer_temp/bennikartefla/A-small-practice_transformation.out");   int t;   cin >> t;   for (int s = (0); s < (t); s++) {     int n, solve;     memset(mxdist, 0, sizeof(mxdist));     memset(conspeed, 0, sizeof(conspeed));     for (int i = (0); i < (120); i++)       for (int get = (0); get < (120); get++)         matrix[i][get] = -1;     for (int i = (0); i < (120); i++)       for (int get = (0); get < (120); get++)         matrix2[i][get] = INF;     cin >> n >> solve;     for (int i = (0); i < (n); i++) {       int dist, speed;       cin >> dist >> speed;       mxdist[i] = dist;       conspeed[i] = speed;     }     for (int i = (0); i < (n); i++)       for (int get = (0); get < (n); get++)         cin >> matrix[i][get];     for (int i = (0); i < (n); i++)       fill(i);     for (int i = (0); i < (120); i++) {       int get = (0);       while (get < (120))         cuqttllvck(i, get);     }     vector<pii> all(solve);     int i;     {       i = (0);       while (i < (solve))         oygotmgtug(all, i);     }     fout << "Case #" << s + 1 << ": ";     {       int i = (0);       while (i < (solve)) {         fout << setprecision(9) << fixed              << query(all[i].first - 1, all[i].second - 1) << " ";         i++;       }     }     fout << endl;   }   return 0; }
#include <bits/stdc++.h> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <ctime> #include <fstream> #include <iostream> #include <iterator> #include <list> #include <map> #include <numeric> #include <queue> #include <set> #include <stdlib.h> #include <string> #include <utility> #include <vector> using namespace std; 
const int MOD = 1000000007;  typedef unsigned long long ull; typedef vector<int> VI; typedef set<int> si; typedef vector<vector<int>> vvi; typedef long long LL; typedef pair<int, int> ii; typedef vector<ii> vii;  void get() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_8_Usenix_RF_1.0_True_MCTS_Classic_True/okaduki/ccsnoopy/A-small-practice.in",           "r", stdin); } int n, q, fr, to; int energy[120]; int spd[120]; int dist[120][120]; map<pair<ii, int>, double> memo;  double dp(int p, int pony, int left) {   pair<ii, int> z = make_pair(ii(p, pony), left);   if (p == to)     return 0;   if (memo.find(z) != memo.end())     if (memo[z] < 1e12)       return memo[z];    double ans = 1e12;    if (dist[p][p + 1] <= left) {     ans = min(dp(p + 1, pony, left - dist[p][p + 1]) +                   1.0 * dist[p][p + 1] / spd[pony],               ans);   }    if (dist[p][p + 1] <= energy[p]) {     ans = min(ans, dp(p + 1, p, energy[p] - dist[p][p + 1]) +                        1.0 * dist[p][p + 1] / spd[p]);   }   return memo[z] = ans; }  inline void jminncnsqq(int &i, int &j) { scanf("%d", &dist[i][j]); }  inline void exdmzcyjxi(int &T) {   scanf("%d", &n);   scanf("%d", &q);    for (int i = 0; i < n; i++) {     scanf("%d", &energy[i]);     scanf("%d", &spd[i]);   }    for (int i = 0; i < n; i++) {     {       int j = 0;       while (j < n) {         jminncnsqq(i, j);         j++;       }     }   }    scanf("%d", &fr);   scanf("%d", &to);   fr--;   to--;   memo.clear();    printf("Case #%d: %.10lf\n", T, dp(0, 0, energy[0]));    cerr << "Test " << T << " done \n"; }  
int main(void) {   ios::sync_with_stdio(false);    int ret_val = 0;   get();   int tc;   scanf("%d", &tc);   for (int T = 1; T <= tc; T++)     exdmzcyjxi(T);   return ret_val; }
#include <algorithm> #include <bits/stdc++.h> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> using namespace std;  
typedef long long ll; typedef long long LL; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<int> vi;  void get() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_8_Usenix_RF_1.0_True_MCTS_Classic_True/ibrahim5253/ccsnoopy/A-small-practice.in",           "r", stdin); } int n, q, fr, to; int energy[120]; int spd[120]; int dist[120][120]; map<pair<ii, int>, double> memo;  double dp(int idx, int pony, int left) {   pair<ii, int> z = make_pair(ii(idx, pony), left);   if (idx == to) {     return 0;   }   if (memo.find(z) != memo.end() && memo[z] < 1e12)     return memo[z];    double ans = 1e12;    if (dist[idx][idx + 1] <= left) {     ans = min(dp(idx + 1, pony, left - dist[idx][idx + 1]) +                   1.0 * dist[idx][idx + 1] / spd[pony],               ans);   }    if (dist[idx][idx + 1] <= energy[idx]) {     ans = min(ans, dp(idx + 1, idx, energy[idx] - dist[idx][idx + 1]) +                        1.0 * dist[idx][idx + 1] / spd[idx]);   }   return memo[z] = ans; }  inline void pgpylfrncm(int &i, int &j) { scanf("%d", &dist[i][j]); }  inline void qdeiossdmo() {   int i = 0;   while (i < n) {     for (int j = 0; j < n; j++)       pgpylfrncm(i, j);     i++;   } }  
int main(void) {   ios::sync_with_stdio(0);    get();   int tc;   scanf("%d", &tc);    for (int ct = 1; ct <= tc; ct++) {     scanf("%d", &n);     scanf("%d", &q);      for (int i = 0; i < n; i++) {       scanf("%d", &energy[i]);       scanf("%d", &spd[i]);     }      qdeiossdmo();      scanf("%d", &fr);     scanf("%d", &to);     fr--;     to--;     memo.clear();      printf("Case #%d: %.10lf\n", ct, dp(0, 0, energy[0]));      cerr << "Test " << ct << " done \n";   }   return 0; }
#include <bits/stdc++.h> #include <iostream> #include <stdio.h>  using namespace std; 
int do_intkns_fct(int cc) {   int ret_val = 1;   long long n, q, e[105], s[105], d[105], temp;   scanf("%lld %lld ", &n, &q);   for (int i = 0; i < n; i++) {     scanf("%lld %lld ", &e[i], &s[i]);   }   for (int i = 0; i < n; i++) {     for (int j = 0; j < n; j++) {       if (j == i + 1) {         scanf("%lld ", &d[i]);       } else {         scanf("%lld ", &temp);       }     }   }   scanf("%lld %lld ", &temp, &temp);   long double dp[105];   for (int i = 0; i < n; i++) {     dp[i] = 1e11;   }   dp[n - 1] = 0;   for (int i = n - 2; i >= 0; i--) {     long double sss = 0;     long long ee = e[i];     long double tt = 0;     for (int j = i; j < n - 1; j++) {       ee -= d[j];       if (ee < 0) {         break;       }       tt += (1.0 * d[j]) / s[i];          if (j == i || tt + dp[j + 1] < sss) {         sss = tt + dp[j + 1];        }     }     dp[i] = sss;    }   cout << "Case #" << cc << ": " << fixed << dp[0] << endl;   return ret_val; } 
int main() {   int ret_val = 0;   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_18_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/Thanabhat/outer_temp/Thanabhat/A-small-practice_transformation.out",           "w", stdout);   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_18_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/Thanabhat/A-small-practice.in",           "r", stdin);   int ans;   scanf("%d ", &ans);   cout.precision(7);   for (int i = 1; i <= ans; i++) {     do_intkns_fct(i);   }   return ret_val; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cstdio> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <stdio.h> #include <stdlib.h> #include <string> #include <vector> using namespace std;  
int tc;  long long d, n, a, b; vector<pair<long long, long long>> ks;  
int main() {   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_1_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/4yn/outer_temp/4yn/A-small-practice_transformation.out",           "w", stdout);   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_1_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/4yn/A-small-practice.in",           "r", stdin);   cin >> tc;   for (int t = 1; t <= tc; t++) {     ks.clear();     cin >> d >> n;     double lb, ub, ex;     lb = 0;     ub = 0;     for (int i = 0; i < n; i++) {       cin >> a >> b;       ks.push_back(pair<long long, long long>(a, b));       if (ub == 0) {         if (a != d) {           ub = d * b / (d - a + 0.0);         }       } else if (a != d) {         ub = min(ub, d * b / (d - a + 0.0));       }     }     while (abs(ub - lb) > 0.0000005f) {       ex = (ub + lb) / 2;       int p = true;        for (int i = 0; i < n; i++) {          if (ks[i].second >= ex)           continue;          if (ks[i].first / (ex - ks[i].second) * ex < d) {           p = false;         }       }       if (p) {         lb = ex;       } else {         ub = ex;       }     }     printf("Case #%d: %.7f\n", t, ub);   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <climits> #include <cstdio> #include <cstdlib> #include <ctime> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <numeric> #include <queue> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <unordered_map> #include <utility> #include <vector> using namespace std; 
const int MOD = 1000000007; ofstream fout;  typedef long double ld; typedef long long ll; typedef pair<int, int> ii; typedef vector<int> VI; typedef long double LD; typedef vector<vector<int>> vvi;  int main() {   ios::sync_with_stdio(false);    fout.open("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_3_Usenix_RF_1.0_True_MCTS_Classic_True/bennikartefla/try/outer_temp/try/A-small-practice_transformation.out");    int c, t, i, d, n, q, s;   double a;   cin >> t;   for (c = 0; c < t; c++) {     cin >> d >> n;     a = 0.0;     for (i = 0; i < n; i++) {       cin >> q >> s;       a = max(a, 1.0 * (d - q) / s);     }     fout << "Case #" << c + 1 << ": " << fixed << setprecision(6) << d / a          << "\n";   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cctype> #include <cmath> #include <cstdio> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <string> #include <utility> #include <vector>  using namespace std; 
const int INF = 1000000000; const double EPS = 1e-9; const int MAXN = 1005; const double eps = 1e-9; typedef long double LD; typedef unsigned long long ull; typedef long long ll; typedef long long LL; typedef pair<int, int> ii; typedef vector<int> VI; typedef set<int> si; typedef vector<vector<int>> vvi;  const int N = 1100; int T[N], s[N];  inline void ldhwndhnqf(double &mt, int &d, int &i) {   scanf("%d%d", &T[i], &s[i]);   mt = max(mt, double(d - T[i]) / s[i]); }  void get() {   int d, n;   cin >> d >> n;   double mt = 0;   for (int i = 1; i <= n; ++i)     ldhwndhnqf(mt, d, i);   printf("%.9f\n", d / mt); }  inline void poptvdiazn(int &i) {   printf("Case #%d: ", i);   get(); }  
int main() {   ios::sync_with_stdio(true);    int q;   cin >> q;   for (int i = 1; i <= q; ++i)     poptvdiazn(i);   return 0; }
#include <algorithm> #include <bitset> #include <cassert> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> #include <vector> using namespace std; 
const double eps = 1e-9; const int MOD = 1000000007;  typedef long long LL; typedef pair<int, int> ii; typedef pair<int, int> pii; typedef unsigned long long ull;  const long double PI = 3.1415926535897932384626433832795;  inline void nzlwepkyog(int &t) {   int d, n;   cin >> d >> n;    LL bk, bs, tc, s;   cin >> tc >> s;   tc = d - tc;   bk = tc;   bs = s;   for (int i = 1; i < n; ++i) {     cin >> tc >> s;     tc = d - tc;     if (s * bk < bs * tc) {       bs = s;       bk = tc;     }   }   bs *= d;   LL T = bs / bk, r = bs % bk;    printf("Case #%d: %lld.", t, T);   int i;   for (i = 0; i < 6; ++i) {     r = r * 10;     printf("%lld", r / tc);     r = r % tc;   }   printf("\n"); }  int main() {   int p;    cin >> p;    for (int t = 1; t <= p; ++t)     nzlwepkyog(t);    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;  
typedef pair<int, int> ii; typedef vector<int> vi; typedef vector<ii> vii; typedef long long ll; const int INF = ~(1 << 31); const double pi = acos(-1);  inline void htxkawhfxy(double &n, double &t2) {   double a, b;   cin >> a >> b;   double t = (n - a) / b;   t2 = max(t, t2); }  inline void mfoqornija(double &n, double &t2, int &get) {   htxkawhfxy(n, t2);   get++; }  
int main() {   cin.sync_with_stdio(false);   ofstream v("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_7_Usenix_RF_1.0_True_MCTS_Classic_True/ibrahim5253/bennikartefla/outer_temp/bennikartefla/A-small-practice_transformation.out");   int t;   cin >> t;    for (int u = (0); u < (t); u++) {     double n, x;     cin >> n >> x;     double t2 = 0;     {       int get = (0);       for (; get < (x);)         mfoqornija(n, t2, get);     }     v << "Case #" << u + 1 << ": " << setprecision(10) << fixed << n / t2       << endl;   }   return 0; }
#include <bits/stdc++.h> #include <iostream> using namespace std; 
typedef double td_d;  void open() {   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_8_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/ccsnoopy/A-small-practice.in",           "r", stdin);   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_8_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/ccsnoopy/outer_temp/ccsnoopy/A-small-practice_transformation.out",           "w", stdout); }  inline void pfsnmzygil(double &maxi, int &d) {   int m, sp;   cin >> m;   cin >> sp;   maxi = max(maxi, 1.0 * (d - m) / sp); }  inline void jinalepgjb(int &r) {   int d, n;   cin >> d;   cin >> n;   td_d maxi = 0.0;    for (int i = 0; i < n; i++)     pfsnmzygil(maxi, d);    printf("Case #%d: %.7lf\n", r, 1.0 * d / maxi);   cerr << "Test " << r << " done \n"; }  
int main(void) {   open();   int ans;   cin >> ans;    {     int r = 1;     while (r <= ans) {       jinalepgjb(r);       r++;     }   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <limits> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;  
const int Maxn = 310;  int T; const int INF = 1000000000; typedef long double ld; typedef long long ll; typedef pair<int, int> ii;  int cs;   int s[Maxn], v[Maxn], D, N; double t; 
int main() {   ios::sync_with_stdio(false);    freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_10_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/kuzphi/A-small-practice.in",           "r", stdin);    freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_10_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/kuzphi/outer_temp/kuzphi/A-small-practice_transformation.out",           "w", stdout);    cin >> T;   while (T--) {     cout << "Case #" << ++cs << ": ";     cin >> D >> N;     t = -1;      for (int i = 1; i <= N; i++) {       cin >> s[i] >> v[i];        t = max(t, 1. * (D - s[i]) / v[i]);     }         cout << fixed << setprecision(6) << D / t << "\n";   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector>   using namespace std; 
const int MAXN = 1005;  ofstream fout;  ifstream fin;  using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  inline void kbylxgkteo(ll &a, ll &b, ll &t) {   a = b;   b = t; }  ll gcd(ll a, ll b) {   ll t;   while ((t = a % b) != 0)     kbylxgkteo(a, b, t);   return b; }  bool is_set(int i, ll mask) { return (mask >> i) & 1; }  int get(ll mask) {   int ans = 0;   for (int i = 0; i < 64; ++i)     if (is_set(i, mask))       ++ans;   return ans; }  int first_bit(ll mask) {   int i = 0;   while (i < 64) {     if (is_set(i++, mask))       return i - 1;   }   return -1; }  
int main() {   fout.open("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_11_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/ibrahim5253/outer_temp/ibrahim5253/A-small-practice_transformation.out");    fin.open("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_11_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/ibrahim5253/A-small-practice.in");    int t;   fin >> t;   for (int i = 1; i <= t; ++i) {     ll d, n;     fin >> d >> n;     double mt = 0;     for (int j = 0; j < n; ++j) {       ll k, s;       fin >> k >> s;       mt = max(mt, (d - k) / static_cast<double>(s));     }     fout << "Case #" << i << ": " << fixed << setprecision(10) << d / mt          << "\n";   }   return 0; }
#include <bits/stdc++.h> #include <iomanip> #include <iostream> #include <utility> #include <vector> using namespace std; 
const int INF = 1000000000; typedef long double ld; typedef long long ll; typedef pair<int, int> PII; typedef vector<int> vi;  using LL = long long;  
int main() {   ios::sync_with_stdio(false);    int get, cas = 0;   cin >> get;   while (get--) {     int d, n;     cin >> d >> n;     double t = 0;     while (n--) {       int k, s;       cin >> k >> s;       t = max((1.0 * d - k) / s, t);     }     double ans = d / t;     cout << "Case #" << ++cas << ": " << fixed << setprecision(10) << ans          << "\n";   }   return 0; }
#include <bits/stdc++.h> #include <bitset> #include <cctype> #include <climits> #include <complex> #include <deque> #include <fstream> #include <iomanip> #include <iostream> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>   using namespace std;  
typedef double td_d; typedef long double ld; typedef long double LD; typedef set<int> si; typedef vector<int> vi; typedef vector<vi> vvi; typedef pair<int, int> pii; typedef vector<pii> vii; typedef vector<string> vs;  typedef long long ll;            typedef unsigned long long ULL;  typedef unsigned uint;    struct debugger {   template <typename T> debugger &get(const T &v) {     cerr << v << " ";     return *this;   } };  void debugarr(int *arr, int n) {   printf("[");   for (int i = 0; i < n; i++)     printf("%d ", arr[i]);   printf("]\n"); }  
int main() {   ios::sync_with_stdio(false);    freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_16_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/lazyBit/outer_temp/lazyBit/A-small-practice_transformation.out",           "w", stdout);    freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_16_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/lazyBit/A-small-practice.in",           "r", stdin);   ;     int n, i, j, b, l, m, t, s = 0, d, p;   scanf("%d", &t);   ;   int c = 1;   while (t--) {     scanf("%d", &d);     ;     scanf("%d", &n);     ;     td_d ans = 0.0;     td_d r;      for (i = 0; i < n; i++) {       scanf("%d", &b);       ;       scanf("%d", &s);       ;       td_d r = ((d - b) * 1.0) / s;        ans = max(ans, r);     }     printf("Case #%d: %0.6lf\n", c++, d / ans);   }   return (0); }
#include <bitset> #include <cassert> #include <cctype> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <fstream> #include <functional> #include <iostream> #include <list> #include <math.h> #include <set> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility>  using namespace std; 
typedef long double td_ld;  inline void fbiitepgqr(long long &d, long long &k, long long &s, int &i,                        td_ld &mt) {   scanf("%lld %lld ", &k, &s);   td_ld tt = (d - k);   tt /= s;   if (mt < tt) {     mt = tt;   } else if (i == 0) {     mt = tt;   } }  int solve(int q) {   long long d, n, k, s;   td_ld mt = 0;   scanf("%lld %lld ", &d, &n);   int i;   for (i = 0; i < n; i++)     fbiitepgqr(d, k, s, i, mt);   cout << "Case #" << q << ": " << fixed << d / mt << endl;   return 1; }  inline void mgntkmhipy(int &get) {   int i = 1;   while (i <= get) {     solve(i);     i++;   } }  
int main() {   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_17_Usenix_RF_1.0_True_MCTS_Classic_True/try/Thanabhat/A-small-practice.in",           "r", stdin);    int get;   scanf("%d ", &get);   cout.precision(7);   mgntkmhipy(get);   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cassert> #include <cctype> #include <climits> #include <cstdio> #include <cstring> #include <deque> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <math.h> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> #include <vector>  using namespace std; 
typedef long double ld; typedef long long ll; typedef long long LL; typedef pair<int, int> PII; typedef vector<int> vi; typedef vector<int> VI;  char ans[1000 + 1]; int ord[1000 + 1]; int n, m, r, o, y, g, b, v;  
int main() {   ios::sync_with_stdio(false);    int t, i;   scanf("%d", &t);   for (int c = 0; c < t; c++) {     scanf("%d %d %d %d %d %d %d", &n, &r, &o, &y, &g, &b, &v);     printf("Case #%d: ", c + 1);     if ((r * 2 > n) || (y * 2 > n) || (b * 2 > n)) {       printf("IMPOSSIBLE\n");       continue;     }     m = 0;     for (i = 0; i < n; i = i + 2) {       ord[m++] = i;     }     for (i = 1; i < n; i = i + 2) {       ord[m++] = i;     }     m = 0;     if ((r >= y) && (y >= b)) {       while (--r >= 0) {         ans[ord[m++]] = 'R';       }       while (--y >= 0) {         ans[ord[m++]] = 'Y';       }       while (--b >= 0) {         ans[ord[m++]] = 'B';       }     } else if ((r >= b) && (b >= y)) {       while (--r >= 0) {         ans[ord[m++]] = 'R';       }       while (--b >= 0) {         ans[ord[m++]] = 'B';       }       while (--y >= 0) {         ans[ord[m++]] = 'Y';       }     } else if ((y >= b) && (b >= r)) {       while (--y >= 0) {         ans[ord[m++]] = 'Y';       }       while (--b >= 0) {         ans[ord[m++]] = 'B';       }       while (--r >= 0) {         ans[ord[m++]] = 'R';       }     } else if ((y >= r) && (r >= b)) {       while (--y >= 0) {         ans[ord[m++]] = 'Y';       }       while (--r >= 0) {         ans[ord[m++]] = 'R';       }       while (--b >= 0) {         ans[ord[m++]] = 'B';       }     } else {       if ((b >= r) && (r >= y)) {         for (; --b >= 0;) {           ans[ord[m++]] = 'B';         }         while (--r >= 0) {           ans[ord[m++]] = 'R';         }         while (--y >= 0) {           ans[ord[m++]] = 'Y';         }       } else {         while (--b >= 0) {           ans[ord[m++]] = 'B';         }         while (--y >= 0) {           ans[ord[m++]] = 'Y';         }         while (--r >= 0) {           ans[ord[m++]] = 'R';         }       }     }     ans[m] = '\0';     printf("%s\n", ans);   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cctype> #include <cmath> #include <cstdio> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <string> #include <utility> #include <vector>  using namespace std; 
typedef long double ld; typedef long long LL; typedef pair<int, int> ii; typedef pair<int, int> PII; typedef vector<int> vi; typedef vector<int> VI;  const int N = 1100;  int n, cnt[6]; int ans[N]; char cc[6] = {'R', 'O', 'Y', 'G', 'B', 'V'};  void pre() { ans[0] = -10000; }  bool nb(int t, int v) {   int res = t - v;   return (res == 1 || res == -1 || res == 5 || res == -5 || res == 0); }  bool dfs(int p) {   if (p == n + 1) {     if (!nb(ans[1], ans[n])) {       return 1;     } else {       return false;       for (int T = 1; T <= n; ++T) {         printf("%c", cc[ans[T]]);       }       cout << endl;     }   }   vector<int> pos;   int maxc = -10000;   for (int T = 0; T < 6; ++T) {     if (cnt[T] > maxc && !nb(T, ans[p - 1])) {       pos.clear();       pos.push_back(T);       maxc = cnt[T];     } else {       if (cnt[T] == maxc) {         pos.push_back(T);       }     }   }   if (maxc == -10000) {     return false;   }   for (int T = 0; T < (int)pos.size(); ++T) {     int t = pos[T];     if (!nb(t, ans[p - 1])) {       cnt[t]--;       ans[p] = t;       bool res = dfs(p + 1);       if (res) {         return 1;       }       cnt[t]++;     }   }   return false; }  inline void yjpaysbrmk(int &maxc) {   int T;   for (T = 0; T < 6;) {     scanf("%d ", &cnt[T]);     if (cnt[T] > maxc) {       maxc = cnt[T];     }     ++T;   } }  inline void bpilvzpniv() {   int T = 1;   while (T <= n) {     printf("%c", cc[ans[T]]);     ++T;   } }  void work() {   scanf("%d ", &n);   int maxc = 0;   yjpaysbrmk(maxc);   if (maxc > n / 2) {     cout << "IMPOSSIBLE" << endl;     return;   }   if (dfs(1)) {     bpilvzpniv();     cout << endl;   } else {     cout << "IMPOSSIBLE" << endl;   } }  
int main() {   ios::sync_with_stdio(true);    pre();   int q;   scanf("%d ", &q);   for (int T = 1; T <= q; ++T) {     printf("Case #%d: ", T);     work();   }   return 0; }
#include <algorithm> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std; 
const int INF = 1000000000; const long double PI = 3.1415926535897932384626433832795; const int MAXN = 1005; const double EPS = 1e-9;  int main() {   int j;    cin >> j;    {     int t = 1;     while (t <= j) {       int p, get, o, y, g, b, v;       cin >> p >> get >> o >> y >> g >> b >> v;       string s = "";        if ((get > p / 2) || (y > p / 2) || (b > p / 2)) {         s = "IMPOSSIBLE";       } else {         vector<pair<int, string>> v;         v.push_back({get, "R"});         v.push_back({y, "Y"});         v.push_back({b, "B"});         sort(v.begin(), v.end());         reverse(v.begin(), v.end());         while (v[0].first > 0) {           s += v[0].second;           v[0].first--;           if (v[1].first > v[2].first) {             s += v[1].second;             v[1].first--;           } else {             s += v[2].second;             v[2].first--;           }         }         while ((v[1].first > 0) || (v[2].first > 0)) {           if (v[1].first > v[2].first) {             s += v[1].second;             v[1].first--;           } else {             s += v[2].second;             v[2].first--;           }         }       }       printf("Case #%d: %s\n", t, s.c_str());       ++t;     }   }    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <deque> #include <fstream> #include <functional> #include <iostream> #include <iterator> #include <list> #include <map> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector>   using namespace std; 
typedef set<int> si; typedef long double ld; typedef pair<int, int> ii; typedef pair<int, int> PII; typedef vector<int> VI; typedef long double LD;  ofstream fout;  ifstream fin;  using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  ll gcd(ll a, ll b) {   ll t;   while ((t = a % b) != 0) {     a = b;     b = t;   }   return b; }  ll fast_exp(ll N, ll n, ll j) {   if (n == 0) {     return 1;   }   ll t = fast_exp(N, n / 2, j);   if (n % 2 == 0)     return (t * t) % j;   else     return (((t * t) % j) * N) % j; }  bool is_set(int i, ll q) { return (q >> i) & 1; }  int count_bits(ll q) {   int ans = 0;   {     int i = 0;     while (i < 64) {       if (is_set(i, q))         ++ans;       ++i;     }   }   return ans; }  int first_bit(ll q) {   int ret_val = -1;   int i = 0;   while (i < 64)     if (is_set(i++, q))       return i - 1;   return ret_val; }  
int main() {   fout.open("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_11_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/ibrahim5253/outer_temp/ibrahim5253/A-small-practice_transformation.out");    fin.open("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_11_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/ibrahim5253/A-small-practice.in");    int t;   fin >> t;   {     int i = 1;     for (; i <= t;) {       int n, r, o, y, g, b, v;       fin >> n >> r >> o >> y >> g >> b >> v;       int ma = n / 2;       fout << "Case #" << i << ": ";       if (r > ma || y > ma || b > ma) {         fout << "IMPOSSIBLE\n";         ++i;         continue;       }       vector<pair<int, char>> V;       V.push_back(make_pair(r, 'R')), V.push_back(make_pair(y, 'Y')),           V.push_back(make_pair(b, 'B'));       sort(V.begin(), V.end());       char s[n + 1];       int p = 0;       int a = V[2].first;       while (a--) {         s[p] = V[2].second, p = (p + 2) % n, p = (p == 0 ? 1 : p);       }       a = V[1].first;       while (a--)         s[p] = V[1].second, p = (p + 2) % n, p = (p == 0 ? 1 : p);       a = V[0].first;       while (a--)         s[p] = V[0].second, p = (p + 2) % n, p = (p == 0 ? 1 : p);       for (int i = 0; i < n; ++i) {         fout << s[i];       }       fout << "\n";       ++i;     }   }   return 0; }
#include <bits/stdc++.h> #include <iostream> #include <utility> #include <vector> using namespace std;
const int INF = 1000000000; const int mod = 1000000007; const long double PI = 3.1415926535897932384626433832795; typedef vector<vector<int>> vvi; typedef long long ll; typedef pair<int, int> PII; typedef pair<int, int> pii; typedef unsigned long long ull; typedef vector<int> VI; typedef long double LD;  using LL = long long;  int x[6]; string s = "ROYGBV";  
int main() {   ios::sync_with_stdio(0);    freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_12_Usenix_RF_1.0_True_MCTS_Classic_True/Mucosolvan/jiian/A-small-practice.in",           "r", stdin);    int solve, v = 0;   cin >> solve;   for (; solve--;) {     int n;     cin >> n;     for (int get = 0; get < 6; get++)       cin >> x[get];     string t = "";     int flag = 0;     while (t.size() < n) {       int mx = 0, c = 0;       for (int get = 0; get < 6; get++) {         if (s[get] == t.back())           continue;         if (x[get] == mx && t.size())           if (s[get] == t[0])             mx = x[get], c = get;         if (x[get] > mx)           mx = x[get], c = get;       }       if (s[c] == t.back() || x[c] == 0) {         flag = 1;         break;       }       t.push_back(s[c]);       x[c]--;     }      if (t.size() > 1 && t[0] == t.back())       flag = 1;     printf("Case #%d: ", ++v);     if (flag)       puts("IMPOSSIBLE");     else       printf("%s\n", t.c_str());   }   return 0; }
#include <bits/stdc++.h> #include <fstream> #include <iostream>  using namespace std;  
typedef long double ld; typedef pair<int, int> pii;  const int maxN = 1e6 + 5;  int t, r, o, y, g, b, tc, ans[maxN], sum; set<pii, greater<pii>> s;  
int main() {    int ret_val = 0;    cin >> t;   for (int test = (1); test <= ((t)); ++test) {     cin >> sum >> r >> o >> y >> g >> b >> tc;     s.clear();     if (r > 0)       s.insert(pii(r, 1));     if (y > 0)       s.insert(pii(y, 2));     if (b > 0)       s.insert(pii(b, 3));     int maxim = max(r, y);     maxim = max(maxim, b);     cout << "Case #" << test << ": ";      if (maxim > sum / 2) {       cout << "IMPOSSIBLE";     } else {       pii m = *s.begin();       s.erase(s.begin());       ans[0] = m.second;       s.insert(pii(m.first - 1, m.second));        int cnt = 1;       for (; cnt < sum;) {         pii m = *s.begin();         if (m.second == ans[cnt - 1]) {           pii tmp = m;           s.erase(s.begin());           m = *s.begin();           ans[cnt] = m.second;           s.erase(s.begin());           if (m.first > 0)             s.insert(pii(m.first - 1, m.second));           s.insert(tmp);         } else {            ans[cnt] = m.second;           s.erase(s.begin());           if (m.first > 0)             s.insert(pii(m.first - 1, m.second));         }         cnt++;       }       if (ans[sum - 1] == ans[0]) {         swap(ans[sum - 1], ans[sum - 2]);         if (ans[sum - 2] == ans[sum - 3]) {           cout << "IMPOSSIBLE";         } else {           for (int i = (0); i <= ((sum)-1); ++i) {             if (ans[i] == 1)               cout << "R";             if (ans[i] == 2)               cout << "Y";             if (ans[i] == 3)               cout << "B";           }         }       } else {         int i;         for (i = (0); i <= ((sum)-1); ++i) {           if (ans[i] == 1)             cout << "R";           if (ans[i] == 2)             cout << "Y";           if (ans[i] == 3)             cout << "B";         }       }     }     cout << endl;   }   return ret_val; }
#include <algorithm> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <ctime> #include <deque> #include <fstream> #include <iomanip> #include <iostream> #include <iterator> #include <map> #include <numeric> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <vector>  using namespace std;
const double EPS = 1e-9;  ifstream fin;  map<char, int> mmm;  struct my_sort {   bool operator()(const pair<int, char> &left, const pair<int, char> &right) {     if (left.first > right.first) {       return true;     } else {       if (left.first < right.first) {         return false;       } else {         return mmm[left.second] < mmm[right.second];       }     }   } };  int solve(int a) {   mmm.clear();   int n, r, o, y, g, b, v;   fin >> n >> r >> o >> y >> g >> b >> v;   pair<int, char> arr[3];   arr[0] = pair<int, char>(r, 'R');   arr[1] = pair<int, char>(y, 'Y');   arr[2] = pair<int, char>(b, 'B');   sort(arr, arr + 3, greater<pair<int, char>>());     for (int get = 0; get < 3; get++) {     mmm[arr[get].second] = get;   }    printf("Case #%d: ", a);   string sol = "";   bool im = false;   char last = '-';   for (int get = 0; get < n && !im; get++) {     int mi = -1;     sort(arr, arr + 3, my_sort());     for (int j = 0; j < 3; j++) {       if (arr[j].second != last) {         mi = j;         break;       }     }     if (arr[mi].first <= 0) {       im = 1;       break;     } else {       if (mi == -1) {         im = 1;         break;       }     }     sol += arr[mi].second;     last = arr[mi].second;     arr[mi].first--;   }   if (im || (sol[0] == sol[n - 1])) {     printf("IMPOSSIBLE\n");   } else {     printf("%s\n", sol.c_str());   }   return 1; }  
int main() {   ios::sync_with_stdio(false);    fin.open("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_17_Usenix_RF_1.0_True_MCTS_Classic_True/try/Thanabhat/A-small-practice.in");    freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_17_Usenix_RF_1.0_True_MCTS_Classic_True/try/Thanabhat/outer_temp/Thanabhat/A-small-practice_transformation.out",           "w", stdout);    int t;   fin >> t;   int get;   for (get = 1; get <= t; get++) {     solve(get);   }   return 0; }
#include <bits/stdc++.h> #include <iomanip> #include <iostream> #include <utility> #include <vector> using namespace std; 
typedef long long ll; typedef pair<int, int> ii; typedef pair<int, int> pii; typedef unsigned long long ull; typedef vector<int> vi; typedef long double LD;  using LL = long long;  double e[123], v[123], s[123], a[123][123], dp[123];  
int main() {   ios::sync_with_stdio(0);    int solve, y = 0;   cin >> solve;   while (solve--) {     int n, q;     cin >> n >> q;     for (int i = 1; i <= n; i++)       cin >> e[i] >> v[i];     for (int i = 1; i <= n; i++)       for (int j = 1; j <= n; j++)         cin >> a[i][j];     for (int i = 2; i <= n; i++)       s[i] = s[i - 1] + a[i - 1][i];     dp[1] = 0;     for (int i = 2; i <= n; i++)       dp[i] = 1e17;     for (int i = 0; i < n; i++)       for (int j = i + 1; j <= n; j++)         if (s[j] - s[i] <= e[i])           dp[j] = min(dp[j], dp[i] + (s[j] - s[i]) / v[i]);     int qu, qv;     cin >> qu >> qv;     cout << "Case #" << ++y << ": " << fixed << setprecision(10) << dp[n]          << "\n";   }   return 0; }
#include <algorithm> #include <climits> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <functional> #include <iomanip> #include <map> #include <math.h> #include <numeric> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <utility> #include <vector> using namespace std; 
typedef double td_d; typedef long long LL; typedef pair<int, int> PII; typedef unsigned long long ull; typedef vector<int> VI; typedef long double LD; typedef vector<vector<int>> vvi;  int N, Q, U, V; int e[200]; double s[200]; int d[200][200]; int go[200];  double ans[200]; 
int main(void) {   int ret_val = 0;   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_13_Usenix_RF_1.0_True_MCTS_Classic_True/lazyBit/iPeter/A-small-practice.in",           "r", stdin);   int t;   scanf("%d", &t);   for (int tt = 1; tt <= t; tt++) {     scanf("%d%d", &N, &Q);     for (int i = 0; i < N; ++i)       scanf("%d%lf", &e[i], &s[i]);     for (int i = 0; i < N; ++i)       for (int j = 0; j < N; ++j)         scanf("%d", &d[i][j]);      for (int k = 0; k < N; ++k)       for (int i = 0; i < N; ++i)         for (int j = 0; j < N; ++j) {           if (d[k][j] < 0)             continue;           else if (i == j || d[i][k] < 0)             continue;            if (d[i][j] < 0 || d[i][j] >= d[i][k] + d[k][j]) {             d[i][j] = d[i][k] + d[k][j];           }         }      printf("Case #%d:", tt);      for (; Q--;) {       scanf("%d%d", &U, &V);       --U, --V;       for (int i = 0; i < N; ++i) {         ans[i] = -1;         go[i] = false;       }       ans[U] = 0;         int cur = U;       while (1) {         go[cur] = true;         for (int i = 0; i < N; ++i) {           if (d[cur][i] > e[cur] || d[cur][i] < 0)             continue;           if (ans[i] < 0 || ans[i] > ans[cur] + d[cur][i] / s[cur])             ans[i] = ans[cur] + d[cur][i] / s[cur];         }          td_d mind = -1;         for (int i = 0; i < N; ++i) {           if (go[i] || ans[i] < 0)             continue;           if (mind < 0 || mind > ans[i]) {             cur = i;             mind = ans[i];           }         }          if (mind < 0)           break;       }        printf(" %lf", ans[V]);     }      puts("");   }   return ret_val; }
#include <bits/stdc++.h> #include <iomanip> #include <iostream> #include <stdio.h>  using namespace std; 
const int INF = 1000000000;  typedef pair<int, int> ii;  long long pwr(long long s, long long p, long long mod = (1000000007LL)) {   long long ans = 1;   while (p) {     if (p & 1)       ans = (ans * s) % mod;     s = (s * s) % mod;     p /= 2;   }   return ans; }  long long solve(long long a, long long b) {   if (b == 0)     return a;   return solve(b, a % b); }  const int N = 102; int n, q; double endurance[N], speed[N], adj[N][N], dist[N][N];  inline void hfansufllc(int &src, priority_queue<pair<double, int>> &pq,                        double &dd, int &vv) {   dist[src][vv] = dd;   pq.push(pair<double, int>(-dd, vv)); }  void dijkstra(int src) {   for (int i = 1; i <= n; i++)     dist[src][i] = 1e15;   priority_queue<pair<double, int>> pq;   dist[src][src] = 0;   pq.push(pair<double, int>(0, src));   while (!pq.empty()) {      int v = pq.top().second;     double d = -pq.top().first;     pq.pop();     if (d > dist[src][v])       continue;      for (int vv = 1; vv <= n; vv++) {       if (adj[v][vv] > endurance[v]) {         continue;       }       double dd = d + adj[v][vv] / speed[v];       if (dd < dist[src][vv])         hfansufllc(src, pq, dd, vv);     }   } }  inline void jantgzcnjq(int &i, int &j) {   cin >> adj[i][j];   if (adj[i][j] == -1)     adj[i][j] = 1e15; }  inline void qflyfoquat(int &i) {   for (int j = 1; j <= n; j++)     jantgzcnjq(i, j); }  
int main() {    cin.tie(0);    int t, x = 1;   cin >> t;   while (t--) {      cin >> n >> q;     for (int i = 1; i <= n; i++)       cin >> endurance[i] >> speed[i];      for (int i = 1; i <= n; i++)       qflyfoquat(i);      for (int r = 1; r <= n; r++)       for (int i = 1; i <= n; i++)         for (int j = 1; j <= n; j++)           adj[i][j] = min(adj[i][j], adj[i][r] + adj[r][j]);      for (int i = 1; i <= n; i++)       dijkstra(i);      printf("Case #%d:", x++);     while (q--) {       int a, b;       cin >> a >> b;       printf(" %.7f", dist[a][b]);     }     printf("\n");   }    return 0; }
#include <bits/stdc++.h> #include <fstream> #include <iomanip> #include <iostream> #include <stdio.h>  using namespace std; 
typedef long long td_ll;  const long long inf = 1e16 + 7; const long long maxN = 1e3 + 5;  int n, q, u, v, t; int horse[maxN], dist[maxN][maxN], speed[maxN]; long long pref[maxN]; long double dp[maxN];  
int main() {    int ret_val = 0;    cin >> t;   for (td_ll x = (1); x <= ((t)); ++x) {     cin >> n >> q;     for (td_ll i = (1); i <= ((n)); ++i)       cin >> horse[i] >> speed[i];     for (td_ll i = (1); i <= ((n)); ++i) {       for (td_ll m = (1); m <= ((n)); ++m) {         cin >> dist[i][m];       }     }     pref[1] = 0;     for (td_ll i = (2); i <= (n); ++i) {       pref[i] = pref[i - 1] + dist[i - 1][i];     }     cout << "Case #" << x << ": ";     for (td_ll _ = (0); _ <= ((q)-1); ++_) {       cin >> u >> v;       for (td_ll i = (1); i <= ((n)); ++i)         dp[i] = (long double)inf;       dp[1] = 0;       for (td_ll i = (1); i <= ((n)); ++i) {         for (td_ll m = (i + 1); m <= (n); ++m) {            if (pref[m] - pref[i] > horse[i])             break;           dp[m] =               min(dp[m], dp[i] + (pref[m] - pref[i]) / (long double)speed[i]);         }       }       cout << fixed << setprecision(9) << dp[n];     }     cout << "\n";   }   return ret_val; }
#include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <deque> #include <fstream> #include <iostream> #include <map> #include <set> #include <sstream> #include <stdio.h> #include <string> #include <unordered_map> #include <utility> #include <vector>  using namespace std; 
const int MAXN = 1005; const int MOD = 1000000007;  int solve(int x) {   long long n, N, e[105], s[105], d[105], temp;   scanf("%lld %lld ", &n, &N);   for (int i = 0; i < n; i++) {     scanf("%lld %lld ", &e[i], &s[i]);   }    int i;   for (i = 0; i < n; i++) {     for (int j = 0; j < n; j++) {       if (j == i + 1) {         scanf("%lld ", &d[i]);       } else         scanf("%lld ", &temp);     }   }   scanf("%lld %lld ", &temp, &temp);      vector<long double> dp(105);   for (int i = 0; i < n; i++) {     dp[i] = 1e11;   }   dp[n - 1] = 0;   for (int i = n - 2; i >= 0; i--) {     long double sss = 0;     long long ee = e[i];     long double a = 0;     for (int j = i; j < n - 1; j++) {       ee -= d[j];       if (ee < 0) {         break;       }       a += (1.0 * d[j]) / s[i];        if (j == i || a + dp[j + 1] < sss) {         sss = a + dp[j + 1];        }     }     dp[i] = sss;    }   cout << "Case #" << x << ": " << fixed << dp[0] << endl;   return 1; }  
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_17_Usenix_RF_1.0_True_MCTS_Classic_True/try/Thanabhat/outer_temp/Thanabhat/A-small-practice_transformation.out",           "w", stdout);    freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_17_Usenix_RF_1.0_True_MCTS_Classic_True/try/Thanabhat/A-small-practice.in",           "r", stdin);    int get = 0;   int t;   scanf("%d ", &t);   cout.precision(7);   for (int i = 1; i <= t; i++) {     solve(i);   }   return get; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> #include <vector> using namespace std;
const int MOD = 1000000007; const long double PI = 3.1415926535897932384626433832795;  int tc;  inline void gndtsjlqwu(int &get, long long dp[18][2][10], int &i, int &j) {   dp[i + 1][0][get] += dp[i][1][j]; }  long long ctdy(string input) {   long long dp[18][2][10];   memset(dp, 0, sizeof(dp));   {     int i = '0';     for (; i <= input[0];) {       if (i != input[0]) {         dp[0][0][i - '0'] = 1;       } else {         dp[0][1][i - '0'] = 1;       }       i++;     }   };   for (int i = 0; i < input.size() - 1; i++) {     for (int j = 0; j <= 9; j++) {       for (int get = j; get <= 9; get++)         dp[i + 1][0][get] += dp[i][0][j];     }     for (int j = 0; j <= 9; j++) {       if (dp[i][1][j] == 0)         continue;       for (int get = j; get <= input[i + 1] - '0'; get++) {         if (get != input[i + 1] - '0')           gndtsjlqwu(get, dp, i, j);         else {           dp[i + 1][1][get] += dp[i][1][j];         }       }     }   }   long long sum = 0;   for (int i = 0; i <= 9; i++) {     sum += dp[input.size() - 1][0][i];     sum += dp[input.size() - 1][1][i];   }   return sum; }
int main() {   cin >> tc;   for (int t = 1; t <= tc; t++) {     char c[30];     long long num;     string s;     cin >> c;     sscanf(c, "%lld", &num);     s = c;     long long goal = ctdy(s);      long long ub = num, lb = 0, m;     while (ub - lb > 1) {       m = (ub + lb) / 2;       num = m;       sprintf(c, "%lld", num);       s = c;       if (ctdy(s) != goal) {         lb = m;       } else {         ub = m;       }     }      printf("Case #%d: %lld\n", t, ub);   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cstdio> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iostream> #include <iterator> #include <list> #include <map> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;
const double EPS = 1e-9; typedef long double ld; typedef long long ll; typedef pair<int, int> ii; typedef pair<int, int> pii; typedef pair<int, int> PII; typedef long double LD;  const int MOD = 1000000007;  int tc;  long long ctdy(string input) {   long long dp[18][2][10];   memset(dp, 0, sizeof(dp));   for (int i = '0'; i <= input[0]; i++) {     if (i != input[0]) {       dp[0][0][i - '0'] = 1;     } else {       dp[0][1][i - '0'] = 1;     }   };   for (int i = 0; i < input.size() - 1; i++) {     for (int j = 0; j <= 9; j++) {        int get;       for (get = j; get <= 9; get++) {         dp[i + 1][0][get] += dp[i][0][j];       }     }     for (int j = 0; j <= 9; j++) {       if (dp[i][1][j] == 0)         continue;       for (int get = j; get <= input[i + 1] - '0'; get++) {         if (get != input[i + 1] - '0') {           dp[i + 1][0][get] += dp[i][1][j];         } else {           dp[i + 1][1][get] += dp[i][1][j];         }       }     }   }   ll sum = 0;   {     int i = 0;     while (i <= 9) {       sum += dp[input.size() - 1][0][i];       sum += dp[input.size() - 1][1][i];       i++;     }   }   return sum; }  inline void azjprkrmns(ll &num, char c[30], std::string &s, ll &goal, ll &lb,                        ll &ub, ll &m) {   m = (ub + lb) / 2;   num = m;   sprintf(c, "%lld", num);   s = c;   if (ctdy(s) != goal)     lb = m;   else {     ub = m;   } }
int main() {   ios::sync_with_stdio(true);   cin >> tc;   int t;   for (t = 1; t <= tc; t++) {     char c[30];     ll num;     string s;     scanf("%s", c);     sscanf(c, "%lld", &num);     s = c;     ll goal = ctdy(s);       ll ub = num, lb = 0, m;     while (ub - lb > 1)       azjprkrmns(num, c, s, goal, lb, ub, m);       printf("Case #%d: %lld\n", t, ub);   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> using namespace std;
typedef long long ll;  typedef pair<ll, ll> pll; typedef vector<int> vi; typedef vector<vi> vvi; typedef vector<ll> vll; typedef set<int> si;  const int N = 1002; int t, digits; ll n; bool dp[N][12]; string ans, nString;  bool biggerThanN(string x) {   if (((int)(x).size()) < ((int)(nString).size()))     return false;   if (((int)(x).size()) > ((int)(nString).size()))     return true;   return x > nString; }  string conv(ll x) {   stringstream ss;   ss << x;   return ss.str(); }  inline bool uqsysjwwzr(int &i, int &p) {   dp[i][p] = true;   return true;   return false; }  void solve(int i, int p, string curr) {   if (biggerThanN(curr)) {     if (uqsysjwwzr(i, p)) {       return;     }   }   if (i <= digits + 1)     if (curr != "") {       if (((int)(curr).size()) > ((int)(ans).size()))         ans = curr;       if (((int)(curr).size()) == ((int)(ans).size()) and curr > ans)         ans = curr;     }   if (i == digits + 1)     return;   if (dp[i][p])     return;    {     int j = (p);     while (j <= (int)(9)) {       solve(i + 1, j, curr + char(j + '0'));       ++j;     }   } }
int main() {   scanf("%d", &t);   int testCase;   {     testCase = (1);     while (testCase <= (int)(t)) {       cin >> n;       digits = (int)log10(n) + 1;       nString = conv(n);        ans = "";       memset(dp, 0, sizeof dp);       solve(1, 1, "");       printf("Case #%d: ", testCase);       printf("%s\n", (ans).c_str());       ++testCase;     }   }   return 0; }
#include <bits/stdc++.h> #include <cstdio> #include <cstdlib> #include <cstring> #include <iostream> using namespace std;
char cas[64]; int l;  inline void vzncudvbol(int &i) { i--; }  inline void stbqpwhblo(int &i) {   while ((i >= 1) && (cas[i - 1] == '0')) {     vzncudvbol(i);   }   cas[i - 1]--;   memset(cas + i, '9', (l - i) * sizeof(char)); }
int main() {   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_3_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/try/A-small-practice.in",           "r", stdin);   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_3_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/try/outer_temp/try/A-small-practice_transformation.out",           "w", stdout);   int ans, f;   cin >> ans;   {     int m = 0;     while (m < ans) {       cin >> cas;       l = strlen(cas);       int i;       {         i = l - 1;         while (i >= 1) {           if (cas[i] < cas[i - 1]) {             stbqpwhblo(i);           }           i--;         }       }       printf("Case #%d: %I64d\n", m + 1, atoll(cas));       m++;     }   }   return 0; }
#include <algorithm> #include <cstdio> #include <cstdlib> #include <cstring> #include <iostream> using namespace std;
char s[64]; int n, l;  inline void dcizdlhsvw(int &i) {   while ((i >= 1) && (s[i - 1] == '0')) {     i--;   }    s[i - 1]--;   memset(s + i, '9', (l - i) * sizeof(char)); }  inline void hunzkylkrt(int &ans) {   scanf("%s", s);   l = strlen(s);   for (int i = l - 1; i >= 1; i--) {     if (s[i] < s[i - 1]) {       dcizdlhsvw(i);     }   }   printf("Case #%d: %I64d\n", ans + 1, atoll(s));   ans++; }
int main() {    int t, f;   scanf("%d", &t);   {     int ans = 0;     while (ans < t)       hunzkylkrt(ans);   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cstdio> #include <cstdlib> #include <cstring> #include <deque> #include <fstream> #include <functional> #include <iostream> #include <list> #include <math.h> #include <numeric> #include <sstream> #include <utility> #include <vector> using namespace std;
const int mod = 1000000007; const double EPS = 1e-9; const int MOD = 1000000007; const int INF = 1000000000; typedef set<int> si; typedef long long ll; typedef pair<int, int> PII; typedef vector<int> vi; typedef vector<int> VI; typedef long double LD;  char tc[64]; int get, l;  inline void wsdqewzxvo(int &t, int &c) {   c = 0;   while (c < t) {     cin >> tc;     l = strlen(tc);     {       int i = l - 1;       while (i >= 1) {         if (tc[i] < tc[i - 1]) {           while ((i >= 1) && (tc[i - 1] == '0')) {             i--;           }           tc[i - 1]--;           memset(tc + i, '9', (l - i) * sizeof(char));         }         i--;       }     }     printf("Case #%d: %I64d\n", c + 1, atoll(tc));     c++;   } }
int main() {   ios::sync_with_stdio(false);    freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_3_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/try/A-small-practice.in",           "r", stdin);   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_3_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/try/outer_temp/try/A-small-practice_transformation.out",           "w", stdout);   int c, t, f;   cin >> t;   wsdqewzxvo(t, c);   return 0; }
include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector>  using namespace std;
const long double PI = 3.1415926535897932384626433832795; typedef long long ll; typedef pair<int, int> pii; typedef pair<int, int> PII; typedef vector<int> vi; typedef long double LD; typedef set<int> si;  inline void xncicsogfw(std::string &b, int &r) { b[r] = '9'; }  inline void dwcqshtpgn(std::string &b, int &r) { xncicsogfw(b, r); }  void work() {   string b;   cin >> b;   int pos;   for (int c = 1; c <= 18; ++c) {     pos = -1;     {       int r = 0;       for (; r < (int)b.size() - 1;) {         if (b[r] > b[r + 1]) {           b[r]--;           pos = r + 1;           break;         }         ++r;       }     }     if (pos != -1) {       for (int r = pos; r < (int)b.size(); ++r)         dwcqshtpgn(b, r);     }   }   for (int r = 0; r < (int)b.size(); ++r) {     if (b[r] != '0') {       pos = r;       break;     }   }   for (int r = pos; r < (int)b.size(); ++r) {     cout << b[r];   }   cout << endl; }
int main() {   ios::sync_with_stdio(0);    freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_5_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/Tashi711/A-small-practice.in",           "r", stdin);   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_5_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/Tashi711/outer_temp/Tashi711/A-small-practice_transformation.out",           "w", stdout);   int q;   cin >> q;   for (int r = 1; r <= q; ++r) {     cout << "Case #" << r << ": ";     work();   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <complex> #include <cstdio> #include <cstring> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <numeric> #include <set> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> #include <vector> using namespace std;
ofstream fout;  ifstream fin;  inline void rkmgxaoauh(int &j, int &t) {   t = 1;   while (t <= j) {     long long s;     vector<int> c;     fin >> s;      while (s > 0) {       c.push_back(s % 10);       s = s / 10;     }     int ind = c.size() - 1;     while (ind > 0 && (c[ind] <= c[ind - 1]))       ind--;     if (ind != 0) {       c[ind]--;       while (ind + 1 < c.size() && c[ind + 1] == c[ind] + 1) {         c[ind]++;         c[++ind]--;       }       while (ind > 0)         c[--ind] = 9;     }      for (int i = c.size() - 1; i >= 0; --i)       s = s * 10 + c[i];      fout << "Case #" << t << ": " << s << endl;     ++t;   } }  int main() {   fout.open("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_6_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/WCG/outer_temp/WCG/A-small-practice_transformation.out");    fin.open("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_6_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/WCG/A-small-practice.in");    int j;    fin >> j;    int t;   rkmgxaoauh(j, t);    return 0; }
#include <bits/stdc++.h> using namespace std;
typedef pair<int, int> ii; typedef vector<int> vi; typedef vector<ii> vii; typedef long long ll; const int INF = ~(1 << 31); const double pi = acos(-1);  bool check(int a) {   string s = to_string(a);   vi k;   for (int i = (0); i < (s.size()); i++) {     char m = s[i];     k.push_back(m - '0');   }   vi ne = k;   sort(ne.begin(), ne.end());   for (int i = (0); i < (k.size()); i++)     if (k[i] != ne[i])       return false;   return true; }
int main() {   cin.sync_with_stdio(false);   ofstream fout("ans.txt");   int n;   cin >> n;   for (int i = (0); i < (n); i++) {     int m;     cin >> m;     for (int a = m; a >= 0; a--) {       if (check(a)) {         fout << "Case #" << i + 1 << ": " << a << endl;         break;       }     }   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cctype> #include <climits> #include <cmath> #include <ctime> #include <fstream> #include <functional> #include <iostream> #include <list> #include <queue> #include <set> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <vector> using namespace std;
const long double PI = 3.1415926535897932384626433832795;  typedef set<int> si;  typedef unsigned long long ull; typedef long double LD; typedef pair<int, int> pii; typedef vector<int> VI; typedef vector<pii> vii;  bool solve(int get) {   string s = to_string(get);   VI k;   for (int N = (0); N < (s.size()); N++) {     char t = s[N];     k.push_back(t - '0');   }   VI ne = k;   sort(ne.begin(), ne.end());   for (int N = (0); N < (k.size()); N++)     if (k[N] != ne[N])       return false;   return 1; }
int main() {    ofstream y("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_7_Usenix_RF_1.0_True_MCTS_Classic_True/Thanabhat/bennikartefla/outer_temp/bennikartefla/A-small-practice_transformation.out");   int n;   cin >> n;   for (int N = (0); N < (n); N++) {     int t;     cin >> t;     for (int get = t; get >= 0; get--) {       if (solve(get)) {         y << "Case #" << N + 1 << ": " << get << endl;         break;       }     }   }   return 0; }
#include <bits/stdc++.h> using namespace std;
typedef long long ll; typedef long long LL; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<int> vi; void open() {   freopen("D:/OneDrive/Code/GCJ/B-small-attempt0.in", "r", stdin);   freopen("D:/OneDrive/Code/GCJ/out.txt", "w", stdout); }
int main(void) {   open();   int tc;   scanf("%d", &tc);   for (int ct = 1; ct <= tc; ct++) {     printf("Case #%d: ", ct);     char str[100];     scanf("%s", str);     bool valid = true;     int len = strlen(str);     for (int i = 0; i < len - 1; i++) {       if (str[i] > str[i + 1]) {         valid = false;         int idx = i;         int carry = 1;         while (i >= 0 && carry) {           if (str[i] != '0') {             str[i]--;             carry = 0;           } else {             str[i] = '9';             carry = 1;           }            if (i > 0 && str[i - 1] > str[i]) {             carry = 1;             str[i] = '9';           }            i--;         }          for (int j = 0; j <= idx; j++) {           if (j == 0 && str[j] == '0')             continue;           printf("%c", str[j]);         }          for (int j = idx + 1; j < len; j++) {           printf("9");         }         printf("\n");         break;       }     }      if (valid) {       printf("%s\n", str);     }      cerr << "Test " << ct << " done \n";   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cctype> #include <cstdio> #include <cstdlib> #include <ctime> #include <deque> #include <functional> #include <iomanip> #include <iostream> #include <list> #include <map> #include <sstream> #include <stack> #include <stdlib.h> #include <vector> using namespace std;
typedef long long LL; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<int> vi; void open() {   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_8_Usenix_RF_1.0_True_MCTS_Classic_True/lazyBit/ccsnoopy/A-small-practice.in",           "r", stdin); }
int main(void) {   int ret_val = 0;   open();   int tc;   scanf("%d", &tc);   for (int ct = 1; ct <= tc; ct++) {     printf("Case #%d: ", ct);     char str[100];     scanf("%s", str);     bool valid = true;     int len = strlen(str);     for (int i = 0; i < len - 1; i++) {       if (str[i] > str[i + 1]) {         valid = false;         int idx = i;         int carry = 1;         while (i >= 0 && carry) {           if (str[i] != '0') {             str[i]--;             carry = 0;           } else {             str[i] = '9';             carry = 1;           }            if (i > 0 && str[i - 1] > str[i]) {             carry = 1;             str[i] = '9';           }            i--;         }          for (int j = 0; j <= idx; j++) {           if (j == 0 && str[j] == '0')             continue;           printf("%c", str[j]);         }          for (int j = idx + 1; j < len; j++) {           printf("9");         }         printf("\n");         break;       }     }      if (valid) {       printf("%s\n", str);     }      cerr << "Test " << ct << " done \n";   }   return ret_val; }
#include <bits/stdc++.h> #include <iostream> using namespace std;
typedef long long LL; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<int> vi; void solve() {}  inline void wlpeiogzhu(int &carry, char str[100], int &i) {   carry = 1;   str[i] = '9'; }
int main(void) {    solve();   int tc;   cin >> tc;   for (int N = 1; N <= tc; N++) {     printf("Case #%d: ", N);     char str[100];     cin >> str;     int valid = true;     int len = strlen(str);     for (int i = 0; i < len - 1; i++) {       if (str[i] > str[i + 1]) {         valid = false;         int idx = i;         int carry = 1;         for (; i >= 0 && carry;) {           if (str[i] != '0') {             str[i]--;             carry = 0;           } else {             str[i] = '9';             carry = 1;           }            if (i > 0)             if (str[i - 1] > str[i])               wlpeiogzhu(carry, str, i);            i--;         }          for (int get = 0; get <= idx; get++) {           if (get == 0 && str[get] == '0') {             continue;           }           printf("%c", str[get]);         }          {           int get = idx + 1;           while (get < len) {             printf("9");             get++;           }         }          printf("\n");         break;       }     }      if (valid) {       printf("%s\n", str);     }      cerr << "Test " << N << " done \n";   }   return 0; }
#include <bits/stdc++.h> using namespace std;
using VI = vector<int>; using VVI = vector<VI>; using PII = pair<int, int>; using LL = long long; using VL = vector<LL>; using VVL = vector<VL>; using PLL = pair<LL, LL>; using VS = vector<string>; template <class S, class T> istream &operator>>(istream &is, pair<S, T> &p) {   return is >> p.first >> p.second; } template <class S, class T> ostream &operator<<(ostream &os, const pair<S, T> &p) {   return os << p.first << " " << p.second; } template <class T> void maxi(T &x, T y) {   if (x < y)     x = y; } template <class T> void mini(T &x, T y) {   if (x > y)     x = y; }  const double EPS = 1e-10; const double PI = acos(-1.0); const LL MOD = 1e9 + 7;  bool istidy(LL x) {   int prv = 10;   while (x > 0) {     if (prv < x % 10)       return false;     prv = x % 10;     x /= 10;   }   return true; }
int main() {   cin.tie(0);   ios_base::sync_with_stdio(false);    int T;   cin >> T;   for (int t = (1); t < (T + 1); ++t) {     LL N;     cin >> N;     LL ans = 0;     for (ans = N; ans > 0; --ans)       if (istidy(ans))         break;      cout << "Case #" << t << ": " << ans << endl;   }    return 0; }
#include <bits/stdc++.h> #include <fstream> #include <utility> using namespace std;
ofstream fout;  typedef pair<int, int> pii;  using VI = vector<int>; using VVI = vector<VI>; using PII = pair<int, int>; using LL = long long; using VL = vector<LL>; using VVL = vector<VL>; using PLL = pair<LL, LL>; using VS = vector<string>; template <class S, class T> istream &operator>>(istream &i, pair<S, T> &p) {   return i >> p.first >> p.second; } template <class S, class T> ostream &operator<<(ostream &n, const pair<S, T> &p) {   return n << p.first << " " << p.second; }  bool istidy(LL x) {   int prv = 10;   for (; x > 0;) {     if (prv < x % 10)       return 0;     prv = x % 10;     x /= 10;   }   return 1; }
int main() {   fout.open("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_8_Usenix_RF_1.0_True_MCTS_Classic_True/4yn/okaduki/outer_temp/okaduki/A-small-practice_transformation.out");    int ret_val = 0;   cin.tie(0);    int m;   cin >> m;   for (int t = (1); t < (m + 1); ++t) {     LL N;     cin >> N;     LL ans = 0;     for (ans = N; ans > 0; --ans)       if (istidy(ans))         break;      fout << "Case #" << t << ": " << ans << endl;   }   return ret_val; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <climits> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <iostream> #include <limits> #include <list> #include <map> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <string> #include <unordered_map> #include <vector> using namespace std;
int cc;   int cs;  string st;
int main() {   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_10_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/kuzphi/outer_temp/kuzphi/A-small-practice_transformation.out",           "w", stdout);    int ret_val = 0;   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_10_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/kuzphi/A-small-practice.in",           "r", stdin);   scanf("%d ", &cc);   while (cc--) {     printf("Case #%d: ", ++cs);     cin >> st;     for (int w = 0; w < st.size(); w++) {       if (st[0] == '0')         break;       for (int i = 1; i < st.size(); i++) {         if (st[i] < st[i - 1]) {           st[i - 1]--;           for (int j = i; j < st.size(); j++)             st[j] = '9';           break;         }       }     }     if (st[0] == '0')       for (int i = 1; i < st.size(); i++)         cout << st[i];     else       cout << st;     cout << endl;   }   return ret_val; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <limits> #include <list> #include <map> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;
int T;  typedef long long ll; typedef pair<int, int> pii; typedef unsigned long long ull; typedef vector<int> VI; typedef set<int> si; typedef vector<vector<int>> vvi;  int cs;  string st;
int main() {   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_9_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/kuzphi/A-small-practice.in",           "r", stdin);    int ret_val = 0;   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_9_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/kuzphi/outer_temp/kuzphi/A-small-practice_transformation.out",           "w", stdout);   ios::sync_with_stdio(1);   scanf("%d ", &T);   while (T--) {     printf("Case #%d: ", ++cs);     cin >> st;     for (int solve = 0; solve < st.size(); solve++) {       if (st[0] == '0')         break;       for (int i = 1; i < st.size(); i++) {         if (st[i] < st[i - 1]) {           st[i - 1]--;           for (int j = i; j < st.size(); j++)             st[j] = '9';           break;         }       }     }     if (st[0] == '0')       for (int i = 1; i < st.size(); i++)         cout << st[i];     else       cout << st;     cout << endl;   }   return ret_val; }
#include <algorithm> #include <bits/stdc++.h> #include <cassert> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstring> #include <deque> #include <fstream> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector>    using namespace std;
typedef set<int> si; typedef long double ld; typedef pair<int, int> PII; typedef vector<int> VI;  using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  ll gcd(ll a, ll b) {   ll t;   while ((t = a % b) != 0) {     a = b;     b = t;   }   return b; }  ll fast_exp(ll base, ll n, ll m) {   if (n == 0)     return 1;   ll t = fast_exp(base, n / 2, m);   if (n % 2 == 0)     return (t * t) % m;   else     return (((t * t) % m) * base) % m; }  bool is_set(int i, ll mask) { return (mask >> i) & 1; }  int first_bit(ll mask) {   int i = 0;   while (i < 64) {     if (is_set(i++, mask))       return i - 1;   }   return -1; }
int main() {   ios::sync_with_stdio(true);    freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_10_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/ibrahim5253/A-small-practice.in",           "r", stdin);    int ret_val = 0;    freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_10_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/ibrahim5253/outer_temp/ibrahim5253/A-small-practice_transformation.out",           "w", stdout);   int t;   scanf("%d ", &t);   int i;   for (i = 1; i <= t; ++i) {     string n;     cin >> n;     char l = '0';     int s = n.length();     for (int j = 0; j < s; ++j) {       if (n[j] < l) {         --j;         int q = j;         while (q > 0 && n[q] == '1')           n[q] = '9', --q;         n[q] -= 1;         while (q > 0 && n[q - 1] > n[q])           n[q - 1] -= 1, n[q] = '9', --q;         for (int x = j + 1; x < s; ++x)           n[x] = '9';         break;       }       l = n[j];     }     int q = 0;     while (n[q] == '0')       ++q;     printf("Case #%d: %s\n", i, n.substr(q).c_str());   }   return ret_val; }
include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstring> #include <ctime> #include <fstream> #include <iostream> #include <iterator> #include <map> #include <numeric> #include <queue> #include <set> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector>    using namespace std;
const int MAXN = 1005; const int INF = 1000000000;  ofstream fout;  using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  inline void zdqhhgakww(ll &a, ll &b, ll &t) {   a = b;   b = t; }  ll gcd(ll a, ll b) {   ll t;   while ((t = a % b) != 0)     zdqhhgakww(a, b, t);   return b; }  ll solve(ll base, ll n, ll m) {   if (n == 0)     return 1;   ll t = solve(base, n / 2, m);   if (n % 2 == 0)     return (t * t) % m;   else     return (((t * t) % m) * base) % m; }  bool is_set(int i, ll mask) { return (mask >> i) & 1; }  int count_bits(ll mask) {   int ans = 0;   for (int i = 0; i < 64; ++i)     if (is_set(i, mask))       ++ans;   return ans; }  int first_bit(ll mask) {   int ret_val = -1;   int i = 0;   while (i < 64)     if (is_set(i++, mask))       return i - 1;   return ret_val; }  inline void puhkcigwwp(int &j, int &s, std::string &n) {   int x = j + 1;   while (x < s) {     n[x] = '9';     ++x;   } }
int main() {   ios::sync_with_stdio(false);    fout.open("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_10_Usenix_RF_1.0_True_MCTS_Classic_True/sammyMaX/ibrahim5253/outer_temp/ibrahim5253/A-small-practice_transformation.out");    int ret_val = 0;    int t;   cin >> t;   for (int i = 1; i <= t; ++i) {     string n;     cin >> n;     char l = '0';     int s = n.length();     for (int j = 0; j < s; ++j) {       if (n[j] < l) {         --j;         int N = j;         while (N > 0 && n[N] == '1')           n[N] = '9', --N;         n[N] -= 1;         while (N > 0 && n[N - 1] > n[N])           n[N - 1] -= 1, n[N] = '9', --N;         puhkcigwwp(j, s, n);         break;       }       l = n[j];     }     int N = 0;     while (n[N] == '0')       ++N;     fout << "Case #" << i << ": " << n.substr(N) << "\n";   }   return ret_val; }
#include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <complex> #include <cstdio> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> using namespace std;
const double EPS = 1e-9;  inline void ryijhbdymc(std::string &s) { s.pop_back(); }
 int main() {   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_11_Usenix_RF_1.0_True_MCTS_Classic_True/try/jiian/A-small-practice.in",           "r", stdin);   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_11_Usenix_RF_1.0_True_MCTS_Classic_True/try/jiian/outer_temp/jiian/A-small-practice_transformation.out",           "w", stdout);   int get, c = 0;   scanf("%d ", &get);   while (get--) {     string s;     cin >> s;     reverse(s.begin(), s.end());     int n = s.size();     int tc;     for (tc = 1; tc < n; tc++) {       if (s[tc] <= s[tc - 1])         continue;       {         int j = 0;         while (j < tc) {           s[j] = '9';           j++;         }       }       int j = tc;       while (s[j] == '0')         s[j] = '9', j++;        s[j]--;     }     while (s.back() == '0')       ryijhbdymc(s);     reverse(s.begin(), s.end());     printf("Case #%d: %s\n", ++c, s.c_str());   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cassert> #include <cctype> #include <climits> #include <cstdio> #include <cstring> #include <deque> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <math.h> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> using namespace std;
char s[100];
int main(void) {   int ret_val = 0;   int t;   scanf("%d", &t);   for (int tt = 1; tt <= t; tt++) {         scanf("%s", s);     int k;     for (k = 1; s[k] != 0; ++k) {       if (s[k] < s[k - 1])         break;     }     if (s[k] == 0) {       printf("Case #%d: %s\n", tt, s);       continue;     }      int get = max(0, k - 1);     for (int solve = strlen(s) - 1; solve > get; --solve)       s[solve] = '9';      for (; get >= 0; --get) {       if (get == 0 || s[get] > s[get - 1]) {         --s[get];         break;       }       s[get] = '9';     }      printf("Case #%d: %s\n", tt, s[0] == '0' ? s + 1 : s);   }   return ret_val; }
#include <algorithm> #include <cassert> #include <cctype> #include <climits> #include <cstdio> #include <cstring> #include <ctime> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <map> #include <numeric> #include <queue> #include <set> #include <stdlib.h> #include <utility> #include <vector> using namespace std;
bool f(int n) {   if (n < 10)     return true;   int a = n % 10;   int b = n % 100 / 10;   return f(n / 10) && (a >= b); }  char s[100];
int main(void) {   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_12_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/iPeter/outer_temp/iPeter/A-small-practice_transformation.out",           "w", stdout);    freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_12_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/iPeter/A-small-practice.in",           "r", stdin);    int solve;   cin >> solve;   for (int c = 1; c <= solve; c++) {         cin >> s;     int k;     for (k = 1; s[k] != 0; ++k) {       if (s[k] < s[k - 1])         break;     }     if (s[k] == 0) {       printf("Case #%d: %s\n", c, s);       continue;     }      int i = max(0, k - 1);     for (int j = strlen(s) - 1; j > i; --j)       s[j] = '9';      for (; i >= 0; --i) {       if (i == 0 || s[i] > s[i - 1]) {         --s[i];         break;       }       s[i] = '9';     }      printf("Case #%d: %s\n", c, s[0] == '0' ? s + 1 : s);   }   return 0; }
#include <algorithm> #include <cstdio> #include <cstring> #include <iomanip> #include <iostream> using namespace std;
bool f(int n) {   if (n < 10)     return true;   int a = n % 10;   int b = n % 100 / 10;   return f(n / 10) && (a >= b); }  char s[100];
int main(void) {   int t;   cin >> t;   for (int tt = 1; tt <= t; tt++) {        cin >> s;     int k;     for (k = 1; s[k] != 0; ++k) {       if (s[k] < s[k - 1])         break;     }     if (s[k] == 0) {       cout << "Case #" << tt << ": " << s << "\n";       continue;     }      int i = max(0, k - 1);     for (int j = strlen(s) - 1; j > i; --j)       s[j] = '9';      for (; i >= 0; --i) {       if (i == 0 || s[i] > s[i - 1]) {         --s[i];         break;       }       s[i] = '9';     }      cout << "Case #" << tt << ": " << (s[0] == '0' ? s + 1 : s) << "\n";   }   return 0; }
#include <bits/stdc++.h>  using namespace std;
typedef long long ll; typedef unsigned long long ull; typedef pair<int, int> ii;  ll pwr(ll base, ll p, ll mod = (1000000007LL)) {   ll ans = 1;   while (p) {     if (p & 1)       ans = (ans * base) % mod;     base = (base * base) % mod;     p /= 2;   }   return ans; }  ll gcd(ll a, ll b) {   if (b == 0)     return a;   return gcd(b, a % b); }  vector<int> arr;
int main() {    ios_base::sync_with_stdio(0);   cin.tie(0);    freopen("B-small-attempt0.in", "r", stdin);   freopen("output.txt", "w", stdout);       int t, x = 1;   cin >> t;     while (t--) {      ll val;     cin >> val;      ll z = val;     arr.clear();     while (val) {       arr.push_back(val % 10);       val /= 10;     }     reverse(arr.begin(), arr.end());      bool ok = true;     for (int i = 1; i < (int)arr.size(); i++)       if (arr[i] < arr[i - 1])         ok = false;     if (ok) {       cout << "Case #" << x++ << ": " << z << endl;       continue;     }      int pos = 0;     for (int i = 1; i < (int)arr.size(); i++) {       if (arr[i] < arr[i - 1])         break;       if (arr[i] > arr[i - 1])         pos = i;     }      arr[pos]--;     for (int i = pos + 1; i < (int)arr.size(); i++)       arr[i] = 9;     ll ans = 0;     for (auto it : arr)       ans = ans * 10 + it;     cout << "Case #" << x++ << ": " << ans << endl;   }    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cstdio> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <stdio.h> #include <stdlib.h> #include <string> #include <vector>  using namespace std;
ofstream fout;  long long pwr(long long base, long long p, long long mod = (1000000007LL)) {   long long ans = 1;   while (p) {     if (p & 1)       ans = (ans * base) % mod;     base = (base * base) % mod;     p /= 2;   }   return ans; }  vector<int> y;
int main() {   fout.open("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_13_Usenix_RF_1.0_True_MCTS_Classic_True/WCG/satyaki3794/outer_temp/satyaki3794/A-small-practice_transformation.out");    cin.tie(0);       int t, x = 1;   cin >> t;      for (; t--;) {      long long val;     cin >> val;      long long z = val;     y.clear();     while (val) {       y.push_back(val % 10);       val /= 10;     }     reverse(y.begin(), y.end());      int ok = true;     int i;     for (i = 1; i < (int)y.size(); i++)       if (y[i] < y[i - 1])         ok = false;     if (ok) {       fout << "Case #" << x++ << ": " << z << endl;       continue;     }      int pos = 0;     for (int i = 1; i < (int)y.size(); i++) {       if (y[i] < y[i - 1])         break;       if (y[i] > y[i - 1])         pos = i;     }      y[pos]--;     for (int i = pos + 1; i < (int)y.size(); i++)       y[i] = 9;     long long ans = 0;     for (auto it : y)       ans = ans * 10 + it;     fout << "Case #" << x++ << ": " << ans << endl;   }    return 0; }
#include <bits/stdc++.h> #include <fstream> #include <iostream> #include <vector>  using namespace std;
ofstream fout;  ifstream fin;  typedef long double ld; typedef vector<int> vi; typedef vector<vector<int>> vvi; typedef long long ll; typedef unsigned long long ull; typedef pair<int, int> PII;  ll pwr(ll base, ll p, ll mod = (1000000007LL)) {   ll ans = 1;   for (; p;) {     if (p & 1)       ans = (ans * base) % mod;     base = (base * base) % mod;     p /= 2;   }   return ans; }  ll gcd(ll a, ll b) {   if (b == 0)     return a;   return gcd(b, a % b); }  vector<int> arr;
int main() {   ios::sync_with_stdio(false);    fout.open("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_13_Usenix_RF_1.0_True_MCTS_Classic_True/bennikartefla/satyaki3794/outer_temp/satyaki3794/A-small-practice_transformation.out");    fin.open("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_13_Usenix_RF_1.0_True_MCTS_Classic_True/bennikartefla/satyaki3794/A-small-practice.in");    cin.tie(0);      int t, x = 1;   fin >> t;      while (t--) {      ll val;     fin >> val;      ll z = val;     arr.clear();     while (val) {       arr.push_back(val % 10);       val /= 10;     }     reverse(arr.begin(), arr.end());      bool ok = true;     for (int i = 1; i < (int)arr.size(); i++)       if (arr[i] < arr[i - 1])         ok = false;     if (ok) {       fout << "Case #" << x++ << ": " << z << endl;       continue;     }      int pos = 0;     for (int i = 1; i < (int)arr.size(); i++) {       if (arr[i] < arr[i - 1])         break;       if (arr[i] > arr[i - 1])         pos = i;     }      arr[pos]--;     for (int i = pos + 1; i < (int)arr.size(); i++)       arr[i] = 9;     ll ans = 0;     for (auto it : arr)       ans = ans * 10 + it;     fout << "Case #" << x++ << ": " << ans << endl;   }    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <complex> #include <cstdio> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <utility> #include <vector> using namespace std;
inline bool wxyhxhkblk(_Bool &nkhrz, _Bool &wxyhx) {   nkhrz = 0;   wxyhx = true;   return true;   return false; }  inline bool tfogmvqssj(_Bool &wxyhx, _Bool &tfogm) {   tfogm = wxyhx;   return true;   return false; }  inline bool zweeaajpdx(_Bool &tfogm, _Bool &zweea) {   zweea = tfogm;   return true;   return false; }  inline bool nkhrzqvyds(int &d, int &n, _Bool &nkhrz) {   if (n % 10 > d) {     _Bool wxyhx;     if (wxyhxhkblk(nkhrz, wxyhx)) {       _Bool tfogm;       if (tfogmvqssj(wxyhx, tfogm)) {         _Bool zweea;         if (zweeaajpdx(tfogm, zweea)) {           return zweea;         }       }     }   }   d = n % 10;   n /= 10;   return false; }  bool is_tidy(int n) {   int d = 9;   while (n) {     _Bool nkhrz;     if (nkhrzqvyds(d, n, nkhrz))       return nkhrz;   }   return 1; }
int main(int argc, char **argv) {   int ret_val = 0;   ofstream get("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_14_Usenix_RF_1.0_True_MCTS_Classic_True/WCG/gultai4ukr/outer_temp/gultai4ukr/A-small-practice_transformation.out");   int t;   cin >> t;   {     int tc = 0;     while (tc < t) {       long long int n;       cin >> n;       long long int tidy = 1;       {         int i = n;         while (i > 1) {           if (is_tidy(i)) {             tidy = i;             break;           }           --i;         }       }       get << "Case #" << tc + 1 << ": " << tidy << endl;       ++tc;     }   }   get.close();   return ret_val; }
#include <bits/stdc++.h> #include <iostream> #include <set> #include <utility> #include <vector> using namespace std;
typedef unsigned long long ull; typedef vector<vector<int>> vvi; typedef long long ll; typedef pair<int, int> pii; typedef pair<int, int> PII; typedef vector<int> VI; typedef long double LD; typedef set<int> si;  inline bool rpgfmnafcz(_Bool &rpgfm) {   rpgfm = 0;   return true;   return false; }  bool is_tidy(int n) {   int d = 9;   for (; n;) {     if (n % 10 > d) {       _Bool rpgfm;       if (rpgfmnafcz(rpgfm))         return rpgfm;     }     d = n % 10;     n /= 10;   }   return 1; }
int main(int argc, char **argv) {   ios::sync_with_stdio(false);    ifstream fin("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_14_Usenix_RF_1.0_True_MCTS_Classic_True/bennikartefla/gultai4ukr/A-small-practice.in");   ofstream fout("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_14_Usenix_RF_1.0_True_MCTS_Classic_True/bennikartefla/gultai4ukr/outer_temp/gultai4ukr/A-small-practice_transformation.out");    int t;   fin >> t;    for (int a = 0; a < t; ++a) {     ll n;     fin >> n;     ll tidy = 1;      for (int i = n; i > 1; --i) {       if (is_tidy(i)) {         tidy = i;         break;       }     }     fout << "Case #" << a + 1 << ": " << tidy << endl;   }    fin.close();   fout.close();   return 0; }
#include <bits/stdc++.h> #include <iostream> #include <stdio.h> #include <utility> #include <vector> using namespace std;
typedef vector<int> vi; typedef long long ll; typedef pair<int, int> ii;  bool is_tidy(int n) {   int d = 9;   while (n) {     if (n % 10 > d) {       return 0;     }     d = n % 10;     n /= 10;   }   return 1; }
int main(int argc, char **argv) {   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_14_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/gultai4ukr/outer_temp/gultai4ukr/A-small-practice_transformation.out", "w", stdout);    freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_14_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/gultai4ukr/A-small-practice.in",           "r", stdin);    int open;   scanf("%d ", &open);   for (int testcase = 0; testcase < open; ++testcase) {     ll n;     scanf("%lld ", &n);     ll tidy = 1;     for (int i = n; i > 1; --i) {       if (is_tidy(i)) {         tidy = i;         break;       }     }     cout << "Case #" << testcase + 1 << ": " << tidy << endl;   }    return 0; }
#include <bits/stdc++.h>  using namespace std;
typedef vector<int> vi; typedef long long ll; typedef long double ld; typedef pair<int, int> pii; typedef pair<pii, int> para; const int inf = 1e9 + 7; const int maxN = 1e6 + 5;  int t; string s;
int main() {   ios_base::sync_with_stdio(0);   cin >> t;   for (int x = (1); x <= ((t)); ++x) {     cin >> s;     for (int i = ((int)s.size() - 2); i >= (0); --i) {       if (s[i + 1] < s[i]) {         for (int j = (i + 1); j <= ((int)s.size() - 1); ++j)           s[j] = '9';         s[i]--;       }     }     if (s[0] == '0')       s = s.substr(1, (int)s.size() - 1);     cout << "Case #" << x << ": ";     cout << s << endl;   }   return 0; }
#include <bits/stdc++.h> #include <bitset> #include <deque> #include <iomanip> #include <iostream> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>    using namespace std;
  typedef vector<int> vi; typedef vector<vi> vvi; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<string> vs;  typedef long long ll;             typedef unsigned long long ULL;   typedef unsigned uint;    struct debugger {   template <typename T> debugger &operator,(const T &v) {     cerr << v << " ";     return *this;   } };  void open(int *arr, int n) {   printf("[");   for (int i = 0; i < n; i++)     printf("%d ", arr[i]);   printf("]\n"); }  char str[50];  bool containszero(int tc) {   int i = 0;   while (str[i] == '0') {     i++;   }   while (i < tc) {     if (str[i] == '0')       return true;     i++;   }   return false; } inline void eznrsxcnfd(int &tc, int &j, int &i) {   for (j = i; j < tc; j++)     str[j] = '9';   str[i - 1] = (char)(str[i - 1] - 1); }  inline void jzrjwuyvjy(int &tc, int &j, int &i) {   for (j = i; j < tc; j++)     str[j] = '9';   str[i - 1] = (char)(str[i - 1] - 1); }
  int main() {   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_16_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/lazyBit/outer_temp/lazyBit/A-small-practice_transformation.out",           "w", stdout);    freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_16_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/lazyBit/A-small-practice.in",           "r", stdin);      int n, i, j, k, tc, m, ct, s = 0, d;   scanf("%d", &ct);   ;   int c = 1;   while (ct--) {     scanf("%s ", str);     bool p = 0;     tc = strlen(str);     if (!containszero(tc)) {       for (i = tc - 1; i > 0; i--) {         if (str[i] < str[i - 1])           jzrjwuyvjy(tc, j, i);       }     }     while (containszero(tc)) {       for (i = 0; i < tc; i++) {         if (str[i] == '0') {           for (j = i; j < tc; j++)             str[j] = '9';           str[i - 1] = (char)(str[i - 1] - 1);           break;         }       }       if (!containszero(tc)) {         for (i = tc - 1; i > 0; i--) {           if (str[i] < str[i - 1])             eznrsxcnfd(tc, j, i);         }       }     }     printf("Case #%d: ", c++);     i = 0;     while (str[i] == '0') {       i++;       continue;     }     while (i < tc) {       printf("%c", str[i++]);     }     printf("\n");   }   return (0); }
#include <bits/stdc++.h> #include <bitset> #include <cctype> #include <climits> #include <deque> #include <iomanip> #include <iostream> #include <math.h> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdlib.h>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>   using namespace std;
const int MAXN = 1005; const int MOD = 1000000007;  typedef long double ld; typedef set<int> si; typedef vector<vector<int>> vvi; typedef vector<int> VI;  typedef pair<int, int> pii; typedef vector<pii> vii; typedef vector<string> vs;  typedef long long ll;             typedef unsigned long long ull;   typedef unsigned uint;  const double pi = acos(-1.0);   const double eps = 1e-11;      const int MAXI = 0x7fffffff; const int dx[] = {1, 0, -1, 0}; const int dy[] = {0, 1, 0, -1}; const char dz[] = "SENW"; struct debugger {   template <typename T> debugger &operator,(const T &v) {     cerr << v << " ";     return *this;   } } a;  void debugarr(int *arr, int n) {   cout << "[";   for (int i = 0; i < n; i++)     cout << arr[i] << " ";   cout << "]" << endl; }  char tc[50];  bool containszero(int l) {   int i = 0;   while (tc[i] == '0') {     i++;   }   while (i < l) {     if (tc[i] == '0')       return true;     i++;   }   return false; } inline void slzqhzondr(int &l, int &j, int &i) {   for (j = i; j < l; j++) {     tc[j] = '9';   }   tc[i - 1] = (char)(tc[i - 1] - 1); }  inline void gcvhsjlnla(int &l, int &j, int &i) {   for (j = i; j < l; j++)     tc[j] = '9';   tc[i - 1] = (char)(tc[i - 1] - 1); }
int main() {   ios::sync_with_stdio(1);      int n, i, j, k, l, m, t, s = 0, d;   scanf("%d", &t);   ;   int c = 1;   while (t--) {     cin >> tc;     int p = 0;     l = strlen(tc);     if (!containszero(l)) {       for (i = l - 1; i > 0; i--) {         if (tc[i] < tc[i - 1])           gcvhsjlnla(l, j, i);       }     }     while (containszero(l)) {       {         i = 0;         while (i < l) {           if (tc[i] == '0') {             for (j = i; j < l; j++)               tc[j] = '9';             tc[i - 1] = (char)(tc[i - 1] - 1);             break;           }           i++;         }       }       if (!containszero(l)) {         for (i = l - 1; i > 0; i--) {           if (tc[i] < tc[i - 1])             slzqhzondr(l, j, i);         }       }     }     cout << "Case #" << c++ << ": ";     i = 0;     while (tc[i] == '0') {       i++;       continue;     }     while (i < l) {       cout << tc[i++];     }     cout << "\n";   }   return (0); }
#include <bitset> #include <climits> #include <cmath> #include <cstdio> #include <cstring> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <set> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> #include <vector>  using namespace std;
typedef long double ld; typedef long long ll; typedef pair<int, int> ii; typedef pair<int, int> PII; typedef vector<int> vi; typedef long double LD;  const long double PI = 3.1415926535897932384626433832795;  inline bool biurjrtnle(int &cc, std::string &str, int &biurj) {   printf("Case #%d: %s\n", cc, str.c_str());   biurj = 1;   return true;   return false; }  int get(int cc) {   string str;   cin >> str;   int p = 0;   while (p < str.length() - 1) {     if (str[p] > str[p + 1]) {       break;     }     p++;   }   if (p == str.length() - 1) {     int biurj;     if (biurjrtnle(cc, str, biurj)) {       return biurj;     }   }   while (p > 0 && str[p - 1] == str[p]) {     p--;   }   str[p] = str[p] - 1;   for (int i = p + 1; i < str.length(); i++) {     str[i] = '9';   }   if (str[0] == '0') {     str.erase(str.begin());   }   printf("Case #%d: %s\n", cc, str.c_str());   return 1; }
int main() {   ios::sync_with_stdio(false);    int t;   cin >> t;   for (int i = 0; i < t; i++) {     get(i + 1);   }   return 0; }
include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector>  using namespace std;
ifstream fin;  const int INF = 1000000000; const long double PI = 3.1415926535897932384626433832795; const int MOD = 1000000007;  bool check(int n) {   while (n > 0) {     if (n % 10 < n / 10 % 10) {       return 0;     }     n /= 10;   }   return 1; }
int main() {   fin.open("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_18_Usenix_RF_1.0_True_MCTS_Classic_True/kuzphi/fragusbot/A-small-practice.in");    int get;   fin >> get;   {     int cc = 1;     while (cc <= get) {       printf("Case #%d: ", cc);       int n;       fin >> n;       int ans = n;       while (!check(ans)) {         --ans;       }       printf("%d\n", ans);       ++cc;     }   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <cmath> #include <complex> #include <cstdio> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdlib.h> #include <string> #include <utility> #include <vector>  using namespace std;
typedef long long ll; typedef long long LL; typedef pair<int, int> ii; typedef unsigned long long ull; typedef vector<int> vi; typedef long double LD;  const long long inf = 1000000000000000000LL;  vector<long long> res;  inline bool godmxymizk() {   return true;   return false; }  void rec(long long value, long long d) {   if (value >= inf) {     if (godmxymizk()) {       return;     }   }   res.push_back(value);   {     LL i = d;     for (; i <= 9;) {       if (value < inf / 10LL)         rec(value * 10LL + i, i);        ++i;     }   } }  void get(int test) {   LL n;   cin >> n;    int index = upper_bound(res.begin(), res.end(), n) - res.begin() - 1;   printf("Case #%d: %lld\n", test, res[index]); }
int main() {   ios::sync_with_stdio(false);    for (int i = 1; i <= 9; ++i) {     rec(i, i);   }    sort(res.begin(), res.end());   cerr << "Res size: " << res.size() << endl;    int t;   cin >> t;   {     int i = 0;     for (; i < t;) {       get(i + 1);       cerr << i + 1 << ": " << clock() << endl;       ++i;     }   }    return 0; }
#include <bits/stdc++.h> using namespace std;
typedef long long int lli; typedef pair<lli, lli> pii;  int tc;
int main() {   cin >> tc;   for (int t = 1; t <= tc; t++) {     int n, k;     cin >> n >> k;     priority_queue<int> pq;     pq.push(n);     int y, z;     for (int i = 0; i < k; i++) {       int t = pq.top() - 1;       pq.pop();       y = t / 2 + (t % 2);       z = t / 2;       pq.push(y);       pq.push(z);     }     printf("Case #%d: %d %d\n", t, y, z);   } }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;
const double EPS = 1e-9;  int tc;  inline void ezafjkxplt(int &y, priority_queue<int> &pq, int &z) {   int t = pq.top() - 1;   pq.pop();   y = t / 2 + (t % 2);   z = t / 2;   pq.push(y);   pq.push(z); }
int main() {   ios::sync_with_stdio(false);   cin >> tc;   int t;   for (t = 1; t <= tc; t++) {     int n, x;     cin >> n >> x;     priority_queue<int> pq;     pq.push(n);     int y, z;     for (int i = 0; i < x; i++)       ezafjkxplt(y, pq, z);      printf("Case #%d: %d %d\n", t, y, z);   }   return 0; }
#include <bits/stdc++.h> using namespace std;
ifstream fin("C-small1.in"); ofstream fout("C-small1.out");  void solve() {   int k, n;   fin >> k >> n;   map<int, int> ct;   ct[k] = 1;   for (int i = 1; i < n; i++) {     auto p = *(ct.rbegin());     if (p.second == 1)       ct.erase(p.first);     else       ct[p.first]--;      ct[(p.first - 1) / 2]++;     ct[p.first - 1 - (p.first - 1) / 2]++;   }   fout << ct.rbegin()->first / 2 << ' ' << (ct.rbegin()->first - 1) / 2 << '\n'; }
int main() {   int t;   fin >> t;   for (int i = 0; i < t; i++)     fout << "Case #" << i + 1 << ": ", solve(); }
#include <bits/stdc++.h> #include <bitset> #include <climits> #include <complex> #include <cstdio> #include <cstring> #include <deque> #include <fstream> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <stdlib.h> #include <string> #include <utility> #include <vector>  using namespace std;
typedef long long ll; typedef pair<int, int> pii; typedef pair<int, int> PII; typedef vector<int> vi; typedef long double LD; typedef set<int> si;  struct node {   long long u, v;   node(int _u = 0, int _v = 0) : u(_u), v(_v) {}   bool operator<(const node &r) const { return u < r.u; } };  void get() {   ll n, k;   cin >> n >> k;   map<long long, long long> f;   f[n] = 1;   ll sum = 0;   ll l = (n - 1) / 2, r = n / 2;   while (sum < k) {     ll u = f.rbegin()->first, v = f.rbegin()->second;     f.erase(u);     sum += v;     l = (u - 1) / 2;     r = u / 2;     f[l] += v;     f[r] += v;   }   cout << r << ' ' << l << endl; }
int main() {   ios::sync_with_stdio(true);    freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_5_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/Tashi711/A-small-practice.in",           "r", stdin);   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_5_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/Tashi711/outer_temp/Tashi711/A-small-practice_transformation.out",           "w", stdout);   int q;   cin >> q;   for (int i = 1; i <= q; ++i) {     cout << "Case #" << i << ": ";     get();   }   return 0; }
#include <algorithm> #include <cstdio> #include <cstring> #include <iostream> #include <map> #include <queue> using namespace std;
int main() {   int tt;    cin >> tt;    for (int t = 1; t <= tt; ++t) {     long long n, k, y, z;     map<long long, long long> m;     queue<long long> q;     cin >> n >> k;      q.push(n);     m[n] = 1;      while (k > 0) {       long long c = q.front();       q.pop();       y = c / 2;       z = (c - 1) / 2;       k -= m[c];       if (m.find(y) == m.end())         q.push(y);       m[y] += m[c];       if (m.find(z) == m.end())         q.push(z);       m[z] += m[c];     }      cout << "Case #" << t << ": " << y << " " << z << endl;   }    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;
typedef long long td_ll;  ofstream fout;  ifstream ans;  inline void b(int &t) {   td_ll n, x, y, z;   map<long long, long long> m;   queue<long long> q;   ans >> n >> x;    q.push(n);   m[n] = 1;    while (x > 0) {     td_ll c = q.front();     q.pop();     y = c / 2;     z = (c - 1) / 2;     x -= m[c];     if (m.find(y) == m.end())       q.push(y);     m[y] += m[c];     if (m.find(z) == m.end())       q.push(z);     m[z] += m[c];   }    fout << "Case #" << t << ": " << y << " " << z << endl;   ++t; }  inline void aoxxnbsqnw(int &a, int &t) {   t = 1;   while (t <= a) {     b(t);   } }  int main() {   fout.open("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_6_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/WCG/outer_temp/WCG/A-small-practice_transformation.out");    ans.open("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_6_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/WCG/A-small-practice.in");    int a;    ans >> a;    int t;   aoxxnbsqnw(a, t);    return 0; }
#include <bits/stdc++.h> using namespace std;
typedef pair<int, int> ii; typedef vector<int> vi; typedef vector<ii> vii; typedef long long ll; const int INF = ~(1 << 31); const double pi = acos(-1);
int main() {   cin.sync_with_stdio(false);   ofstream fout("ans.txt");   int n;   cin >> n;   for (int i = (0); i < (n); i++) {     priority_queue<int> k;     int m, q;     cin >> m >> q;     fout << "Case #" << i + 1 << ": ";     k.push(m - 1);     for (int a = (0); a < (q - 1); a++) {       if (k.empty())         break;       else {         int at = k.top();         k.pop();         if (at == 0)           continue;         int want = at / 2;         int first = want;         if (first != 0)           k.push(first - 1);         int second = at - want;         k.push(second - 1);       }     }     if (k.empty())       fout << "0 0" << endl;     else {       int at = k.top();       if (at == 0)         fout << "0 0" << endl;       else {         int first = at / 2;         fout << at - first << " " << first << endl;       }     }   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cassert> #include <climits> #include <complex> #include <cstdio> #include <cstdlib> #include <ctime> #include <iostream> #include <iterator> #include <map> #include <numeric> #include <queue> #include <set> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> using namespace std;
typedef long double LD; typedef set<int> si; typedef pair<int, int> pii; typedef vector<int> VI; typedef vector<pii> vii; typedef long long LL; const int INF = ~(1 << 31); const double pi = acos(-1);
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_7_Usenix_RF_1.0_True_MCTS_Classic_True/lazyBit/bennikartefla/A-small-practice.in",           "r", stdin);    int n;   scanf("%d ", &n);   for (int i = (0); i < (n); i++) {     priority_queue<int> k;     int m, q;     scanf("%d %d ", &m, &q);     cout << "Case #" << i + 1 << ": ";     k.push(m - 1);     for (int a = (0); a < (q - 1); a++) {       if (k.empty())         break;       else {         int at = k.top();         k.pop();         if (at == 0)           continue;         int want = at / 2;         int first = want;         if (first != 0)           k.push(first - 1);         int second = at - want;         k.push(second - 1);       }     }     if (k.empty())       cout << "0 0" << endl;     else {       int at = k.top();       if (at == 0)         cout << "0 0" << endl;       else {         int first = at / 2;         cout << at - first << " " << first << endl;       }     }   }   return 0; }
#include <bits/stdc++.h> #include <iostream> #include <vector> using namespace std;
const int MAXN = 1005;  typedef vector<vector<int>> vvi; typedef unsigned long long ull; typedef long double LD; typedef pair<int, int> PII; typedef vector<int> VI; typedef vector<PII> vii;  inline void owyxhfltvp(int &ans) {   int first = ans / 2;   cout << ans - first << " " << first << endl; }  inline void eescadppjt(priority_queue<int> &k) {   int ans = k.top();   if (ans == 0)     cout << "0 0" << endl;   else     owyxhfltvp(ans); }
int main() {    int get;   cin >> get;   for (int solve = (0); solve < (get); solve++) {     priority_queue<int> k;     int t, q;     cin >> t >> q;     cout << "Case #" << solve + 1 << ": ";     k.push(t - 1);     for (int a = (0); a < (q - 1); a++) {       if (k.empty())         break;       else {         int ans = k.top();         k.pop();         if (ans == 0)           continue;         int want = ans / 2;         int first = want;         if (first != 0)           k.push(first - 1);         int second = ans - want;         k.push(second - 1);       }     }     if (k.empty())       cout << "0 0" << endl;     else {       eescadppjt(k);     }   }   return 0; }
#include <bits/stdc++.h> using namespace std;
typedef long long ll; typedef long long LL; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<int> vi; void open() {   freopen("D:/OneDrive/Code/GCJ/C-small-1-attempt0.in", "r", stdin);   freopen("D:/OneDrive/Code/GCJ/out.txt", "w", stdout); }
int main(void) {   open();   int tc;   scanf("%d", &tc);   for (int ct = 1; ct <= tc; ct++) {     int n, k;     scanf("%d", &n);     scanf("%d", &k);     priority_queue<int> pq;     pq.push(n);      printf("Case #%d: ", ct);      while (k--) {       int top = pq.top();       pq.pop();       int mid = top - 1;       int l, r;       l = mid / 2;       r = (mid + 1) / 2;       if (k == 0) {         printf("%d %d\n", r, l);       }       if (l) {         pq.push(l);       }        if (r) {         pq.push(r);       }     }      cerr << "Test " << ct << " done \n";   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cassert> #include <climits> #include <complex> #include <cstdio> #include <cstdlib> #include <ctime> #include <iterator> #include <map> #include <numeric> #include <queue> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> using namespace std;
const int INF = 1000000000;  typedef long long LL; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<int> vi; void open() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_8_Usenix_RF_1.0_True_MCTS_Classic_True/lazyBit/ccsnoopy/A-small-practice.in",           "r", stdin); }
int main(void) {   int ret_val = 0;   open();   int tc;   scanf("%d", &tc);   for (int a = 1; a <= tc; a++) {     int n, k;     scanf("%d", &n);     scanf("%d", &k);     priority_queue<int> pq;     pq.push(n);      printf("Case #%d: ", a);      while (k--) {       int top = pq.top();       pq.pop();       int mid = top - 1;       int l, r;       l = mid / 2;       r = (mid + 1) / 2;       if (k == 0) {         printf("%d %d\n", r, l);       }       if (l) {         pq.push(l);       }        if (r) {         pq.push(r);       }     }      cerr << "Test " << a << " done \n";   }   return ret_val; }
#include <bits/stdc++.h> #include <iostream> using namespace std;
const long double PI = 3.1415926535897932384626433832795; const int mod = 1000000007;  void solve() {}  inline void vcbtnhfzoy(priority_queue<int> &pq, int &r) { pq.push(r); }  inline void zjhqgywkiy(int &k, priority_queue<int> &pq) {   int top = pq.top();   pq.pop();   int mid = top - 1;   int y, r;   y = mid / 2;   r = (mid + 1) / 2;   if (k == 0) {     printf("%d %d\n", r, y);   }   if (y) {     pq.push(y);   }    if (r) {     vcbtnhfzoy(pq, r);   } }
int main(void) {   solve();   int tc;   cin >> tc;   for (int q = 1; q <= tc; q++) {     int n, k;     cin >> n;     cin >> k;     priority_queue<int> pq;     pq.push(n);      printf("Case #%d: ", q);      while (k--)       zjhqgywkiy(k, pq);      cerr << "Test " << q << " done \n";   }   return 0; }
#include <bits/stdc++.h> using namespace std;
using VI = vector<int>; using VVI = vector<VI>; using PII = pair<int, int>; using LL = long long; using VL = vector<LL>; using VVL = vector<VL>; using PLL = pair<LL, LL>; using VS = vector<string>; template <class S, class T> istream &operator>>(istream &is, pair<S, T> &p) {   return is >> p.first >> p.second; } template <class S, class T> ostream &operator<<(ostream &os, const pair<S, T> &p) {   return os << p.first << " " << p.second; } template <class T> void maxi(T &x, T y) {   if (x < y)     x = y; } template <class T> void mini(T &x, T y) {   if (x > y)     x = y; }  const double EPS = 1e-10; const double PI = acos(-1.0); const LL MOD = 1e9 + 7;
int main() {   cin.tie(0);   ios_base::sync_with_stdio(false);    int T;   cin >> T;   for (int t_ = (1); t_ < (T + 1); ++t_) {     LL N, K;     cin >> N >> K;      vector<bool> xs(N + 2);     xs[0] = xs[N + 1] = true;     tuple<LL, LL, LL> ans;     for (int k = (0); k < (K); ++k) {       tuple<LL, LL, LL> mx(-1, -1, -1);       for (int i = (0); i < (N + 2); ++i) {         if (xs[i])           continue;         LL l, r;         for (l = i - 1; !xs[l]; --l)           ;         for (r = i + 1; !xs[r]; ++r)           ;         l = i - l - 1;         r = r - i - 1;         tuple<LL, LL, LL> t(min(l, r), max(l, r), -i);         maxi(mx, t);       }       xs[-get<2>(mx)] = true;       ans = mx;     }     cout << "Case #" << t_ << ": " << get<1>(ans) << " " << get<0>(ans) << endl;   }    return 0; }
#include <bits/stdc++.h> #include <cassert> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <ctime> #include <fstream> #include <functional> #include <iostream> #include <math.h> #include <numeric> #include <set> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> using namespace std;
inline void eniwewgyyp(int &d, long long &v) {   d++;   v <<= 1; }  inline void ioxbtenuhp(long long &c, int &d) {   long long v = 1;   while (v <= c)     eniwewgyyp(d, v); }
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_11_Usenix_RF_1.0_True_MCTS_Classic_True/try/jiian/A-small-practice.in",           "r", stdin);   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_11_Usenix_RF_1.0_True_MCTS_Classic_True/try/jiian/outer_temp/jiian/A-small-practice_transformation.out",           "w", stdout);   int solve, cas = 0;   scanf("%d ", &solve);   while (solve--) {     long long n, c;     scanf("%lld %lld ", &n, &c);     int d = 0;     ioxbtenuhp(c, d);     printf("Case #%d: ", ++cas);     long long base = 1 << d;     if (n < base) {       puts("0 0");       continue;     }     long long md = (n - (base - 1)) % base;     long long lx = (n - (base - 1)) / base, rx = lx;     int id = c - (1 << (d - 1)) + 1;     if (id <= md)       rx++;     if (id + (1 << (d - 1)) <= md)       lx++;     printf("%lld %lld\n", rx, lx);   }   return 0; }
#include <bits/stdc++.h> #include <fstream> using namespace std;
const int mod = 1000000007; const int MAXN = 1005; ifstream fin;  const double eps = 1e-9;  inline void wflkhnsoui(long long &rx) { rx++; }
int main() {   fin.open("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_11_Usenix_RF_1.0_True_MCTS_Classic_True/sammyMaX/jiian/A-small-practice.in");    int ret_val = 0;    int p, b = 0;   fin >> p;   for (; p--;) {     long long n, q;     fin >> n >> q;     int d = 0;     for (long long v = 1; v <= q; v <<= 1)       d++;     printf("Case #%d: ", ++b);     long long base = 1 << d;     if (n < base) {       puts("0 0");       continue;     }     long long solve = (n - (base - 1)) % base;     long long get = (n - (base - 1)) / base, rx = get;     int id = q - (1 << (d - 1)) + 1;     if (id <= solve)       wflkhnsoui(rx);     if (id + (1 << (d - 1)) <= solve)       get++;     printf("%lld %lld\n", rx, get);   }   return ret_val; }
#include <algorithm> #include <cstdio> #include <cstring> #include <queue> using namespace std;
int main(void) {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_12_Usenix_RF_1.0_True_MCTS_Classic_True/try/iPeter/A-small-practice.in", "r", stdin);    int t;   scanf("%d", &t);   int tt;   for (tt = 1; tt <= t; tt++) {      int n, k;     priority_queue<int> q;     scanf("%d%d", &n, &k);     q.push(n);     while (--k) {       int x = q.top();       q.pop();       q.push(x / 2);       q.push((x - 1) / 2);     }      int v = q.top();     printf("Case #%d: %d %d\n", tt, v / 2, (v - 1) / 2);   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <queue> #include <set> #include <stack> #include <stdio.h> #include <unordered_map> #include <utility> using namespace std;
int main(void) {   int ret_val = 0;   int t;   scanf("%d", &t);   for (int tt = 1; tt <= t; tt++) {      int n, k;     priority_queue<int> solve;     scanf("%d%d", &n, &k);     solve.push(n);     while (--k) {       int x = solve.top();       solve.pop();       solve.push(x / 2);       solve.push((x - 1) / 2);     }      int v = solve.top();     cout << "Case #" << tt << ": " << v / 2 << " " << (v - 1) / 2 << "\n";   }   return ret_val; }
#include <algorithm> #include <cstdio> #include <cstring> #include <iostream> #include <queue> using namespace std;
inline void fgdyoonkuy(int &tt) {    int n, i;   priority_queue<int> q;   cin >> n >> i;   q.push(n);   while (--i) {     int x = q.top();     q.pop();     q.push(x / 2);     q.push((x - 1) / 2);   }    int v = q.top();   printf("Case #%d: %d %d\n", tt, v / 2, (v - 1) / 2); }  int main(void) {   ios::sync_with_stdio(false);    freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_12_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/iPeter/outer_temp/iPeter/A-small-practice_transformation.out",           "w", stdout);    freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_12_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/iPeter/A-small-practice.in",           "r", stdin);    int t;   cin >> t;   for (int tt = 1; tt <= t; tt++)     fgdyoonkuy(tt);   return 0; }
#include <bits/stdc++.h> #include <fstream> #include <vector>  using namespace std;
const double EPS = 1e-9; const double eps = 1e-9; ofstream fout;  ifstream fin;  typedef vector<int> vi; typedef long double LD; typedef long long LL; typedef unsigned long long ull; typedef pair<LL, LL> ii;  LL pwr(LL j, LL p, LL mod = (1000000007LL)) {   LL ans = 1;   while (p) {     if (p & 1)       ans = (ans * j) % mod;      j = (j * j) % mod;     p /= 2;   }   return ans; }  LL solve(LL a, LL b) {   if (b == 0)     return a;   return solve(b, a % b); }  struct compare {   bool operator()(const ii &a, const ii &b) const {     if ((a.first - 1) / 2 != (b.first - 1) / 2)       return a.first > b.first;     return (a.first - 1 - (a.first - 1) / 2) >            (b.first - 1 - (b.first - 1) / 2);   } };  set<ii> arr;
int main() {   fout.open("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_13_Usenix_RF_1.0_True_MCTS_Classic_True/sammyMaX/satyaki3794/outer_temp/satyaki3794/A-small-practice_transformation.out");    fin.open("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_13_Usenix_RF_1.0_True_MCTS_Classic_True/sammyMaX/satyaki3794/A-small-practice.in");    int ret_val = 0;    cin.tie(0);    int t, x = 1;   fin >> t;   while (t--) {      LL n, d;     fin >> n >> d;        arr.clear();     arr.insert(ii(-n, 1));     set<ii>::iterator it;     LL ans_l, ans_r;        for (; d > 0;) {         assert(!arr.empty());       it = arr.begin();       ii temp = (*it);       temp.first *= -1;       arr.erase(it);       if (temp.second == 0)         continue;          LL N = min(d, temp.second);       if (temp.second > N) {         arr.insert(ii(-temp.first, temp.second - N));         temp.second = N;       }       d -= N;        LL l = (temp.first - 1) / 2, r = temp.first - 1 - l;       ans_l = max(l, r);       ans_r = min(l, r);           if (l > 0) {         it = arr.lower_bound(ii(-l, -1));         if (it != arr.end() && (*it).first == -l) {           LL cnt = (*it).second + temp.second;           arr.erase(it);           arr.insert(ii(-l, cnt));           } else {           LL cnt = temp.second;           arr.insert(ii(-l, cnt));           }       }        if (r > 0) {         it = arr.lower_bound(ii(-r, -1));         if (it != arr.end() && (*it).first == -r) {           LL cnt = (*it).second + temp.second;           arr.erase(it);           arr.insert(ii(-r, cnt));           } else {           LL cnt = temp.second;           arr.insert(ii(-r, cnt));           }       }     }      fout << "Case #" << x++ << ": " << ans_l << " " << ans_r << endl;   }   return ret_val; }
#include <bitset> #include <deque> #include <iomanip> #include <iostream> #include <queue> #include <set> #include <sstream> #include <stack>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>    using namespace std;
typedef vector<int> vi; typedef vector<vi> vvi; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<string> vs;  typedef long long LL;           typedef unsigned long long ULL;   typedef unsigned uint;  const double pi = acos(-1.0);   const double eps = 1e-11;       const int MAXI = 0x7fffffff; const int dx[] = {1, 0, -1, 0}; const int dy[] = {0, 1, 0, -1}; const char dz[] = "SENW"; struct debugger {   template <typename T> debugger &operator,(const T &v) {     cerr << v << " ";     return *this;   } } dbg;  void debugarr(int *arr, int n) {   cout << "[";   for (int i = 0; i < n; i++)     cout << arr[i] << " ";   cout << "]" << endl; }  char str[50];  long long pow2(int a, long long int b) {   long long x = 1, y = a;   while (b > 0) {     if (b % 2 == 1) {       x = (x * y);     }     y = (y * y);     b /= 2;   }   return x; } LL dist[2];
int main() {     int i, j, l, m, t, s = 0, d;   LL n, k, x, x1, level, used, prevLevel, rem;   scanf("%d", &t);   ;   int c = 1;   while (t--) {     cin >> n;     cin >> k;     x = n;     x1 = n;     level = log2(k);     dist[0] = 1;     dist[1] = 0;     LL tempx, tempx1;     LL tempdist[2];     for (i = 1; i <= level; i++) {       tempdist[0] = 0;       tempdist[1] = 0;       if (x & 1) {         tempx = x / 2;         tempx1 = tempx;         tempdist[0] = 2 * dist[0];       } else {         tempx = (x - 1) / 2;         tempx1 = tempx + 1;         tempdist[0] = dist[0];         tempdist[1] = dist[0];       }        if (dist[1] > 0) {         if (!(x1 & 1)) {           tempx = (x1 - 1) / 2;           tempx1 = x1 / 2;           tempdist[0] += dist[1];           tempdist[1] += dist[1];         } else {           tempx1 = x1 / 2;           tempdist[1] += 2 * dist[1];         }       }       x = tempx;       x1 = tempx1;       dist[0] = tempdist[0];       dist[1] = tempdist[1];     }     prevLevel = pow2(2, level) - 1;     rem = k - prevLevel;       if (rem > dist[1]) {       used = x;     } else {       used = x1;     }       if (used & 1) {       cout << "Case #" << c++ << ": " << used / 2 << " " << used / 2 << endl;     } else {       cout << "Case #" << c++ << ": " << used / 2 << " " << (used - 1) / 2            << endl;     }   }   return (0); }
#include <bits/stdc++.h> #include <bitset> #include <cctype> #include <climits> #include <complex> #include <deque> #include <fstream> #include <iomanip> #include <iostream> #include <iterator> #include <math.h> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <unordered_map>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>    using namespace std;
ifstream fin;  const int MOD = 1000000007; const long double PI = 3.1415926535897932384626433832795;  typedef vector<int> vi; typedef vector<vi> vvi; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<string> vs;  typedef long long LL;            typedef unsigned long long ULL;  typedef unsigned uint;  const double pi = acos(-1.0);  const double eps = 1e-11;       const int MAXI = 0x7fffffff; const int dx[] = {1, 0, -1, 0}; const int dy[] = {0, 1, 0, -1}; const char dz[] = "SENW"; struct debugger {   template <typename T> debugger &operator,(const T &v) {     cerr << v << " ";     return *this;   } } dbg;  void solve(int *arr, int n) {   cout << "[";   for (int i = 0; i < n; i++)     cout << arr[i] << " ";   cout << "]\n"; }  char str[50];  long long pow2(int a, long long int b) {   long long x = 1, y = a;   while (b > 0) {     if (b % 2 == 1) {       x = (x * y);     }     y = (y * y);     b /= 2;   }   return x; } LL dist[2]; inline void ujsfbplldn(LL &tempx, LL &tempx1, LL &x1, LL tempdist[2]) {   tempx = (x1 - 1) / 2;   tempx1 = x1 / 2;   tempdist[0] += dist[1];   tempdist[1] += dist[1]; }  inline void wtkadfngqb(LL &tempx1, LL &x1, LL tempdist[2]) {   tempx1 = x1 / 2;   tempdist[1] += 2 * dist[1]; }  inline void uwsfwulanz(LL &tempx, LL &tempx1, LL &x1, LL tempdist[2]) {   if (!(x1 & 1))     ujsfbplldn(tempx, tempx1, x1, tempdist);   else     wtkadfngqb(tempx1, x1, tempdist); }
int main() {   fin.open("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_16_Usenix_RF_1.0_True_MCTS_Classic_True/okaduki/lazyBit/A-small-practice.in");    ios::sync_with_stdio(true);      int i, j, l, m, t, s = 0, d;   LL n, N, x, x1, level, used, prevLevel, rem;   fin >> t;   ;   int c = 1;   while (t--) {     fin >> n;     fin >> N;     x = n;     x1 = n;     level = log2(N);     dist[0] = 1;     dist[1] = 0;     LL tempx, tempx1;     LL tempdist[2];     for (i = 1; i <= level; i++) {       tempdist[0] = 0;       tempdist[1] = 0;       if (x & 1) {         tempx = x / 2;         tempx1 = tempx;         tempdist[0] = 2 * dist[0];       } else {         tempx = (x - 1) / 2;         tempx1 = tempx + 1;         tempdist[0] = dist[0];         tempdist[1] = dist[0];       }        if (dist[1] > 0)         uwsfwulanz(tempx, tempx1, x1, tempdist);       x = tempx;       x1 = tempx1;       dist[0] = tempdist[0];       dist[1] = tempdist[1];     }     prevLevel = pow2(2, level) - 1;     rem = N - prevLevel;       if (rem > dist[1]) {       used = x;     } else {       used = x1;     }        if (used & 1) {       cout << "Case #" << c++ << ": " << used / 2 << " " << used / 2 << "\n";     } else {       cout << "Case #" << c++ << ": " << used / 2 << " " << (used - 1) / 2            << "\n";     }   }   return (0); }
#include <bits/stdc++.h> #include <iostream> #include <stdio.h> #include <vector>  using namespace std;
typedef vector<int> vi; typedef long long ll; typedef long long LL;  int solve(int cc) {   LL n, k, t = 0, onell = 1LL;   scanf("%lld %lld ", &n, &k);   while (k > 0) {     n -= (onell << t);     if (k > (onell << t)) {       k -= (onell << t);       t++;     } else {       break;     }     }   LL solmax = 0, solmin = 0;   if (n > 0) {     LL tt = (onell << (t + 1));     LL ttt = n / tt;     LL tttt = n % tt;     if (tttt >= k) {       solmax = ttt + 1;     } else {       solmax = ttt;     }     tttt -= (tt / 2);     if (tttt >= k) {       solmin = ttt + 1;     } else {       solmin = ttt;     }   }   cout << "Case #" << cc << ": " << solmax << " " << solmin << endl;   return 1; }
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_17_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/Thanabhat/A-small-practice.in",           "r", stdin);    freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_17_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/Thanabhat/outer_temp/Thanabhat/A-small-practice_transformation.out",           "w", stdout);    int t;   scanf("%d ", &t);   for (int i = 0; i < t; i++) {     solve(i + 1);   }   return 0; }
#include <bits/stdc++.h> #include <cassert> #include <cctype> #include <complex> #include <cstdio> #include <cstring> #include <ctime> #include <fstream> #include <functional> #include <iostream> #include <list> #include <math.h> #include <numeric> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <utility> #include <vector>  using namespace std;
typedef long long LL; typedef pair<int, int> ii; typedef pair<int, int> PII; typedef unsigned long long ull; typedef vector<int> VI; typedef long double LD;  ofstream fout;  inline void kdbnutfngi(long long &T, long long &onell, long long &t) {   T -= (onell << t);   t++; }  int get(int p) {   LL n, T, t = 0, onell = 1LL;   cin >> n >> T;   while (T > 0) {     n -= (onell << t);     if (T > (onell << t))       kdbnutfngi(T, onell, t);     else {       break;     }     }   LL solmax = 0, solmin = 0;   if (n > 0) {     LL r = (onell << (t + 1));     LL ttt = n / r;     LL tttt = n % r;     if (tttt >= T) {       solmax = ttt + 1;     } else {       solmax = ttt;     }     tttt -= (r / 2);     if (tttt >= T)       solmin = ttt + 1;     else       solmin = ttt;   }   fout << "Case #" << p << ": " << solmax << " " << solmin << endl;   return 1; }
int main() {   fout.open("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_17_Usenix_RF_1.0_True_MCTS_Classic_True/okaduki/Thanabhat/outer_temp/Thanabhat/A-small-practice_transformation.out");    ios::sync_with_stdio(0);    int t;   cin >> t;    for (int i = 0; i < t; i++) {     get(i + 1);   }   return 0; }
#include <bits/stdc++.h> #include <iomanip> #include <iostream>  using namespace std;
const int INF = 1000000000;  struct E {   int l, r;   E(int nl, int nr) : l(nl), r(nr) {}   bool operator<(const E &o) const {     int v = r - l;     int ov = o.r - o.l;     if (v / 2 != ov / 2) {       return v / 2 > ov / 2;     }     if ((v + 1) / 2 != (ov + 1) / 2) {       return (v + 1) / 2 > (ov + 1) / 2;     }     return l < o.l;   } };  inline void etvoezwtfk(set<struct E> &ss, int &s, int &r) { ss.emplace(s, r); }  inline void mtrhojcioh(set<struct E> &ss, int &l, int &s) { ss.emplace(l, s); }  inline void xlbpyiinvh(int &T) {   cout << "Case #" << T << ": ";   int n, k;   scanf("%d %d", &n, &k);   set<E> ss = {{0, n + 1}};   while (k-- > 1) {     int l = ss.begin()->l;     int r = ss.begin()->r;     ss.erase(ss.begin());     int s = (l + r) / 2;     if (s - l - 1 >= 1)       mtrhojcioh(ss, l, s);     if (r - s - 1 >= 1)       etvoezwtfk(ss, s, r);   }   int ans = ss.begin()->r - ss.begin()->l;   cout << (ans + 1) / 2 - 1 << " " << ans / 2 - 1 << "\n"; }  inline void erwrfpbtwu(int &T) { xlbpyiinvh(T); }
int main() {   ios::sync_with_stdio(false);    freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5654742835396608_18_Usenix_RF_1.0_True_MCTS_Classic_True/okaduki/fragusbot/A-small-practice.in",           "r", stdin);   int tt;   scanf("%d", &tt);   int T;   for (T = 1; T <= tt; ++T)     erwrfpbtwu(T);   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector>  using namespace std;
const int MAXN = 1005;  map<long long, long long> M;  pair<long long, long long> trivial(long long n, long long k) {   vector<bool> a(n + 2, 0);   a[0] = a[n + 1] = true;    pair<long long, long long> res;   for (int i = 0; i < k; ++i) {     pair<long long, long long> best = make_pair(-1, -1);     int index = -1;      for (int j = 1; j <= n; ++j) {       if (a[j] == 1) {         continue;       }        long long l = 0, r = 0;       for (int k = j - 1; k >= 0; --k) {         if (!a[k]) {           ++l;         } else {           break;         }       }        int k;       for (k = j + 1; k <= n + 1; ++k) {         if (!a[k]) {           ++r;         } else {           break;         }       }        if (min(l, r) > best.first) {         best = make_pair(min(l, r), max(l, r));         index = j;       } else if (min(l, r) == best.first)         if (max(l, r) > best.second) {           best = make_pair(min(l, r), max(l, r));           index = j;         }     }         a[index] = true;     res = best;   }    return res; }  void solve(int T) {   M.clear();   long long n, k;    cin >> n >> k;   long long oldk = k;   M[n] = 1;    long long len = 0;   while (k > 0) {     pair<long long, long long> p = *M.rbegin();      long long d = min(k, p.second);      len = p.first;      M[p.first] -= d;     k -= d;      M[(p.first - 1) / 2] += d;     M[p.first / 2] += d;      if (M[p.first] == 0) {       M.erase(p.first);     }   }      printf("Case #%d: %lld %lld\n", T, len / 2, (len - 1) / 2); }
int main() {    int t;   scanf("%d", &t);   int i;   for (i = 0; i < t; ++i) {     solve(i + 1);     cerr << i + 1 << ": " << clock() << endl;   }    return 0; }
#include <algorithm> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <queue> #include <set> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector>  using namespace std;
const int MAXN = 1005; typedef long double ld; typedef long long ll; typedef pair<int, int> ii; typedef vector<int> VI; typedef long double LD;  map<long long, long long> M;  pair<long long, long long> trivial(long long n, long long k) {   vector<bool> a(n + 2, false);   a[0] = a[n + 1] = 1;    pair<long long, long long> res;   for (int i = 0; i < k; ++i) {     pair<long long, long long> best = make_pair(-1, -1);     int index = -1;      for (int j = 1; j <= n; ++j) {       if (a[j] == true) {         continue;       }        ll l = 0, r = 0;       for (int k = j - 1; k >= 0; --k) {         if (!a[k]) {           ++l;         } else {           break;         }       }        for (int k = j + 1; k <= n + 1; ++k) {         if (!a[k]) {           ++r;         } else {           break;         }       }        if (min(l, r) > best.first) {         best = make_pair(min(l, r), max(l, r));         index = j;       } else if (min(l, r) == best.first && max(l, r) > best.second) {         best = make_pair(min(l, r), max(l, r));         index = j;       }     }         a[index] = true;     res = best;   }    return res; }  void solve(int test) {   M.clear();   ll n, k;    cin >> n >> k;   ll oldk = k;   M[n] = 1;    ll len = 0;   while (k > 0) {     pair<long long, long long> p = *M.rbegin();      ll d = min(k, p.second);      len = p.first;      M[p.first] -= d;     k -= d;      M[(p.first - 1) / 2] += d;     M[p.first / 2] += d;      if (M[p.first] == 0) {       M.erase(p.first);     }   }      cout << "Case #" << test << ": " << len / 2 << " " << (len - 1) / 2 << "\n"; }
int main() {   ios::sync_with_stdio(true);    int t;   cin >> t;   for (int i = 0; i < t; ++i) {     solve(i + 1);     cerr << i + 1 << ": " << clock() << endl;   }    return 0; }
#include <bits/stdc++.h> using namespace std;
int tc;
int main() {   cin >> tc;   for (int t = 1; t <= tc; t++) {     string s;     int k, fl = 0;     cin >> s >> k;     for (int i = 0; i < s.size() - k + 1; i++) {       if (s[i] == '-') {           fl++;         for (int j = i; j < i + k; j++) {           if (s[j] == '-')             s[j] = '+';           else             s[j] = '-';         }       }     }     int f = 1;     for (int i = s.size() - k + 1; i < s.size(); i++) {       if (s[i] == '-')         f = 0;     }     if (f == 1) {       printf("Case #%d: %d\n", t, fl);     } else {       printf("Case #%d: IMPOSSIBLE\n", t, fl);     }   } }
#include <bits/stdc++.h> #include <cstdio> #include <cstring> #include <iostream> using namespace std;
char m[1 << 10]; int n, xybi_Var;  inline void tqknegkaol(int &i) {   int xkqi_Var = i;   for (; xkqi_Var < i + xybi_Var;) {     if (m[xkqi_Var] == '-') {       m[xkqi_Var] = '+';     } else {       m[xkqi_Var] = '-';     }      xkqi_Var++;   } }
int main() {   ios::sync_with_stdio(false);    freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_3_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/try/A-small-practice.in",           "r", stdin);   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_3_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/try/outer_temp/try/A-small-practice_transformation.out",           "w", stdout);   int r, cas, ans;   cin >> cas;   for (r = 0; r < cas; r++) {     cin >> m >> xybi_Var;     n = strlen(m);     ans = 0;     {       int i = 0;       while (i < n) {         if (m[i] == '-') {           if (i + xybi_Var > n) {             ans = -1;             break;           }           ans++;           tqknegkaol(i);         }         i++;       }     }     printf("Case #%d: ", r + 1);     if (ans != -1) {       printf("%d\n", ans);     } else {       printf("IMPOSSIBLE\n");     }   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <climits> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <sstream> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector>  using namespace std;
const double EPS = 1e-9; const int mod = 1000000007;  inline void vsxmdmaxfx(int &ans, int &tc, int &t, std::string &s) {   ans++;   for (int r = tc; r < tc + t; ++r)     s[r] = (s[r] == '-' ? '+' : '-'); }  void get() {   string s;   int t;   cin >> s >> t;   int len = (int)s.size();   int ans = 0;   int tc;   for (tc = 0; tc <= len - t; ++tc) {     if (s[tc] == '-')       vsxmdmaxfx(ans, tc, t, s);   }   for (int tc = len - t + 1; tc < len; ++tc) {     if (s[tc] == '-') {       cout << "IMPOSSIBLE" << endl;       return;     }   }   cout << ans << endl; }
int main() {    int q;   cin >> q;   int tc;   for (tc = 1; tc <= q; ++tc) {     cout << "Case #" << tc << ": ";     get();   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cctype> #include <cmath> #include <cstdio> #include <cstdlib> #include <deque> #include <fstream> #include <iomanip> #include <iostream> #include <list> #include <map> #include <set> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> #include <vector>  using namespace std;
const int mod = 1000000007; ifstream fin;  typedef unsigned long long ull; typedef vector<vector<int>> vvi; typedef long long ll; typedef pair<int, int> pii; typedef pair<int, int> PII; typedef vector<int> VI; typedef long double LD;  inline void ptzlwynmez(std::string &s, int &j) {   s[j] = (s[j] == '-' ? '+' : '-'); }  inline void acanlrrsmg(int &i, int &n, std::string &s) {   int j = i;   while (j < i + n) {     ptzlwynmez(s, j);     ++j;   } }  void work() {   string s;   int n;   fin >> s >> n;   int len = (int)s.size();   int ans = 0;   for (int i = 0; i <= len - n; ++i) {     if (s[i] == '-') {       ans++;       acanlrrsmg(i, n, s);     }   }   for (int i = len - n + 1; i < len; ++i) {     if (s[i] == '-') {       cout << "IMPOSSIBLE" << endl;       return;     }   }   cout << ans << endl; }
int main() {   ios::sync_with_stdio(0);    fin.open("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_5_Usenix_RF_1.0_True_MCTS_Classic_True/Mucosolvan/Tashi711/A-small-practice.in");    int q;   fin >> q;    for (int i = 1; i <= q; ++i) {     cout << "Case #" << i << ": ";     work();   }   return 0; }
#include <algorithm> #include <cstdio> #include <cstring> #include <iostream> #include <string> #include <vector> using namespace std;
int main() {   int tt;    cin >> tt;    for (int t = 1; t <= tt; ++t) {     string s;     int k, res = 0;     cin >> s >> k;     for (int i = 0; i + k <= s.size(); ++i) {       if (s[i] == '-') {         for (int j = 0; j < k; ++j)           s[i + j] = (s[i + j] == '-') ? '+' : '-';         res++;       }     }     for (int i = 0; i < s.size(); ++i)       if (s[i] == '-')         res = -1;      cout << "Case #" << t << ": ";     if (res == -1)       cout << "IMPOSSIBLE" << endl;     else       cout << res << endl;   }    return 0; }
#include <bits/stdc++.h> using namespace std;
typedef pair<int, int> ii; typedef vector<int> vi; typedef vector<ii> vii; typedef long long ll; const int INF = ~(1 << 31); const double pi = acos(-1);  int doit(string s, int len) {   int howmany = 0;   while (true) {     if (s.size() == len) {       int f1 = 0;       int f2 = 0;       for (int i = (0); i < (len); i++) {         if (s[i] == '+')           f1++;         else           f2++;       }       if (f1 == len) {        } else if (f2 == len) {         howmany++;       } else {         howmany += 1000000;       }        break;     } else {       if (s[0] == '+') {         s.erase(s.begin());       } else {         for (int i = (0); i < (len); i++) {           if (s[i] == '+')             s[i] = '-';           else             s[i] = '+';         }         howmany++;       }     }   }   return howmany; }
int main() {   cin.sync_with_stdio(false);   ofstream fout("ans.txt");   int n;   cin >> n;   for (int i = (0); i < (n); i++) {     string s;     cin >> s;     int m;     cin >> m;     int bst = INF;     bst = min(doit(s, m), bst);     reverse(s.begin(), s.end());     bst = min(doit(s, m), bst);     fout << "Case #" << i + 1 << ": ";     if (bst > 10000)       fout << "IMPOSSIBLE" << endl;     else       fout << bst << endl;   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cctype> #include <cmath> #include <complex> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <iostream> #include <map> #include <math.h> #include <set> #include <sstream> #include <stdio.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;
const long double PI = 3.1415926535897932384626433832795; const int MOD = 1000000007;  typedef long double LD; typedef set<int> si; typedef vector<vector<int>> vvi; typedef pair<int, int> ii; typedef vector<int> VI; typedef vector<ii> vii; typedef long long ll; const int INF = ~(1 << 31); const double pi = acos(-1);  inline void yrdohdclvy(std::string &solve, int &i) {   if (solve[i] == '+')     solve[i] = '-';   else     solve[i] = '+'; }  int doit(string solve, int len) {   int howmany = 0;   for (; true;) {     if (solve.size() == len) {       int f1 = 0;       int get = 0;       for (int i = (0); i < (len); i++) {         if (solve[i] == '+')           f1++;         else           get++;       }       if (f1 == len) {        } else if (get == len)         howmany++;       else         howmany += 1000000;        break;     } else {       if (solve[0] == '+') {         solve.erase(solve.begin());       } else {         for (int i = (0); i < (len); i++)           yrdohdclvy(solve, i);         howmany++;       }     }   }   return howmany; }
int main() {   cin.sync_with_stdio(false);    int n;   cin >> n;   for (int i = (0); i < (n); i++) {     string solve;     cin >> solve;     int d;     cin >> d;     int x = INF;     x = min(doit(solve, d), x);     reverse(solve.begin(), solve.end());     x = min(doit(solve, d), x);     cout << "Case #" << i + 1 << ": ";     if (x > 10000)       cout << "IMPOSSIBLE" << endl;     else {       cout << x << endl;     }   }   return 0; }
#include <bits/stdc++.h> #include <stdio.h> using namespace std;
using VI = vector<int>; using VVI = vector<VI>; using PII = pair<int, int>; using LL = long long; using VL = vector<LL>; using VVL = vector<VL>; using PLL = pair<LL, LL>; using VS = vector<string>; template <class S, class T> istream &do_stdcky_fct(istream &is, pair<S, T> &p) {   return is >> p.first >> p.second; } template <class S, class T> ostream &do_stdtmn_fct(ostream &dhzs_Var, const pair<S, T> &p) {   return dhzs_Var << p.first << " " << p.second; } template <class T> void do_voigjf_fct(T &x, T y) {   if (x < y)     x = y; } template <class T> void do_voidaj_fct(T &x, T y) {   if (x > y)     x = y; }
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_9_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/okaduki/outer_temp/okaduki/A-small-practice_transformation.out",           "w", stdout);    int ret_val = 0;   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_9_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/okaduki/A-small-practice.in",           "r", stdin);   cin.tie(0);   int tt;   scanf("%d ", &tt);   {     int cc = (1);     while (cc < (tt + 1)) {       char S[1000];       scanf("%s ", S);       int K;       scanf("%d ", &K);       int N = int(strlen(S));       VI xs(N);       for (int i = (0); i < (N); ++i)         xs[i] = S[i] == '+';        int ans = 0;       for (int i = 0; i + K <= N; ++i) {         if (!xs[i]) {           ++ans;           for (int k = (0); k < (K); ++k)             xs[i + k] = !xs[i + k];         }       }       if (accumulate(begin((xs)), end((xs)), 0) != N)         printf("Case #%d: IMPOSSIBLE\n", cc);       else         printf("Case #%d: %d\n", cc, ans);       ++cc;     }   }   return ret_val; }
include <algorithm> #include <bits/stdc++.h> #include <climits> #include <cmath> #include <cstdio> #include <cstring> #include <iostream> #include <iterator> #include <map> #include <queue> #include <set> #include <stack> #include <stdio.h> #include <string> #include <unordered_map> #include <utility> #include <vector>    using namespace std;
typedef double dbl;  using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  ll gcd(ll a, ll bxrl_Var) {   ll t;   for (; (t = a % bxrl_Var) != 0;) {     a = bxrl_Var;     bxrl_Var = t;   }   return bxrl_Var; }  ll fast_exp(ll base, ll n, ll m) {   if (n == 0)     return 1;   ll t = fast_exp(base, n / 2, m);   if (n % 2 == 0)     return (t * t) % m;   else {     return (((t * t) % m) * base) % m;   } }  bool is_set(int i, ll tc) { return (tc >> i) & 1; }  int do_intcsw_fct(ll tc) {   int ret_val = -1;   int i = 0;   while (i < 64)     if (is_set(i++, tc))       return i - 1;   return ret_val; }
int main() {   int ret_val = 0;    int t;   cin >> t;   {     int i = 1;     for (; i <= t;) {       char s[1000];       int k;       cin >> s >> k;       int f = 0, n = strlen(s);       for (int j = 0; j < n - k + 1; ++j) {         if (s[j] == '-') {           ++f;           for (int jici_Var = j; jici_Var < j + k; ++jici_Var)             s[jici_Var] = (s[jici_Var] == '+' ? '-' : '+');         }       }       for (int j = 0; j < n; ++j)         if (s[j] == '-') {           f = -1;           break;         }       cout << "Case #" << i << ": ";       if (f == -1)         cout << "IMPOSSIBLE\n";       else {         cout << f << "\n";       }       ++i;     }   }   return ret_val; }
#include <algorithm> #include <cstdio> #include <cstring> #include <iostream> using namespace std;
char s[2000];
int main(void) {   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_12_Usenix_RF_1.0_True_MCTS_Classic_True/try/iPeter/A-small-practice.in",           "r", stdin);    freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_12_Usenix_RF_1.0_True_MCTS_Classic_True/try/iPeter/outer_temp/iPeter/A-small-practice_transformation.out",           "w", stdout);    int t;   scanf("%d", &t);   int tt;   for (tt = 1; tt <= t; tt++) {     int n = 0, k;     scanf("%s%d", s, &k);     {       int i = strlen(s) - 1;       while (i + 1 >= k) {         if (s[i] == '-') {           ++n;           {             int j = 0;             while (j < k) {               s[i - j] = (s[i - j] == '-' ? '+' : '-');               ++j;             }           }         }           --i;       }     }     {       int j = 0;       while (j < k) {         if (s[j] == '-') {           n = -1;         }         ++j;       }     }      if (n < 0) {       printf("Case #%d: IMPOSSIBLE\n", tt);       continue;     }     printf("Case #%d: %d\n", tt, n);   }   return 0; }
#include <bits/stdc++.h>  using namespace std;
typedef long long ll; typedef unsigned long long ull; typedef pair<int, int> ii;  ll pwr(ll base, ll p, ll mod = (1000000007LL)) {   ll ans = 1;   while (p) {     if (p & 1)       ans = (ans * base) % mod;     base = (base * base) % mod;     p /= 2;   }   return ans; }  ll gcd(ll a, ll b) {   if (b == 0)     return a;   return gcd(b, a % b); }
int main() {    ios_base::sync_with_stdio(0);   cin.tie(0);    freopen("A-small-attempt0.in", "r", stdin);   freopen("output.txt", "w", stdout);    int t, x = 1;   cin >> t;   while (t--) {      string str;     cin >> str;      int k;     cin >> k;      int n = (int)str.length(), ans = 0;     for (int i = 0; i + k - 1 < n; i++)       if (str[i] == '-') {         ans++;         for (int j = i; j < i + k; j++)           if (str[j] == '-')             str[j] = '+';           else             str[j] = '-';       }      for (int i = 0; i < n; i++)       if (str[i] == '-')         ans = -1;      if (ans == -1)       cout << "Case #" << x++ << ": IMPOSSIBLE" << endl;     else       cout << "Case #" << x++ << ": " << ans << endl;   }    return 0; }
#include <bits/stdc++.h> using namespace std;
int main(int argc, char **argv) {   ifstream fin("/home/roman/CodeliteProjects/Competitive/GCJ17_Quals/in.txt");   ofstream fout("/home/roman/CodeliteProjects/Competitive/GCJ17_Quals/out.txt");    int t;   fin >> t;   for (int testcase = 0; testcase < t; ++testcase) {     string s;     int k;     fin >> s >> k;     int n = s.size();      vector<bool> v;     for (int i = 0; i < n; ++i) {       v.push_back(s[i] == '+');     }      int cnt = 0;     for (int i = 0; i < n - k + 1; ++i) {       if (!v[i]) {         for (int j = i; j < i + k; ++j) {           v[j] = !v[j];         }         cnt++;       }          }      for (int i = n - k; i < n; ++i) {       if (!v[i]) {         cnt = -1;       }     }      fout << "Case #" << testcase + 1 << ": ";     if (cnt == -1) {       fout << "IMPOSSIBLE" << endl;     } else {       fout << cnt << endl;     }   }    fin.close();   fout.close();   return 0; }
#include <bits/stdc++.h>  using namespace std;
typedef vector<int> vi; typedef long long ll; typedef long double ld; typedef pair<int, int> pii; typedef pair<pii, int> para; const int inf = 1e9 + 7; const int maxN = 1e6 + 5;  int t, k; string s;
int main() {   ios_base::sync_with_stdio(0);   cin >> t;   for (int x = (1); x <= ((t)); ++x) {     cin >> s >> k;     int ans = 0;     for (int i = (0); i <= (((int)s.size() - k + 1) - 1); ++i) {       if (s[i] == '-') {         for (int j = (i); j <= (i + k - 1); ++j)           if (s[j] == '+')             s[j] = '-';           else             s[j] = '+';         ans++;       }     }     for (int i = (0); i <= (((int)s.size()) - 1); ++i)       if (s[i] == '-') {         ans = -1;         break;       }     cout << "Case #" << x << ": ";     if (ans == -1)       cout << "IMPOSSIBLE\n";     else       cout << ans << endl;   }   return 0; }
#include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cstdio> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iostream> #include <iterator> #include <list> #include <math.h> #include <queue> #include <set> #include <stdio.h> #include <stdlib.h> #include <utility> #include <vector>  using namespace std;
const int MOD = 1000000007;  ifstream fin;  typedef pair<int, int> PII; typedef unsigned long long ull; typedef vector<vector<int>> vvi; typedef vector<int> VI; typedef long long LL; typedef long double LD;  int t, k; string s;
int main() {    fin.open("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_15_Usenix_RF_1.0_True_MCTS_Classic_True/WCG/Mucosolvan/A-small-practice.in");    fin >> t;   {     int x = (1);     for (; x <= ((t));) {       fin >> s >> k;       int ans = 0;       for (int i = (0); i <= (((int)s.size() - k + 1) - 1); ++i) {         if (s[i] == '-') {           for (int get = (i); get <= (i + k - 1); ++get)             if (s[get] == '+')               s[get] = '-';             else               s[get] = '+';           ans++;         }       }       for (int i = (0); i <= (((int)s.size()) - 1); ++i)         if (s[i] == '-') {           ans = -1;           break;         }       cout << "Case #" << x << ": ";       if (ans == -1) {         cout << "IMPOSSIBLE\n";       } else         cout << ans << endl;       ++x;     }   }   return 0; }
#include <bits/stdc++.h> #include <fstream> #include <iostream> #include <stdio.h>  using namespace std;
ofstream fout;  typedef vector<int> vi; typedef long long ll; typedef long double ld; typedef pair<int, int> pii; typedef pair<pii, int> para;  int t, k; string s;
int main() {   ios::sync_with_stdio(true);    fout.open("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_15_Usenix_RF_1.0_True_MCTS_Classic_True/bennikartefla/Mucosolvan/outer_temp/Mucosolvan/A-small-practice_transformation.out");    scanf("%d ", &t);   for (int x = (1); x <= ((t)); ++x) {     cin >> s >> k;     int ans = 0;     for (int i = (0); i <= (((int)s.size() - k + 1) - 1); ++i) {       if (s[i] == '-') {         for (int j = (i); j <= (i + k - 1); ++j)           if (s[j] == '+')             s[j] = '-';           else             s[j] = '+';         ans++;       }     }     for (int i = (0); i <= (((int)s.size()) - 1); ++i)       if (s[i] == '-') {         ans = -1;         break;       }     fout << "Case #" << x << ": ";     if (ans == -1)       fout << "IMPOSSIBLE\n";     else       fout << ans << endl;   }   return 0; }
#include <bitset> #include <deque> #include <iomanip> #include <iostream> #include <queue> #include <set> #include <sstream> #include <stack>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>    using namespace std;
typedef vector<int> vi; typedef vector<vi> vvi; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<string> vs;  typedef long long LL;              typedef unsigned long long ULL;  typedef unsigned uint;  const double pi = acos(-1.0);   const double eps = 1e-11;       const int MAXI = 0x7fffffff; const int dx[] = {1, 0, -1, 0}; const int dy[] = {0, 1, 0, -1}; const char dz[] = "SENW"; struct debugger {   template <typename T> debugger &operator,(const T &v) {     cerr << v << " ";     return *this;   } } dbg;  void debugarr(int *arr, int n) {   cout << "[";   for (int i = 0; i < n; i++)     cout << arr[i] << " ";   cout << "]" << endl; }  char str[50];  bool containszero(int l) {   int i = 0;   while (str[i] == '0') {     i++;   }   while (i < l) {     if (str[i] == '0')       return true;     i++;   }   return false; }
int main() {     int n, i, j, k, l, m, t, s = 0, d;   scanf("%d", &t);   ;   int c = 1;   while (t--) {     cin >> str;     cin >> k;     int ans = 0;     l = strlen(str);     for (i = 0; i + k - 1 < l; i++) {       if (str[i] == '+')         continue;       s = 0;       for (j = i; s < k; s++, j++) {         if (str[j] == '-')           str[j] = '+';         else           str[j] = '-';       }       ans++;     }     for (i = 0; i < l; i++) {       if (str[i] == '-')         break;     }     if (i < l) {       printf("Case #%d: IMPOSSIBLE\n", c++);     } else {       printf("Case #%d: %d\n", c++, ans);     }   }   return (0); }
#include <bits/stdc++.h> #include <bitset> #include <cctype> #include <climits> #include <deque> #include <fstream> #include <iomanip> #include <iostream> #include <iterator> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdlib.h>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>    using namespace std;
const int MAXN = 1005; ofstream fout;  typedef long double ld; typedef set<int> si; typedef vector<int> VI; typedef vector<VI> vvi; typedef pair<int, int> PII; typedef vector<PII> vii; typedef vector<string> vs;  typedef long long ll;            typedef unsigned long long ull;   typedef unsigned uint;  const double pi = acos(-1.0);   const double eps = 1e-11;       const int MAXI = 0x7fffffff; const int dx[] = {1, 0, -1, 0}; const int dy[] = {0, 1, 0, -1}; const char dz[] = "SENW"; struct debugger {   template <typename T> debugger &operator,(const T &v) {     cerr << v << " ";     return *this;   } } dbg;  void debugarr(int *tc, int n) {   fout << "[";   for (int i = 0; i < n; i++)     fout << tc[i] << " ";   fout << "]" << endl; }  char str[50];  bool containszero(int x) {   int i = 0;   while (str[i] == '0') {     i++;   }   while (i < x) {     if (str[i] == '0')       return true;     i++;   }   return false; }
int main() {   fout.open("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_16_Usenix_RF_1.0_True_MCTS_Classic_True/bennikartefla/lazyBit/outer_temp/lazyBit/A-small-practice_transformation.out");    ios::sync_with_stdio(true);      int n, i, j, a, x, m, t, s = 0, d;   cin >> t;   ;   int c = 1;   while (t--) {     cin >> str;     cin >> a;     int ans = 0;     x = strlen(str);     for (i = 0; i + a - 1 < x; i++) {       if (str[i] == '+') {         continue;       }       s = 0;       {         j = i;         while (s < a) {           if (str[j] == '-')             str[j] = '+';           else             str[j] = '-';           s++, j++;         }       }       ans++;     }     {       i = 0;       while (i < x) {         if (str[i] == '-')           break;         i++;       }     }     if (i < x) {       fout << "Case #" << c++ << ": IMPOSSIBLE\n";     } else {       fout << "Case #" << c++ << ": " << ans << "\n";     }   }   return (0); }
#include <bits/stdc++.h> #include <bitset> #include <cctype> #include <climits> #include <deque> #include <fstream> #include <iomanip> #include <iostream> #include <iterator> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdlib.h>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>    using namespace std;
const int mod = 1000000007; ofstream fout;  typedef vector<int> vi; typedef vector<vi> vvi; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<string> vs;     const double pi = acos(-1.0);   const double eps = 1e-11;       const int MAXI = 0x7fffffff; const int dx[] = {1, 0, -1, 0}; const int dy[] = {0, 1, 0, -1}; const char dz[] = "SENW"; struct debugger {   template <typename T> debugger &operator,(const T &v) {     cerr << v << " ";     return *this;   } } dbg;  void debugarr(int *arr, int n) {   fout << "[";   for (int i = 0; i < n; i++)     fout << arr[i] << " ";   fout << "]" << endl; }  char str[50];  bool containszero(int r) {   int i = 0;   while (str[i] == '0') {     i++;   }   while (i < r) {     if (str[i] == '0')       return true;     i++;   }   return false; } inline void llngteflfj(int &j) {   if (str[j] == '-')     str[j] = '+';   else     str[j] = '-'; }
int main() {   fout.open("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_16_Usenix_RF_1.0_True_MCTS_Classic_True/okaduki/lazyBit/outer_temp/lazyBit/A-small-practice_transformation.out");    ios::sync_with_stdio(1);      int n, i, p, r, m, t, s = 0, d;   scanf("%d", &t);   ;   int c = 1;   while (t--) {     cin >> str;     cin >> p;     int ans = 0;     r = strlen(str);     {       i = 0;       while (i + p - 1 < r) {         if (str[i] == '+') {           i++;           continue;         }         s = 0;         for (int j = i; s < p; s++, j++)           llngteflfj(j);         ans++;         i++;       }     }     for (i = 0; i < r; i++) {       if (str[i] == '-')         break;     }     if (i < r) {       fout << "Case #" << c++ << ": IMPOSSIBLE\n";     } else {       fout << "Case #" << c++ << ": " << ans << "\n";     }   }   return (0); }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector>  using namespace std;
const int mod = 1000000007; const int MAXN = 1005;  char s[77]; int q[7777]; int d[7777];  inline void tnteivxyyw(int &c, int &i, int &x, int &qt) {   int get = x ^ (((1 << c) - 1) << i);   if (d[get] == -1) {     d[get] = d[x] + 1;     q[qt++] = get;   } }  inline void enxckcwcea(int &n, int &i) { q[0] |= 1 << (n - 1 - i); }
int main() {   ios::sync_with_stdio(false);   freopen("/home/seal12/Downloads/ramdisk/blackbox_3264486_5736519012712448_18_Usenix_RF_1.0_True_MCTS_Classic_True/ibrahim5253/fragusbot/A-small-practice.in",           "r", stdin);   int t;   cin >> t;   for (int j = 1; j <= t; ++j) {     printf("Case #%d: ", j);     int c;     cin >> s >> c;     int n = strlen(s);     q[0] = 1 << n;     for (int i = 0; i < n; ++i) {       if (s[i] == '-')         enxckcwcea(n, i);     }     memset(d, -1, sizeof d);     d[q[0]] = 0;     for (int qh = 0, qt = 1; qh < qt; ++qh) {       int x = q[qh];       for (int i = 0; i <= n - c; ++i)         tnteivxyyw(c, i, x, qt);     }     if (d[1 << n] == -1) {       puts("IMPOSSIBLE");     } else {       printf("%d\n", d[1 << n]);     }   }   return 0; }
#include <algorithm> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector>  using namespace std;
const int MAXN = 1005; const double EPS = 1e-9; const long double PI = 3.1415926535897932384626433832795; const int mod = 1000000007; const double eps = 1e-9; const int MOD = 1000000007;  void get(int test) {   string s;   cin >> s;   int c;   cin >> c;    int n = s.size();    int res = 0;   {     int i = 0;     while (i + c - 1 < n) {       if (s[i] == '-') {         ++res;         {           int j = i;           while (j < i + c) {             s[j] = (s[j] == '+' ? '-' : '+');             ++j;           }         }       }       ++i;     }   }    if (count(s.begin(), s.end(), '+') != n)     printf("Case #%d: IMPOSSIBLE\n", test);   else {     printf("Case #%d: %d\n", test, res);   } }  inline void ncgqnqggol(int &t) {   int i = 0;   while (i < t) {     get(i + 1);     cerr << i + 1 << ": " << clock() << endl;     ++i;   } }
int main() {    int t;   scanf("%d", &t);   ncgqnqggol(t);    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;
const int MOD = 1000000007; ofstream fout;  const int mod = 1000000007; const double EPS = 1e-9;  int T; int n, p; long long r[1009];  long long eleven(long long c) { return c * 11 / 10; }  long long ninety(long long c) {   long long y = c * 9 / 10;   if (c % 10 != 0) {     y += 1;   }   return y; }  bool inrange(int ingredient, long long number, long long servings) {   long long c = r[ingredient] * servings;   return (ninety(c) <= number) && (number <= eleven(c)); }  inline void get(priority_queue<long long, vector<long long>, greater<long long>> q[1009],     int &i, long long &tmp) {   cin >> tmp;   q[i].push(tmp); }
int main() {   fout.open("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_1_Usenix_RF_1.0_True_MCTS_Classic_True/kuzphi/4yn/outer_temp/4yn/A-small-practice_transformation.out");    cin >> T;   for (int t = 1; t <= T; t++) {     long long tmp;     priority_queue<long long, vector<long long>, greater<long long>> q[1009];     memset(r, -1, sizeof(r));     cin >> n >> p;     for (int i = 0; i < n; i++) {       cin >> r[i];     }     for (int i = 0; i < n; i++) {       for (int j = 0; j < p; j++)         get(q, i, tmp);     }     long long ans = 0;     long long cansendserving = 1;     long long curservingsize = 1;     long long b = 1;     while (1) {         bool okay = 1;       cansendserving = 1;       for (int i = 0; i < n; i++) {         if (q[i].empty()) {           okay = 0;           break;         }         if (!inrange(i, q[i].top(), curservingsize)) {           cansendserving = 0;         }       }        if (!okay) {         break;       }        if (cansendserving) {           ans++;         for (int i = 0; i < n; i++) {           q[i].pop();         }       } else {           b = 9999999999;         for (int i = 0; i < n; i++) {           if (q[i].empty())             break;           b = min(b, q[i].top() / eleven(r[i]));         }         if (b <= curservingsize) {           b = curservingsize + 1;         }         curservingsize = b;           for (int i = 0; i < n; i++) {           while (!q[i].empty() && q[i].top() < ninety(r[i] * curservingsize)) {             q[i].pop();           }           if (q[i].empty()) {             okay = 0;             break;           }         }         if (!okay) {           break;         }       }     }     fout << "Case #" << t << ": " << ans << endl;   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cstdio> #include <cstring> #include <iostream>  using namespace std;
pair<int, int> adj[50 + 1][50 + 1]; int cnt[50 + 1], cur[50 + 1]; int r[50 + 1], q[50 + 1]; int n, p;  inline void hhekfuleqb(int &trui_Var) { cin >> q[trui_Var]; }
int main() {   ios::sync_with_stdio(0);    freopen("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_3_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/try/A-small-practice.in",           "r", stdin);   freopen("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_3_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/try/outer_temp/try/A-small-practice_transformation.out",           "w", stdout);   int cas, i, trui_Var, flg, ans, maxl, maxi, minr, mini;   cin >> cas;   for (int m = 0; m < cas; m++) {     memset(cnt, 0, sizeof(cnt));     cin >> n >> p;     for (i = 0; i < n; i++)       cin >> r[i];      {       i = 0;       while (i < n) {         for (trui_Var = 0; trui_Var < p; trui_Var++) {           hhekfuleqb(trui_Var);         }         sort(q, q + p);         for (trui_Var = 0; trui_Var < p; trui_Var++) {           if (((q[trui_Var] * 9 + 9) / 10 + r[i] - 1) / r[i] <=               ((q[trui_Var] * 10) / 9) / r[i]) {             adj[i][cnt[i]++] =                 make_pair(((q[trui_Var] * 9 + 9) / 10 + r[i] - 1) / r[i],                           ((q[trui_Var] * 10) / 9) / r[i]);           }         }         i++;       }     }     memset(cur, 0, sizeof(cur));     flg = 1;     ans = 0;     while (flg == 1) {       for (i = 0; i < n; i++) {         if (cur[i] >= cnt[i]) {           flg = 0;           break;         }       }       if (flg == 0) {         break;       }       maxl = -1;       maxi = -1;       minr = 1000000000;       mini = -1;       {         i = 0;         while (i < n) {           if (maxl < adj[i][cur[i]].first) {             maxl = adj[i][cur[i]].first;             maxi = i;           }           if (minr > adj[i][cur[i]].second) {             minr = adj[i][cur[i]].second;             mini = i;           }           i++;         }       }       if (maxl <= minr) {         ans++;         for (i = 0; i < n; i++) {           cur[i]++;         }       } else         cur[mini]++;     }     printf("Case #%d: %d\n", m + 1, ans);   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cassert> #include <cctype> #include <cmath> #include <complex> #include <cstdio> #include <cstring> #include <deque> #include <fstream> #include <functional> #include <iostream> #include <iterator> #include <map> #include <math.h> #include <queue> #include <set> #include <stdlib.h> #include <string> #include <utility> #include <vector> using namespace std;
const int MOD = 1000000007; const int mod = 1000000007; const int MAXN = 1005; ofstream fout;  ifstream fin;  long long q[55][55]; long long r[55]; int n, p;  struct package {   long long large, small;   int id; };  bool myCompare(package p1, package p2) {   if (p1.large == p2.large)     return p1.small > p2.small;   return p1.large > p2.large; }
int main() {   fout.open("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_6_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/WCG/outer_temp/WCG/A-small-practice_transformation.out");    fin.open("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_6_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/WCG/A-small-practice.in");    int v;    fin >> v;    int t;   for (t = 1; t <= v; ++t) {     int res = 0;     vector<package> vp;     vector<queue<long long>> qp(55);     fin >> n >> p;     for (int i = 0; i < n; ++i)       fin >> r[i];     int i;     for (i = 0; i < n; ++i)       for (int ans = 0; ans < p; ++ans) {         fin >> q[i][ans];         package pp;         pp.id = i;         pp.large = floor(q[i][ans] / (0.9 * r[i]));         pp.small = ceil(q[i][ans] / (1.1 * r[i]));         if (pp.large >= pp.small)           vp.push_back(pp);       }      sort(vp.begin(), vp.end(), myCompare);     {       int i = 0;       while (i < vp.size()) {         for (int ans = 0; ans < n; ++ans) {           while ((qp[ans].size() > 0) && (vp[i].large < qp[ans].front()))             qp[ans].pop();         }          qp[vp[i].id].push(vp[i].small);          int hasOne = true;         for (int ans = 0; ans < n; ++ans)           if (qp[ans].size() == 0) {             hasOne = false;           }         if (hasOne) {           res++;           for (int ans = 0; ans < n; ++ans)             qp[ans].pop();         }         ++i;       }     }      fout << "Case #" << t << ": " << res << endl;   }    return 0; }
#include <bits/stdc++.h> using namespace std;
typedef pair<int, int> ii; typedef vector<int> vi; typedef vector<vi> vvi; typedef vector<ii> vii; typedef long long ll; const int INF = ~(1 << 31); const double pi = acos(-1);  struct BpGraph {   vvi adj;   vi owner;   vector<bool> done;    BpGraph(int n, int m) {     adj = vvi(n);     done = vector<bool>(n);     owner = vi(m, -1);   }   void addEdge(int a, int b) { adj[a].push_back(b); }   int alternating_path(int left) {     if (done[left])       return 0;     done[left] = true;     for (int i = (0); i < (adj[left].size()); i++) {       int right = adj[left][i];       if (owner[right] == -1 || alternating_path(owner[right])) {         owner[right] = left;         return 1;       }     }     return 0;   }   int maximum_matching(int n, int m) {     int res = 0;     for (int i = (0); i < (n); i++) {       for (int a = (0); a < (n); a++)         done[a] = 0;       res += alternating_path(i);     }     return res;   } };  bool binary(double num, double need) {   int lo = 1, hi = 100000000;   while (lo <= hi) {     int mid = (lo + hi) / 2;     double ok = mid * num;     double res = need / ok;     if (res >= 0.90 && res <= 1.1) {       return true;     }     if (res > 1.1) {       lo = mid + 1;     } else       hi = mid - 1;   }   return false; }
int main() {   cin.sync_with_stdio(false);   ofstream fout("ans.txt");   int t;   cin >> t;   for (int u = (0); u < (t); u++) {     int n, p;     cin >> n >> p;     int bst = 0;     if (n == 1) {       int count = 0;       double duds = 0;       cin >> duds;       for (int i = (0); i < (p); i++) {         double hold;         cin >> hold;         if (binary(duds, hold))           count++;       }       bst = count;     } else {       BpGraph bp(p, p);       int count = 0;       vector<double> duds(n);       for (int i = (0); i < (n); i++)         cin >> duds[i];       vector<double> first(p);       vector<double> second(p);       for (int i = (0); i < (p); i++)         cin >> first[i];       for (int i = (0); i < (p); i++)         cin >> second[i];       for (int i = (0); i < (p); i++) {         for (int a = (0); a < (p); a++) {           bool can = false;           for (int z = (1); z < (1000001); z++) {             double ok = duds[0] * z;             double otherok = duds[1] * z;             double fin1 = first[i] / ok;             double fin2 = second[a] / otherok;             if (fin1 >= 0.9 && fin1 <= 1.1 && fin2 >= 0.9 && fin2 <= 1.1) {               can = true;               break;             }           }           if (can) {             bp.addEdge(i, a);           }         }       }       bst = bp.maximum_matching(p, p);     }     fout << "Case #" << u + 1 << ": " << bst << endl;   }   return 0; }
#include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iostream> #include <iterator> #include <list> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;
const int MAXN = 1005;  typedef vector<vector<int>> vvi; typedef unsigned long long ull; typedef long double LD; typedef set<int> si; typedef long long LL; typedef pair<int, int> pii; typedef vector<pii> vii; typedef vector<int> vi; int unit[52]; int wt[52][52]; int mn[52][52], mx[52][52]; int f; vii adjList[1010]; int par[1010]; int n, p;  void open() {   freopen("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_8_Usenix_RF_1.0_True_MCTS_Classic_True/lazyBit/ccsnoopy/A-small-practice.in",           "r", stdin); }  void augment(int x) {   if (par[x] != x) {     for (int i = 0; i < adjList[par[x]].size(); i++) {       if (adjList[par[x]][i].first == x) {         f = min(f, adjList[par[x]][i].second);         break;       }     }     augment(par[x]);     for (int i = 0; i < adjList[par[x]].size(); i++) {       if (adjList[par[x]][i].first == x) {         adjList[par[x]][i].second -= f;         break;       }     }      for (int i = 0; i < adjList[x].size(); i++) {       if (adjList[x][i].first == par[x]) {         adjList[x][i].second += f;         break;       }     }   } }  int maxflow() {   int mf = 0;   f = 0;   for (; true;) {     f = 0;     memset(par, -1, sizeof(par));     queue<int> q;     q.push(n * p);     par[n * p] = n * p;     bool found = false;      while (!q.empty()) {       int node = q.front();         q.pop();       for (int i = 0; i < adjList[node].size(); i++) {          int nx = adjList[node][i].first;         int cap = adjList[node][i].second;           if (cap > 0)           if (par[nx] == -1) {             par[nx] = node;             if (nx == n * p + 1) {               f = 1000000000;               augment(nx);               found = true;                break;             }             q.push(nx);           }       }       if (found)         break;     }      if (f == 0)       break;     mf += f;   }    return mf; }
int main(void) {   int ret_val = 0;   open();   int tc;   scanf("%d", &tc);   for (int c = 1; c <= tc; c++) {     map<int, int> mp;      scanf("%d", &n);     scanf("%d", &p);     for (int i = 0; i < n; i++) {       scanf("%d", &unit[i]);     }      memset(mn, -1, sizeof(mn));     memset(mx, -1, sizeof(mx));      for (int i = 0; i < n; i++) {       int j;       for (j = 0; j < p; j++) {         scanf("%d", &wt[i][j]);         int tmp1 = floor(1.0 * wt[i][j] / (0.9 * unit[i]));         int tmp2 = ceil(1.0 * wt[i][j] / (1.1 * unit[i]));         int bawah = min(tmp1, tmp2);         int atas = max(tmp1, tmp2);           while (bawah <= atas) {           if (bawah * 0.9 * unit[i] - 1e-9 <= 1.0 * wt[i][j] &&               1.0 * wt[i][j] <= bawah * 1.1 * unit[i] + 1e-9)             break;           else             bawah++;         }            if (bawah > atas)           continue;          while (atas >= bawah) {           if (atas * 0.9 * unit[i] - 1e-9 <= 1.0 * wt[i][j] &&               1.0 * wt[i][j] <= atas * 1.1 * unit[i] + 1e-9)             break;           else             atas--;         }           mn[i][j] = bawah;         mx[i][j] = atas;          }     }      for (int i = 0; i < 1010; i++)       adjList[i].clear();      for (int i = 0; i < n - 1; i++) {       for (int j = 0; j < p; j++) {         if (mn[i][j] <= 0)           continue;         for (int d = 0; d < p; d++) {           if (mn[i + 1][d] <= 0)             continue;              if ((mn[i][j] <= mn[i + 1][d] && mn[i + 1][d] <= mx[i][j]) ||               (mn[i + 1][d] <= mn[i][j] && mn[i][j] <= mx[i + 1][d])) {               adjList[i * p + j].push_back(pii((i + 1) * p + d, 1));             adjList[(i + 1) * p + d].push_back(pii(i * p + j, 0));           }         }       }     }      for (int j = 0; j < p; j++) {         if (mn[0][j] > 0) {         adjList[n * p].push_back(pii(j, 1));         adjList[j].push_back(pii(n * p, 0));       }        if (mn[n - 1][j] > 0) {         adjList[(n - 1) * p + j].push_back(pii(n * p + 1, 1));         adjList[n * p + 1].push_back(pii((n - 1) * p + j, 0));       }     }      printf("Case #%d: %d\n", c, maxflow());     cerr << "Test " << c << " done \n";   }   return ret_val; }
#include <bits/stdc++.h> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <ctime> #include <fstream> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <numeric> #include <queue> #include <set> #include <stdlib.h> #include <string> #include <utility> using namespace std;
const int mod = 1000000007;  typedef long long LL; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<int> vi; int unit[52]; int wt[52][52]; int mn[52][52], mx[52][52]; int f; vii adjList[1010]; int par[1010]; int n, p;  void get() {}  void augment(int x) {   if (par[x] != x) {     for (int solve = 0; solve < adjList[par[x]].size(); solve++) {       if (adjList[par[x]][solve].first == x) {         f = min(f, adjList[par[x]][solve].second);         break;       }     }     augment(par[x]);     for (int solve = 0; solve < adjList[par[x]].size(); solve++) {       if (adjList[par[x]][solve].first == x) {         adjList[par[x]][solve].second -= f;         break;       }     }      for (int solve = 0; solve < adjList[x].size(); solve++) {       if (adjList[x][solve].first == par[x]) {         adjList[x][solve].second += f;         break;       }     }   } }  int maxflow() {   int mf = 0;   f = 0;   while (true) {     f = 0;     memset(par, -1, sizeof(par));     queue<int> q;     q.push(n * p);     par[n * p] = n * p;     bool found = false;      while (!q.empty()) {       int node = q.front();         q.pop();       for (int solve = 0; solve < adjList[node].size(); solve++) {          int nx = adjList[node][solve].first;         int cap = adjList[node][solve].second;           if (cap > 0 && par[nx] == -1) {           par[nx] = node;           if (nx == n * p + 1) {             f = 1000000000;             augment(nx);             found = 1;              break;           }           q.push(nx);         }       }       if (found)         break;     }      if (f == 0)       break;     mf += f;   }    return mf; }
int main(void) {    get();   int tc;   cin >> tc;    for (int ct = 1; ct <= tc; ct++) {     map<int, int> mp;      cin >> n;     cin >> p;     for (int solve = 0; solve < n; solve++)       cin >> unit[solve];      memset(mn, -1, sizeof(mn));     memset(mx, -1, sizeof(mx));      for (int solve = 0; solve < n; solve++) {       for (int j = 0; j < p; j++) {         cin >> wt[solve][j];         int tmp1 = floor(1.0 * wt[solve][j] / (0.9 * unit[solve]));         int tmp2 = ceil(1.0 * wt[solve][j] / (1.1 * unit[solve]));         int bawah = min(tmp1, tmp2);         int atas = max(tmp1, tmp2);           while (bawah <= atas) {           if (bawah * 0.9 * unit[solve] - 1e-9 <= 1.0 * wt[solve][j] &&               1.0 * wt[solve][j] <= bawah * 1.1 * unit[solve] + 1e-9)             break;           else             bawah++;         }             if (bawah > atas) {           continue;         }          for (; atas >= bawah;) {           if (atas * 0.9 * unit[solve] - 1e-9 <= 1.0 * wt[solve][j] &&               1.0 * wt[solve][j] <= atas * 1.1 * unit[solve] + 1e-9)             break;           else             atas--;         }             mn[solve][j] = bawah;         mx[solve][j] = atas;          }     }      for (int solve = 0; solve < 1010; solve++)       adjList[solve].clear();      for (int solve = 0; solve < n - 1; solve++) {       for (int j = 0; j < p; j++) {         if (mn[solve][j] <= 0)           continue;         for (int k = 0; k < p; k++) {           if (mn[solve + 1][k] <= 0)             continue;             if ((mn[solve][j] <= mn[solve + 1][k] &&                mn[solve + 1][k] <= mx[solve][j]) ||               (mn[solve + 1][k] <= mn[solve][j] &&                mn[solve][j] <= mx[solve + 1][k])) {               adjList[solve * p + j].push_back(ii((solve + 1) * p + k, 1));             adjList[(solve + 1) * p + k].push_back(ii(solve * p + j, 0));           }         }       }     }      for (int j = 0; j < p; j++) {         if (mn[0][j] > 0) {         adjList[n * p].push_back(ii(j, 1));         adjList[j].push_back(ii(n * p, 0));       }        if (mn[n - 1][j] > 0) {         adjList[(n - 1) * p + j].push_back(ii(n * p + 1, 1));         adjList[n * p + 1].push_back(ii((n - 1) * p + j, 0));       }     }      cout << "Case #" << ct << ": " << maxflow() << "\n";     cerr << "Test " << ct << " done \n";   }   return 0; }
#include <bits/stdc++.h> using namespace std;
typedef long long ll; typedef long long LL; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<int> vi; int unit[52]; int wt[52][52]; int mn[52][52], mx[52][52]; int f; vii adjList[1010]; int par[1010]; int n, p;  void open() {   freopen("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_8_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/ccsnoopy/A-small-practice.in",           "r", stdin);   freopen("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_8_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/ccsnoopy/outer_temp/ccsnoopy/A-small-practice_transformation.out",           "w", stdout); }  void augment(int x) {   if (par[x] != x) {     for (int i = 0; i < adjList[par[x]].size(); i++) {       if (adjList[par[x]][i].first == x) {         f = min(f, adjList[par[x]][i].second);         break;       }     }     augment(par[x]);     for (int i = 0; i < adjList[par[x]].size(); i++) {       if (adjList[par[x]][i].first == x) {         adjList[par[x]][i].second -= f;         break;       }     }      for (int i = 0; i < adjList[x].size(); i++) {       if (adjList[x][i].first == par[x]) {         adjList[x][i].second += f;         break;       }     }   } }  int maxflow() {   int mf = 0;   f = 0;   while (true) {     f = 0;     memset(par, -1, sizeof(par));     queue<int> q;     q.push(n * p);     par[n * p] = n * p;     bool found = false;      while (!q.empty()) {       int node = q.front();         q.pop();       for (int i = 0; i < adjList[node].size(); i++) {          int nx = adjList[node][i].first;         int cap = adjList[node][i].second;           if (cap > 0 && par[nx] == -1) {           par[nx] = node;           if (nx == n * p + 1) {             f = 1000000000;             augment(nx);             found = true;              break;           }           q.push(nx);         }       }       if (found)         break;     }      if (f == 0)       break;     mf += f;   }    return mf; }
int main(void) {   int ret_val = 0;   open();   int tc;   scanf("%d", &tc);   for (int ct = 1; ct <= tc; ct++) {     map<int, int> mp;      scanf("%d", &n);     scanf("%d", &p);     for (int i = 0; i < n; i++) {       scanf("%d", &unit[i]);     }      memset(mn, -1, sizeof(mn));     memset(mx, -1, sizeof(mx));      for (int i = 0; i < n; i++) {       for (int j = 0; j < p; j++) {         scanf("%d", &wt[i][j]);         int tmp1 = floor(1.0 * wt[i][j] / (0.9 * unit[i]));         int tmp2 = ceil(1.0 * wt[i][j] / (1.1 * unit[i]));         int bawah = min(tmp1, tmp2);         int atas = max(tmp1, tmp2);           while (bawah <= atas) {           if (bawah * 0.9 * unit[i] - 1e-9 <= 1.0 * wt[i][j] &&               1.0 * wt[i][j] <= bawah * 1.1 * unit[i] + 1e-9)             break;           else             bawah++;         }             if (bawah > atas)           continue;          while (atas >= bawah) {           if (atas * 0.9 * unit[i] - 1e-9 <= 1.0 * wt[i][j] &&               1.0 * wt[i][j] <= atas * 1.1 * unit[i] + 1e-9)             break;           else             atas--;         }           mn[i][j] = bawah;         mx[i][j] = atas;          }     }      for (int i = 0; i < 1010; i++)       adjList[i].clear();      for (int i = 0; i < n - 1; i++) {       for (int j = 0; j < p; j++) {         if (mn[i][j] <= 0)           continue;         for (int k = 0; k < p; k++) {           if (mn[i + 1][k] <= 0)             continue;             if ((mn[i][j] <= mn[i + 1][k] && mn[i + 1][k] <= mx[i][j]) ||               (mn[i + 1][k] <= mn[i][j] && mn[i][j] <= mx[i + 1][k])) {               adjList[i * p + j].push_back(ii((i + 1) * p + k, 1));             adjList[(i + 1) * p + k].push_back(ii(i * p + j, 0));           }         }       }     }      for (int j = 0; j < p; j++) {         if (mn[0][j] > 0) {         adjList[n * p].push_back(ii(j, 1));         adjList[j].push_back(ii(n * p, 0));       }        if (mn[n - 1][j] > 0) {         adjList[(n - 1) * p + j].push_back(ii(n * p + 1, 1));         adjList[n * p + 1].push_back(ii((n - 1) * p + j, 0));       }     }      printf("Case #%d: %d\n", ct, maxflow());     cerr << "Test " << ct << " done \n";   }   return ret_val; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstring> #include <ctime> #include <iomanip> #include <iostream> #include <iterator> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <stack> #include <stdio.h> #include <string> #include <unordered_map> #include <utility> #include <vector>    using namespace std;
using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  ll gcd(ll a, ll b) {   ll t;   while ((t = a % b) != 0) {     a = b;     b = t;   }   return b; }  ll fast_exp(ll base, ll n, ll c) {   if (n == 0)     return 1;   ll t = fast_exp(base, n / 2, c);   if (n % 2 == 0)     return (t * t) % c;   else     return (((t * t) % c) * base) % c; }  bool is_set(int i, ll mask) { return (mask >> i) & 1; }  int count_bits(ll mask) {   int ans = 0;   for (int i = 0; i < 64; ++i)     if (is_set(i, mask))       ++ans;   return ans; }  int first_bit(ll mask) {   int i = 0;   while (i < 64)     if (is_set(i++, mask))       return i - 1;   return -1; }
int main() {   ios::sync_with_stdio(false);    freopen("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_10_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/ibrahim5253/A-small-practice.in",           "r", stdin);    freopen("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_10_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/ibrahim5253/outer_temp/ibrahim5253/A-small-practice_transformation.out",           "w", stdout);    int ret_val = 0;    int t;   scanf("%d ", &t);   {     int i = 1;     while (i <= t) {       int n, p;       scanf("%d %d ", &n, &p);       ll w[n];       for (int i = 0; i < n; ++i)         scanf("%lld ", &w[i]);       pair<ll, ll> a[n][p];       for (int i = 0; i < n; ++i) {         for (int j = 0; j < p; ++j) {           ll W;           scanf("%lld ", &W);           ll low = ceil(W / (w[i] * 1.1)), high = W / (w[i] * 0.9);           a[i][j] = make_pair(low, high);         }       }       if (n == 1) {         int ans = 0;         {           int i = 0;           while (i < p) {             if (a[0][i].first <= a[0][i].second)               ans++;             ++i;           }         }         printf("Case #%d: %d\n", i, ans);         ++i;         continue;       }       int s[p];       for (int i = 0; i < p; ++i)         s[i] = i;       int ans = 0;       do {         int val = 0;         for (int i = 0; i < p; ++i) {           if (a[0][i].first > a[0][i].second ||               a[1][s[i]].first > a[1][s[i]].second)             continue;           if (a[0][i].first >= a[1][s[i]].first &&                   a[0][i].first <= a[1][s[i]].second ||               a[1][s[i]].first >= a[0][i].first &&                   a[1][s[i]].first <= a[0][i].second)             val++;         }         ans = max(ans, val);       } while (next_permutation(s, s + p));       printf("Case #%d: %d\n", i, ans);         ++i;     }   }   return ret_val; }
#include <bits/stdc++.h> #include <set> #include <stdio.h> #include <vector> using namespace std;
typedef long long ll; typedef unsigned long long ull; typedef vector<int> VI; typedef set<int> si; typedef vector<vector<int>> vvi;  using LL = long long; using pii = pair<int, int>;  int T, cas;
int main() {   int ret_val = 0;   freopen("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_11_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/jiian/A-small-practice.in",           "r", stdin);   freopen("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_11_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/jiian/outer_temp/jiian/A-small-practice_transformation.out",           "w", stdout);   scanf("%d ", &T);   while (T--) {     vector<vector<pii>> v;     vector<int> R;     int n, p;     scanf("%d %d ", &n, &p);     for (int i = 0, x; i < n; i++)       scanf("%d ", &x), R.push_back(x);     int mx = p;     for (int i = 0; i < n; i++) {       v.push_back(vector<pii>());       for (int j = 0, x; j < p; j++) {         scanf("%d ", &x);         int a = ceil(1 / 1.1 * x / R[i]), b = floor(1 / 0.9 * x / R[i]);           if (a <= b)           v.back().emplace_back(a, b);       }       sort(v[i].begin(), v[i].end());     }     int ans = 0;     while (true) {       int mnv = 0, mxv = 1e9, mnid, mxid, flag = 0;       for (int i = 0; i < n; i++)         if (v[i].size()) {           auto x = v[i].back();           if (x.first > mnv)             mnv = x.first, mnid = i;           if (x.second < mxv)             mxv = x.second, mxid = i;         } else           flag = 1;       if (flag)         break;         if (mnv <= mxv) {         ans++;         for (int i = 0; i < n; i++)           v[i].pop_back();       } else {         v[mnid].pop_back();       }     }     printf("Case #%d: %d\n", ++cas, ans);   }   return ret_val; }
#include <bits/stdc++.h> #include <fstream> using namespace std;
const int MAXN = 1005; ifstream fin;  using LL = long long; using pii = pair<int, int>;  int T, r;  inline void xbrkfwrvph(int &x, vector<int> &R, int &i, vector<vector<pii>> &v,                        int &solve) {   fin >> x;   int a = ceil(1 / 1.1 * x / R[i]), b = floor(1 / 0.9 * x / R[i]);     if (a <= b)     v.back().emplace_back(a, b);   solve++; }  inline void adyfkxkcyx(int &p, vector<int> &R, int &i, vector<vector<pii>> &v) {   int solve = 0, x;   while (solve < p)     xbrkfwrvph(x, R, i, v, solve); }  inline void hdvhxksjwk(vector<vector<pii>> &v, int &mnv, int &mnid, int &get,                        int &mxid, int &i) {   auto x = v[i].back();   if (x.first > mnv)     mnv = x.first, mnid = i;   if (x.second < get)     get = x.second, mxid = i; }
int main() {   fin.open("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_11_Usenix_RF_1.0_True_MCTS_Classic_True/sammyMaX/jiian/A-small-practice.in");    int ret_val = 0;    fin >> T;   while (T--) {     vector<vector<pii>> v;     vector<int> R;     int n, p;     fin >> n >> p;     for (int i = 0, x; i < n; i++)       fin >> x, R.push_back(x);     int mx = p;     for (int i = 0; i < n; i++) {       v.push_back(vector<pii>());       adyfkxkcyx(p, R, i, v);       sort(v[i].begin(), v[i].end());     }     int y = 0;     while (1) {       int mnv = 0, get = 1e9, mnid, mxid, flag = 0;       int i;       for (i = 0; i < n; i++)         if (v[i].size())           hdvhxksjwk(v, mnv, mnid, get, mxid, i);         else           flag = 1;       if (flag)         break;               if (mnv <= get) {         y++;         for (int i = 0; i < n; i++)           v[i].pop_back();       } else         v[mnid].pop_back();     }     printf("Case #%d: %d\n", ++r, y);   }   return ret_val; }
#include <algorithm> #include <bitset> #include <cassert> #include <cmath> #include <complex> #include <cstdio> #include <cstring> #include <ctime> #include <iomanip> #include <iostream> #include <list> #include <numeric> #include <queue> #include <set> #include <stdlib.h> #include <string> #include <utility> #include <vector> using namespace std;
const int INF = 1000000000; const long double PI = 3.1415926535897932384626433832795;  int N, P; int s[200]; int r[200][200]; int b[200]; int tb[200];  int a[200][200]; int mm[200][200];  inline void vcgalhmqif(int &stop) { stop = true; }
int main(void) {   freopen("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_12_Usenix_RF_1.0_True_MCTS_Classic_True/try/iPeter/outer_temp/iPeter/A-small-practice_transformation.out",           "w", stdout);    freopen("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_12_Usenix_RF_1.0_True_MCTS_Classic_True/try/iPeter/A-small-practice.in",           "r", stdin);    int t;   scanf("%d", &t);   for (int n = 1; n <= t; n++) {     scanf("%d%d", &N, &P);     for (int get = 0; get < N; ++get) {       scanf("%d", &s[get]);     }     for (int get = 0; get < N; ++get) {       for (int j = 0; j < P; ++j) {         scanf("%d", &r[get][j]);       }       sort(r[get], r[get] + P);       for (int j = 0; j < P; ++j) {         a[get][j] = ceil(1.0 * r[get][j] / (1.1 * s[get]));         mm[get][j] = floor(1.0 * r[get][j] / (0.9 * s[get]));       }     }         int ans = 0;     memset(b, 0, sizeof(b));         for (; 1;) {       int stop = false;       for (int get = 0; get < N; ++get) {         if (b[get] >= P)           vcgalhmqif(stop);       }       if (stop)         break;        int cur = 0;       for (int get = 0; get < N; ++get) {         cur = max(cur, a[get][b[get]]);       }        int ok = true;       for (int get = 0; get < N; ++get) {         for (int j = b[get]; j <= P; ++j) {           if (j == P || cur < a[get][j]) {             b[get] = j;             ok = false;             break;           }           if (a[get][j] > mm[get][j]) {             continue;           }           if (cur <= mm[get][j]) {             tb[get] = j;             break;           }         }       }          if (!ok)         continue;        ++ans;       for (int get = 0; get < N; ++get) {         b[get] = tb[get] + 1;       }     }      printf("Case #%d: %d\n", n, ans);   }   return 0; }
#include <bits/stdc++.h> #include <fstream>  using namespace std;
const int MAXN = 1005; ifstream fin;  ofstream fout;  const int MOD = 1000000007;  typedef pair<int, int> ii;  inline void mdihvivujm(long long &ans, long long &base, long long &s,                        long long &p) {   if (p & 1)     ans = (ans * base) % s;   base = (base * base) % s;   p /= 2; }  long long get(long long base, long long p, long long s = (1000000007LL)) {   long long ans = 1;   while (p)     mdihvivujm(ans, base, s, p);   return ans; }  long long solve(long long a, long long b) {   if (b == 0)     return a;   return solve(b, a % b); }  int n, p, arr[55][55], req[55], DP[10][1024];  int dp(int i, int mask) {   if (i == p) {     int ret_val = 0;     return ret_val;   }   int &ans = DP[i][mask];   if (ans != -1)     return ans;   ans = dp(i + 1, mask);   for (int j = 0; j < p; j++) {     if ((mask >> j) & 1)       continue;     int z = arr[0][i] / req[0];     for (int x = z + 5; x >= z - 5 && x >= 1; x--) {       int lo1 = ceil(1LL * x * req[0] * 0.9),           hi1 = floor(1LL * x * req[0] * 1.1);       int lo2 = ceil(1LL * x * req[1] * 0.9),           hi2 = floor(1LL * x * req[1] * 1.1);       if (arr[0][i] >= lo1 && arr[0][i] <= hi1 && arr[1][j] >= lo2 &&           arr[1][j] <= hi2)         ans = max(ans, 1 + dp(i + 1, mask | (1 << j)));     }   }     return ans; }
int main() {   int ret_val = 0;   fin.open("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_13_Usenix_RF_1.0_True_MCTS_Classic_True/sammyMaX/satyaki3794/A-small-practice.in");   fout.open("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_13_Usenix_RF_1.0_True_MCTS_Classic_True/sammyMaX/satyaki3794/outer_temp/satyaki3794/A-small-practice_transformation.out");   cin.tie(0);   int t, x = 1;   fin >> t;   for (; t--;) {      fin >> n >> p;     for (int i = 0; i < n; i++)       fin >> req[i];     for (int i = 0; i < n; i++)       for (int j = 0; j < p; j++)         fin >> arr[i][j];      if (n == 1) {       int ans = 0;       for (int i = 0; i < p; i++) {         bool ok = false;         {           int x = 2000000;           while (x >= 1) {             int lo = ceil(1LL * x * req[0] * 0.9),                 hi = floor(1LL * x * req[0] * 1.1);             if (arr[0][i] >= lo && arr[0][i] <= hi) {               ok = true;               break;             }             x--;           }         }         ans += ok;       }        fout << "Case #" << x++ << ": " << ans << endl;       continue;     }      memset(DP, -1, sizeof(DP));     fout << "Case #" << x++ << ": " << dp(0, 0) << endl;   }   return ret_val; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;
typedef long double td_ld;  const int MOD = 1000000007;  inline void fafdtybknv(int &m1, int &m2) { swap(m1, m2); }  inline void qgdguwbzga(int &ans) { ans++; }  int main(int y, char **argv) {    ofstream fout("/home/tom/project/ramdisk/blackbox_5304486_5697460110360576_14_Usenix_RF_1.0_True_MCTS_Classic_True/kuzphi/gultai4ukr/outer_temp/gultai4ukr/A-small-practice_transformation.out");    int t;   cin >> t;   for (int testcase = 0; testcase < t; ++testcase) {     int n, p;     cin >> n >> p;     vector<int> need(n);     for (int i = 0; i < n; ++i) {       cin >> need[i];     }     vector<vector<int>> q(n, vector<int>(p));     for (int i = 0; i < n; ++i) {       for (int j = 0; j < p; ++j) {         cin >> q[i][j];       }     }      assert(n < 3);     int ans = 0;     if (n == 1) {       {         int i = 0;         while (i < p) {           int k = q[0][i] / need[0];           td_ld fr1 = 1.0L * q[0][i] / (k * need[0]);           if (0.9L <= fr1)             if (fr1 <= 1.1L) {               ans++;               ++i;               continue;             }           td_ld fr2 = 1.0L * q[0][i] / ((k + 1) * need[0]);           if (0.9L <= fr2 && fr2 <= 1.1L)             qgdguwbzga(ans);           ++i;         }       }     } else {       vector<int> perm(p);       {         int i = 0;         while (i < p) {           perm[i] = i;           ++i;         }       }       do {         int cur = 0;         for (int i = 0; i < p; ++i) {           int m1 = q[0][i] / need[0];           int m2 = q[1][i] / need[1];           if (m2 < m1)             fafdtybknv(m1, m2);           for (int k = m1; k < m2 + 2; ++k) {             td_ld fr01 = 1.0L * q[0][i] / (k * need[0]);             td_ld fr11 = 1.0L * q[1][perm[i]] / (k * need[1]);             td_ld fr02 = 1.0L * q[0][i] / ((k + 1) * need[0]);             td_ld fr12 = 1.0L * q[1][perm[i]] / ((k + 1) * need[1]);             if (0.9L <= fr01 && fr01 <= 1.1L && 0.9L <= fr11 && fr11 <= 1.1L) {               cur++;               break;             } else if (0.9L <= fr02 && fr02 <= 1.1L && 0.9L <= fr12 &&                        fr12 <= 1.1L) {               cur++;               break;             }           }         }         ans = max(ans, cur);       } while (next_permutation(perm.begin(), perm.end()));     }      fout << "Case #" << testcase + 1 << ": " << ans << endl;   }    fout.close();   return 0; }
#include <bits/stdc++.h> #include <bitset> #include <cctype> #include <climits> #include <deque> #include <iomanip> #include <iostream> #include <iterator> #include <math.h> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <unordered_map>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>    using namespace std;
typedef long double LD; typedef vector<int> VI; typedef vector<VI> vvi; typedef pair<int, int> pii; typedef vector<pii> vii; typedef vector<string> vs;  typedef long long ll;             typedef unsigned long long ull;    const double pi = acos(-1.0);   const double eps = 1e-11;       const int MAXI = 0x7fffffff; const int dx[] = {1, 0, -1, 0}; const int dy[] = {0, 1, 0, -1}; const char dz[] = "SENW"; struct debugger {  } dbg;  int req[110], lb[110], ub[110]; int q[110][110];
int main() {   ios::sync_with_stdio(true);    ;    ;    int n, i, j, k, l, m, t, s = 0, d, r, ans, p;   cin >> t;   ;   int c = 1;   while (t--) {     memset((req), (0), sizeof(req));     memset((lb), (0), sizeof(lb));     memset((ub), (0), sizeof(ub));     memset((q), (0), sizeof(q));     cin >> n;     ;     cin >> p;     ;     for (i = 0; i < n; i++) {       cin >> req[i];       ;     }     for (i = 0; i < n; i++) {       for (j = 0; j < p; j++) {         cin >> q[i][j];         ;       }     }     for (i = 0; i < n; i++) {       sort(q[i], q[i] + p);     }     for (i = 0; i < n; i++) {       double nt = (9 * req[i]) / 10.0;       lb[i] = (int)nt;       if (lb[i] < nt) {         lb[i]++;       }       ub[i] = (11 * req[i]) / 10;     }     int ns;     ans = 0;     bool vis[52][52];     memset((vis), (0), sizeof(vis));        for (i = 0; i < n; i++) {       for (j = 0; j < p; j++) {         if (q[i][j] < lb[i]) {           continue;         }         ns = q[i][j] / lb[i];         int mx = q[i][j] / ub[i];         if (mx * ub[i] < q[i][j]) {           mx++;         }         swap(mx, ns);         while (ns <= mx) {           bool f = 1;                       vector<pair<int, int>> v;           v.clear();           for (int m = i + 1; m < n; m++) {             f = 0;             for (int o = 0; o < p; o++) {                          if (!vis[m][o] && ns * lb[m] <= q[m][o])                 if (ns * ub[m] >= q[m][o]) {                   vis[m][o] = true;                   v.push_back(make_pair(m, o));                   f = 1;                   break;                 }             }               if (f == 0)               break;           }           if (f == 0) {             for (int o = 0; o < v.size(); o++) {               vis[v[o].first][v[o].second] = false;             }           } else {             ans++;              break;           }           ns++;         }       }       break;     }     printf("Case #%d: %d\n", c++, ans);   }   return (0); }
#include <bits/stdc++.h> #include <iostream> using namespace std;
typedef long long ll;  typedef vector<int> vi; typedef vector<vi> vvi;  const int N = 50; int cas, n, m; char r[N][N];
int main() {   ios::sync_with_stdio(false);   freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_2_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/KhaleD/A-small-practice.in",           "r", stdin);   freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_2_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/KhaleD/outer_temp/KhaleD/A-small-practice_transformation.out",           "w", stdout);   cin >> cas;   int ans;   for (ans = (1); ans <= (int)(cas); ++ans) {     cin >> n >> m;     for (int i = (0); i <= (int)(n - 1); ++i)       cin >> r[i];      {       int i = (0);       while (i <= (int)(n - 1)) {         for (int ikfi_Var = (1); ikfi_Var <= (int)(m - 1); ++ikfi_Var)           if (r[i][ikfi_Var] == '?')             r[i][ikfi_Var] = r[i][ikfi_Var - 1];         for (int ikfi_Var = (m - 2); ikfi_Var >= (int)(0); --ikfi_Var)           if (r[i][ikfi_Var] == '?')             r[i][ikfi_Var] = r[i][ikfi_Var + 1];         ++i;       }     }     {       int ikfi_Var = (0);       while (ikfi_Var <= (int)(m - 1)) {         for (int i = (1); i <= (int)(n - 1); ++i)           if (r[i][ikfi_Var] == '?')             r[i][ikfi_Var] = r[i - 1][ikfi_Var];         {           int i = (n - 2);           while (i >= (int)(0)) {             if (r[i][ikfi_Var] == '?')               r[i][ikfi_Var] = r[i + 1][ikfi_Var];             --i;           }         }         ++ikfi_Var;       }     }      printf("Case #%d:\n", ans);     for (int i = (0); i <= (int)(n - 1); ++i) {       for (int ikfi_Var = (0); ikfi_Var <= (int)(m - 1); ++ikfi_Var)         printf("%c", r[i][ikfi_Var]);       puts("");     }   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cstdio> #include <cstring> #include <vector> using namespace std;
typedef std::string &td_s;  ifstream vsxs_Var("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_4_Usenix_RF_1.0_True_MCTS_Classic_True/iPeter/sammyMaX/A-small-practice.in"); ofstream tt("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_4_Usenix_RF_1.0_True_MCTS_Classic_True/iPeter/sammyMaX/outer_temp/sammyMaX/A-small-practice_transformation.out");  inline bool kyksqarucs() {   cout << "WTF???\n";   return 1;   return false; }  inline bool uoyhmahszd() {   return true;   return false; }  inline bool abrlbnzxvc() {   return true;   return false; }  void rsolve(int r0, int r1, int c0, int c1, vector<string> &rows) {   vector<pair<int, int>> founds;   for (int aogi_Var = r0; aogi_Var < r1; aogi_Var++)     for (int jhni_Var = c0; jhni_Var < c1; jhni_Var++)       if (rows[aogi_Var][jhni_Var] != '?')         founds.push_back({aogi_Var, jhni_Var});   cout << r0 << ' ' << r1 << ' ' << c0 << ' ' << c1 << ' ' << founds.size()        << '\n';   if (founds.size() == 0) {     if (kyksqarucs()) {       if (uoyhmahszd()) {         if (abrlbnzxvc())           return;       }     }   }   if (founds.size() == 1) {     char found = rows[founds[0].first][founds[0].second];     for (int aogi_Var = r0; aogi_Var < r1; aogi_Var++)       for (int jhni_Var = c0; jhni_Var < c1; jhni_Var++)         rows[aogi_Var][jhni_Var] = found;     return;   } else {     int R1 = founds[0].first, C1 = founds[0].second, R2 = founds[1].first,         C2 = founds[1].second;     if (C1 == C2) {       rsolve(r0, max(R1, R2), c0, c1, rows);       rsolve(max(R1, R2), r1, c0, c1, rows);     } else {       rsolve(r0, r1, c0, max(C1, C2), rows);       rsolve(r0, r1, max(C1, C2), c1, rows);     }   }   cout << r0 << ' ' << r1 << ' ' << c0 << ' ' << c1 << "done\n"; }  void do_voiktz_fct() {   int r, ans;   vsxs_Var >> r >> ans;   vector<string> rows(r);   for (td_s s : rows)     vsxs_Var >> s;   rsolve(0, r, 0, ans, rows);   for (string s : rows)     tt << s << '\n';   cout << "solve done"; }
int main() {   int t;   vsxs_Var >> t;   for (int aogi_Var = 0; aogi_Var < t; aogi_Var++)     tt << "Case #" << aogi_Var + 1 << ":\n", do_voiktz_fct();   return 0; }
#include <bits/stdc++.h> #include <cassert> #include <cmath> #include <complex> #include <cstdio> #include <ctime> #include <iomanip> #include <iostream> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> #include <vector>  using namespace std;
const int mod = 1000000007; const double eps = 1e-9; const double EPS = 1e-9; const int MOD = 1000000007; typedef long long ll; typedef pair<int, int> ii; typedef pair<int, int> PII; typedef vector<int> vi; typedef set<int> si; typedef vector<vector<int>> vvi;  const int N = 100;  int n, m;  void handle_line(string &s) {   char last = '?';   for (int i = 0; i < m; ++i) {     if (s[i] == '?') {       s[i] = last;     } else {       last = s[i];     }   }   int i;   for (i = m - 1; i >= 0; --i) {     if (s[i] == '?') {       s[i] = last;     } else {       last = s[i];     }   } }  string s[N];  inline void mqiwoiwvsa(std::string &qs, int &i) {   if (s[i] == qs) {     s[i] = s[i - 1];   } else {     handle_line(s[i]);   } }  inline void rnkkewqtwy(std::string &qs) { qs.push_back('?'); }  void r() {   cin >> n >> m;   string qs;   {     int i = 1;     while (i <= m) {       rnkkewqtwy(qs);       ++i;     }   }   int st = -1;    for (int i = 1; i <= n; ++i) {     cin >> s[i];     if (s[i] != qs)       st = i;   }   handle_line(s[st]);   for (int i = st - 1; i >= 1; --i) {     if (s[i] == qs) {       s[i] = s[i + 1];     } else {       handle_line(s[i]);     }   }   for (int i = st + 1; i <= n; ++i)     mqiwoiwvsa(qs, i);   for (int i = 1; i <= n; ++i) {     cout << s[i] << endl;   } }
int main() {   ios::sync_with_stdio(true);    freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_5_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/Tashi711/A-small-practice.in",           "r", stdin);   freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_5_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/Tashi711/outer_temp/Tashi711/A-small-practice_transformation.out",           "w", stdout);    int q;   cin >> q;   for (int i = 1; i <= q; ++i) {     cout << "Case #" << i << ":\n";     r();   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;
typedef vector<vector<int>> vvi; typedef long long LL; typedef unsigned long long ull; typedef long double LD; typedef set<int> si; typedef pair<int, int> pii; typedef vector<int> VI; typedef vector<pii> vii;  const int INF = ~(1 << 31); const double pi = acos(-1);  inline void geizykwuuc(char v[500][500], char &am, _Bool vis[500][500], int &i2,                        int &a2) {   v[i2][a2] = am;   vis[i2][a2] = true; }  inline void qpdlzrwtdg(char v[500][500], char &am, _Bool vis[500][500], int &i2,                        int &a2) {   v[i2][a2] = am;   vis[i2][a2] = true; }
int main() {   int ret_val = 0;   freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_7_Usenix_RF_1.0_True_MCTS_Classic_True/lazyBit/bennikartefla/A-small-practice.in",           "r", stdin);   ofstream fout("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_7_Usenix_RF_1.0_True_MCTS_Classic_True/lazyBit/bennikartefla/outer_temp/bennikartefla/A-small-practice_transformation.out");   int t;   scanf("%d ", &t);   for (int u = (0); u < (t); u++) {     int n, m;     scanf("%d %d ", &n, &m);     char v[500][500];     bool vis[500][500];     memset(vis, 0, sizeof(vis));     for (int i = (0); i < (n); i++)       for (int a = (0); a < (m); a++)         scanf("%c ", &v[i][a]);     for (int i = (0); i < (n); i++)       for (int a = (0); a < (m); a++) {         if (v[i][a] != '?' && !vis[i][a]) {           vis[i][a] = true;           int startx = a;           int endx = a;           char am = v[i][a];           {             int a2 = (a + 1);             for (; a2 < (m);) {               if (v[i][a2] == '?') {                 v[i][a2] = am;                 vis[i][a2] = true;                 endx++;               } else                 break;               a2++;             }           }           for (int a2 = a - 1; a2 >= 0; a2--) {             if (v[i][a2] == '?') {               v[i][a2] = am;               vis[i][a2] = true;               startx--;             } else               break;           }             for (int i2 = (i + 1); i2 < (n); i2++) {             bool can = true;             for (int a2 = (startx); a2 < (endx + 1); a2++)               if (v[i2][a2] != '?')                 can = false;             if (can) {               for (int a2 = (startx); a2 < (endx + 1); a2++)                 geizykwuuc(v, am, vis, i2, a2);             } else               break;           }           for (int i2 = i - 1; i2 >= 0; i2--) {             bool can = true;             for (int a2 = (startx); a2 < (endx + 1); a2++)               if (v[i2][a2] != '?')                 can = false;             if (can) {               for (int a2 = (startx); a2 < (endx + 1); a2++)                 qpdlzrwtdg(v, am, vis, i2, a2);             } else               break;           }         }       }     fout << "Case #" << u + 1 << ":" << endl;     for (int i = (0); i < (n); i++) {       for (int a = (0); a < (m); a++)         fout << v[i][a];       fout << endl;     }   }   return ret_val; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <map> #include <math.h> #include <numeric> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;
typedef long double ld; typedef unsigned long long ull; typedef set<int> si; typedef vector<vector<int>> vvi; typedef long long ll; typedef long long LL; typedef pair<int, int> pii; typedef vector<pii> vii; typedef vector<int> VI; void get() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_8_Usenix_RF_1.0_True_MCTS_Classic_True/lazyBit/ccsnoopy/A-small-practice.in",           "r", stdin); }  inline void hkpfjfvuai(std::string ret[30], int &i) {   printf("%s\n", ret[i].c_str()); }
int main(void) {   int ret_val = 0;   get();   int tc;   scanf("%d", &tc);   for (int n = 1; n <= tc; n++) {     int r, c;     scanf("%d", &r);     scanf("%d", &c);     string str[30];     string ret[30];     for (int i = 0; i < r; i++) {       cin >> str[i];          ret[i] = str[i];     }      for (int i = 0; i < r; i++) {       for (int j = 0; j < c; j++) {         if (str[i][j] == '?')           continue;         int minx, maxx;         minx = maxx = i;         int miny, maxy;         miny = maxy = j;         while (miny > 0 && str[i][miny - 1] == '?' && ret[i][miny - 1] == '?')           miny--;         while (maxy < c - 1 && str[i][maxy + 1] == '?' &&                ret[i][maxy + 1] == '?')           maxy++;         while (minx > 0) {           bool valid = true;           for (int k = miny; k <= maxy; k++) {             if (str[minx - 1][k] != '?' || ret[minx - 1][k] != '?') {               valid = false;               break;             }           }           if (valid)             minx--;           else             break;         }         bool adabawah = false;         for (int k = i + 1; k < r; k++) {           int l;           for (l = 0; l < c; l++) {             if (str[k][l] != '?') {               adabawah = true;               break;             }           }         }         if (!adabawah) {           maxx = r - 1;         }          for (int k = minx; k <= maxx; k++) {           for (int l = miny; l <= maxy; l++) {             ret[k][l] = str[i][j];           }         }       }     }      printf("Case #%d: \n", n);     for (int i = 0; i < r; i++) {       hkpfjfvuai(ret, i);     }      cerr << "Test " << n << " done \n";   }   return ret_val; }
#include <bits/stdc++.h> using namespace std;
using LL = long long;  int T, cas;  string convert(string s) {   int p, i;   for (p = 0, i = 0; s[i]; i++) {     if (s[i] != '?')       while (p <= i)         s[p++] = s[i];   }   if (!p)     return s;   while (s[--i] == '?')     s[i] = s[p - 1];   return s; }
int main() {   freopen("123.in", "r", stdin);   freopen("123.out", "w", stdout);   cin >> T;   while (T--) {     vector<string> a;     int n, m;     cin >> n >> m;     int p = 0, i;     for (i = 0; i < n; i++) {       string s;       cin >> s;       s = convert(s);       a.push_back(s);       if (s[0] != '?')         while (p <= i)           a[p++] = a[i];     }     while (a[--i][0] == '?')       a[i] = a[p - 1];     printf("Case #%d:\n", ++cas);     for (auto s : a)       printf("%s\n", s.c_str());   }   return 0; }
#include <algorithm> #include <cstdio> #include <cstring> #include <iostream> using namespace std;
const long double PI = 3.1415926535897932384626433832795; const int MAXN = 1005; const int mod = 1000000007; const int MOD = 1000000007;  int n, tc; char s[50][50];
int main(void) {   freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_12_Usenix_RF_1.0_True_MCTS_Classic_True/try/iPeter/outer_temp/iPeter/A-small-practice_transformation.out",           "w", stdout);    freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_12_Usenix_RF_1.0_True_MCTS_Classic_True/try/iPeter/A-small-practice.in",           "r", stdin);    int t;   scanf("%d", &t);   for (int c = 1; c <= t; c++) {     scanf("%d%d", &n, &tc);      for (int i = 0; i < n; ++i) {       scanf("%s", s[i]);     }      int ufx, ufy = 0;     for (int i = 0; i < n; ++i) {       ufx = 0;       int fill = 0;       for (int solve = 0; solve < tc; ++solve) {         if (s[i][solve] == '?')           continue;         fill = 1;         int st = ufx, ed = solve + 1;         for (; ed < tc && s[i][ed] == '?'; ++ed)           ;         for (int x = st; x < ed; ++x)           for (int y = ufy; y <= i; ++y)             s[y][x] = s[i][solve];         ufx = ed;       }       if (fill)         ufy = i + 1;     }      for (int i = 0; i < n; ++i)       for (int solve = 0; solve < tc; ++solve)         if (s[i][solve] == '?') {           s[i][solve] = s[i - 1][solve];         }      printf("Case #%d:\n", c);     for (int i = 0; i < n; ++i)       printf("%s\n", s[i]);   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <climits> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <functional> #include <iterator> #include <numeric> #include <queue> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <unordered_map> #include <utility> using namespace std;
int n, m; char s[50][50];
int main(void) {   int ret_val = 0;   int t;   scanf("%d", &t);   for (int tt = 1; tt <= t; tt++) {     scanf("%d%d", &n, &m);     for (int i = 0; i < n; ++i)       scanf("%s", s[i]);      int ufx, ufy = 0;     for (int i = 0; i < n; ++i) {       ufx = 0;       bool fill = false;       for (int j = 0; j < m; ++j) {         if (s[i][j] == '?')           continue;         fill = true;         int st = ufx, ed = j + 1;         for (; ed < m && s[i][ed] == '?'; ++ed)           ;         for (int x = st; x < ed; ++x)           for (int solve = ufy; solve <= i; ++solve)             s[solve][x] = s[i][j];         ufx = ed;       }       if (fill)         ufy = i + 1;     }      for (int i = 0; i < n; ++i)       for (int j = 0; j < m; ++j)         if (s[i][j] == '?') {           s[i][j] = s[i - 1][j];         }      printf("Case #%d:\n", tt);     for (int i = 0; i < n; ++i)       printf("%s\n", s[i]);   }   return ret_val; }
#include <algorithm> #include <cstdio> #include <cstring> #include <iomanip> #include <iostream> #include <stdio.h> using namespace std;
int n, p; char s[50][50]; inline void goojddsyba(int &i, int &j) { s[i][j] = s[i - 1][j]; }
int main(void) {   freopen("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_12_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/iPeter/outer_temp/iPeter/A-small-practice_transformation.out",           "w", stdout);    int solve;   cin >> solve;   for (int tt = 1; tt <= solve; tt++) {     cin >> n >> p;     for (int i = 0; i < n; ++i)       cin >> s[i];      int ufx, ufy = 0;     for (int i = 0; i < n; ++i) {       ufx = 0;       bool fill = 0;       {         int j = 0;         while (j < p) {           if (s[i][j] == '?') {             ++j;             continue;           }           fill = true;           int st = ufx, ed = j + 1;           for (; ed < p && s[i][ed] == '?'; ++ed)             ;           for (int x = st; x < ed; ++x)             for (int y = ufy; y <= i; ++y)               s[y][x] = s[i][j];           ufx = ed;           ++j;         }       }       if (fill)         ufy = i + 1;     }      for (int i = 0; i < n; ++i)       for (int j = 0; j < p; ++j)         if (s[i][j] == '?')           goojddsyba(i, j);      printf("Case #%d:\n", tt);     for (int i = 0; i < n; ++i)       printf("%s\n", s[i]);   }   return 0; }
#include <bits/stdc++.h> #include <fstream> #include <iostream>  using namespace std;
ifstream fin;  const double eps = 1e-9; ofstream fout;  typedef pair<int, int> ii;  long long solve(long long a, long long b) {   if (b == 0)     return a;   return solve(b, a % b); }  int r, c; char s[26][26];  inline void jtnthhquxy(int &i, int &j, int &maxy, int &y) {   s[i][y++] = s[i][j];   maxy = y - 1; }
int main() {   ios::sync_with_stdio(false);    fin.open("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_13_Usenix_RF_1.0_True_MCTS_Classic_True/sammyMaX/satyaki3794/A-small-practice.in");    fout.open("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_13_Usenix_RF_1.0_True_MCTS_Classic_True/sammyMaX/satyaki3794/outer_temp/satyaki3794/A-small-practice_transformation.out");    int ret_val = 0;   cin.tie(0);    int t, x = 1;   fin >> t;   while (t--) {      fin >> r >> c;     for (int i = 1; i <= r; i++)       fin >> (s[i] + 1);      for (int i = 1; i <= r; i++)       for (int j = 1; j <= c; j++)         if (s[i][j] != '?') {            int miny = j, maxy = j;            int y = j - 1;           while (y >= 1 && s[i][y] == '?') {             s[i][y--] = s[i][j];             miny = y + 1;           }            y = j + 1;           while (y <= c && s[i][y] == '?')             jtnthhquxy(i, j, maxy, y);         }      queue<ii> qq;     for (int i = 1; i <= r; i++)       if (s[i][1] != '?') {          int x = i - 1;         for (; x >= 1 && s[x][1] == '?';) {           for (int j2 = 1; j2 <= c; j2++)             s[x][j2] = s[x + 1][j2];           x--;         }          x = i + 1;         for (; x <= r && s[x][1] == '?';) {           for (int j2 = 1; j2 <= c; j2++)             s[x][j2] = s[x - 1][j2];           x++;         }       }      fout << "Case #" << x++ << ":" << endl;     for (int i = 1; i <= r; i++)       fout << (s[i] + 1) << endl;   }   return ret_val; }
#include <bits/stdc++.h> #include <bitset> #include <climits> #include <complex> #include <deque> #include <fstream> #include <iomanip> #include <iostream> #include <iterator> #include <math.h> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>    using namespace std;
const int MAXN = 1005;  typedef long double ld; typedef long double LD; typedef vector<vector<int>> vvi; typedef vector<int> vi;  typedef pair<int, int> PII; typedef vector<PII> vii; typedef vector<string> vs;  typedef long long LL;             typedef unsigned long long ull;   typedef unsigned uint;  const double pi = acos(-1.0);  const double eps = 1e-11;      const int MAXI = 0x7fffffff; const int dx[] = {1, 0, -1, 0}; const int dy[] = {0, 1, 0, -1}; const char dz[] = "SENW"; struct debugger {   template <typename T> debugger &operator,(const T &v) {     cerr << v << " ";     return *this;   } } dbg;  char N[50][50]; bool vis[50][50];
int main() {   ios::sync_with_stdio(true);      int n, i, j, x, b, m, t, s = 0, d, r;   cin >> t;   ;   int c = 1;   while (t--) {     cin >> r;     ;     cin >> b;     ;     memset((vis), (0), sizeof(vis));     for (i = 0; i < r; i++)       cin >> N[i];      for (i = 0; i < r; i++) {       for (j = 0; j < b; j++) {         if (N[i][j] != '?')           if (!vis[i][j]) {             x = i - 1;             while (x >= 0 && N[x][j] == '?') {               N[x][j] = N[i][j];               vis[x][j] = true;               x--;             }             x = i + 1;             while (x < r && N[x][j] == '?') {               N[x][j] = N[i][j];               vis[x][j] = true;               x++;             }           }       }     }      memset((vis), (0), sizeof(vis));     for (i = 0; i < r; i++) {       for (j = 0; j < b; j++) {         if (N[i][j] != '?' && !vis[i][j]) {           x = j - 1;           while (x >= 0 && N[i][x] == '?') {             N[i][x] = N[i][j];             vis[i][x] = true;             x--;           }           x = j + 1;           while (x < b && N[i][x] == '?') {             N[i][x] = N[i][j];             vis[i][x] = true;             x++;           }         }       }     }     cout << "Case #" << c++ << ":\n";     for (i = 0; i < r; i++) {       cout << N[i] << endl;     }   }   return (0); }
#include <algorithm> #include <bits/stdc++.h> #include <cassert> #include <complex> #include <cstdio> #include <cstdlib> #include <ctime> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <math.h> #include <queue> #include <set> #include <stack> #include <stdio.h> #include <stdlib.h> #include <unordered_map> #include <vector>  using namespace std;
const double eps = 1e-9; ofstream fout;  ifstream fin;  const double EPS = 1e-9;  inline void eeojctyxxg(vector<std::string> &x, int &ib, int &T, _Bool &check) {   if (x[ib + 1][T] != '?') {     check = false;   } }  inline void qgyenxjscd(int &jl) { jl--; }  int solve(int cc) {   int r, c;   fin >> r >> c;   vector<std::string> x(30);   int i;   for (i = 0; i < r; i++) {     fin >> x[i];   }   set<char> s;   for (int i = 0; i < r; i++) {     for (int j = 0; j < c; j++) {       if (x[i][j] != '?' && s.find(x[i][j]) == s.end()) {           int jl = j, jr = j, it = i, ib = i;         while (jl - 1 >= 0 && x[i][jl - 1] == '?')           qgyenxjscd(jl);         while (jr + 1 < c && x[i][jr + 1] == '?') {           jr++;         }         while (true) {           if (it - 1 >= 0) {             int check = true;             for (int T = jl; T <= jr; T++) {               if (x[it - 1][T] != '?') {                 check = false;               }             }             if (check) {               it--;             } else {               break;             }           } else {             break;           }         }         for (; true;) {           if (ib + 1 < r) {             bool check = true;             int T;             for (T = jl; T <= jr; T++)               eeojctyxxg(x, ib, T, check);             if (check) {               ib++;             } else {               break;             }           } else {             break;           }         }         for (int T = it; T <= ib; T++) {           for (int l = jl; l <= jr; l++) {             x[T][l] = x[i][j];           }         }         s.insert(x[i][j]);       }     }   }   fout << "Case #" << cc << ":" << endl;   for (int i = 0; i < r; i++) {     fout << x[i] << endl;   }   return 1; }
int main() {   ios::sync_with_stdio(false);    fout.open("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_17_Usenix_RF_1.0_True_MCTS_Classic_True/okaduki/Thanabhat/outer_temp/Thanabhat/A-small-practice_transformation.out");    fin.open("/home/seal12/Downloads/ramdisk/blackbox_5304486_5760761888505856_17_Usenix_RF_1.0_True_MCTS_Classic_True/okaduki/Thanabhat/A-small-practice.in");    int get;   fin >> get;   for (int i = 0; i < get; i++) {     solve(i + 1);   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;
ifstream fin;  const int mod = 1000000007; const double EPS = 1e-9; const long double PI = 3.1415926535897932384626433832795;  int tc;  long long d, n, solve, b; vector<pair<long long, long long>> ks;
int main() {   fin.open("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_1_Usenix_RF_1.0_True_MCTS_Classic_True/kuzphi/4yn/A-small-practice.in");    fin >> tc;   for (int t = 1; t <= tc; t++) {     ks.clear();     fin >> d >> n;     double lb, ub, ex;     lb = 0;     ub = 0;     {       int i = 0;       while (i < n) {         fin >> solve >> b;         ks.push_back(pair<long long, long long>(solve, b));         if (ub == 0) {           if (solve != d) {             ub = d * b / (d - solve + 0.0);           }         } else {           if (solve != d) {             ub = min(ub, d * b / (d - solve + 0.0));           }         }         i++;       }     }     while (abs(ub - lb) > 0.0000005f) {       ex = (ub + lb) / 2;       bool f = 1;         for (int i = 0; i < n; i++) {           if (ks[i].second >= ex)           continue;               if (ks[i].first / (ex - ks[i].second) * ex < d) {           f = false;         }       }       if (f) {         lb = ex;       } else {         ub = ex;       }     }     printf("Case #%d: %.7f\n", t, ub);   }   return 0; }
#include <bits/stdc++.h> #include <iostream> using namespace std;
typedef long long ll;  typedef pair<ll, ll> pll; typedef vector<int> vi; typedef vector<vi> vvi; typedef vector<ll> vll; typedef set<int> si; typedef map<int, int> mii;  const int N = 100002; int r, m, n, cas[N], speed[N];  inline void ickrcttlby(int &ans) {   cin >> m >> n;   for (int i = (1); i <= (int)(n); ++i)     cin >> cas[i] >> speed[i];    double maxT = 0;   for (int i = (1); i <= (int)(n); ++i) {     maxT = max(maxT, 1.0 * (m - cas[i]) / speed[i]);   }    printf("Case #%d: %.6f\n", ans, m / maxT); }
int main() {   ios::sync_with_stdio(0);    int ret_val = 0;   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_2_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/KhaleD/A-small-practice.in",           "r", stdin);   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_2_Usenix_RF_1.0_True_MCTS_Classic_True/jiian/KhaleD/outer_temp/KhaleD/A-small-practice_transformation.out",           "w", stdout);   cin >> r;   {     int ans = (1);     while (ans <= (int)(r)) {       ickrcttlby(ans);       ++ans;     }   }   return ret_val; }
#include <algorithm> #include <cstdio> #include <cstring> #include <iostream> using namespace std;
typedef double td_d;  inline void icisgccswk(double &tt, int &d, int &pvqi_Var, int &s) {   scanf("%d %d", &pvqi_Var, &s);   tt = max(tt, 1.0 * (d - pvqi_Var) / s); }  inline void wpxhdrlfpz(double &tt, int &d, int &pvqi_Var, int &s,                        int &igpi_Var) {   icisgccswk(tt, d, pvqi_Var, s);   igpi_Var++; }  inline void iojzpkhpwn(int &qgui_Var, int &igpi_Var, int &pvqi_Var, int &s,                        int &ans, int &d, double &tt) {   scanf("%d %d", &d, &qgui_Var);   tt = 0.0;   {     igpi_Var = 0;     while (igpi_Var < qgui_Var)       wpxhdrlfpz(tt, d, pvqi_Var, s, igpi_Var);   }   printf("Case #%d: %.6f\n", ans + 1, d / tt); }  int main() {    int t, igpi_Var, d, qgui_Var, pvqi_Var, s;   td_d tt;   scanf("%d", &t);   for (int ans = 0; ans < t; ans++)     iojzpkhpwn(qgui_Var, igpi_Var, pvqi_Var, s, ans, d, tt);    return 0; }
#include <bits/stdc++.h> #include <iostream> using namespace std;
const double EPS = 1e-9; const long double PI = 3.1415926535897932384626433832795;  typedef long long ll;  inline void ifpcnhmcmj(double &s, ll &dest) {   ll cur, speed;   cin >> cur >> speed;   s = max(s, 1.0 * (dest - cur) / speed); }  void solve() {   ll dest, nh;   cin >> dest >> nh;   double s = 0;   for (int i = 0; i < nh; i++)     ifpcnhmcmj(s, dest);   cout << fixed << setprecision(12);   cout << dest / s << '\n'; }  inline void skuzkkklob(int &i) { cout << "Case #" << i + 1 << ": ", solve(); }
int main() {    freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_4_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/sammyMaX/outer_temp/sammyMaX/A-small-practice_transformation.out",           "w", stdout);    cin.tie(0);   int get;   cin >> get;   for (int i = 0; i < get; i++)     skuzkkklob(i);   return 0; }
#include <bits/stdc++.h> using namespace std;
const int mod = 1000000007;  ifstream fin("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_4_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/sammyMaX/A-small-practice.in"); ofstream c("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_4_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/sammyMaX/outer_temp/sammyMaX/A-small-practice_transformation.out");  void solve() {   long long dest, nh;   fin >> dest >> nh;   double res = 0;   {     int get = 0;     while (get < nh) {       long long cur, speed;       fin >> cur >> speed;       res = max(res, 1.0 * (dest - cur) / speed);       get++;     }   }   c << fixed << setprecision(12);   c << dest / res << '\n'; }
int main() {    cin.tie(0);   int t;   fin >> t;    {     int get = 0;     for (; get < t;) {       c << "Case #" << get + 1 << ": ", solve();       get++;     }   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cctype> #include <cmath> #include <cstdio> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <string> #include <utility> #include <vector>  using namespace std;
const int INF = 1000000000; typedef double td_d; typedef vector<int> vi; typedef vector<int> VI; typedef long double ld; typedef long long ll; typedef long long LL; typedef pair<int, int> pii; typedef unsigned long long ull;  const int N = 1100; int b[N], s[N];  void work() {   int d, n;   cin >> d >> n;   td_d mt = 0;   int i;   for (i = 1; i <= n; ++i) {     cin >> b[i] >> s[i];     mt = max(mt, double(d - b[i]) / s[i]);   }   cout << fixed << setprecision(9) << d / mt << endl; }  inline void roejgeiijh(int &i) {   cout << "Case #" << i << ": ";   work();   ++i; }
int main() {    freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_5_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/Tashi711/A-small-practice.in",           "r", stdin);   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_5_Usenix_RF_1.0_True_MCTS_Classic_True/satyaki3794/Tashi711/outer_temp/Tashi711/A-small-practice_transformation.out",           "w", stdout);    int q;   cin >> q;   {     int i = 1;     while (i <= q)       roejgeiijh(i);   }   return 0; }
#include <algorithm> #include <cstdio> #include <cstring> #include <iostream> #include <string> #include <vector> using namespace std;
int main() {   int tt;    cin >> tt;    for (int t = 1; t <= tt; ++t) {     int d, n;     cin >> d >> n;      long long bk, bs, k, s;     cin >> k >> s;     k = d - k;     bk = k;     bs = s;     for (int i = 1; i < n; ++i) {       cin >> k >> s;       k = d - k;       if (s * bk < bs * k) {         bs = s;         bk = k;       }     }     bs *= d;     long long q = bs / bk, r = bs % bk;      cout << "Case #" << t << ": " << q << ".";     for (int i = 0; i < 6; ++i) {       r = r * 10;       cout << r / k;       r = r % k;     }     cout << endl;   }    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <complex> #include <cstdio> #include <cstring> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <numeric> #include <set> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> #include <vector> using namespace std;
typedef long long td_ll;  ifstream fin;  inline void dlcempuynn(long long &bs, long long &s, long long &bk,                        long long &k) {   bs = s;   bk = k; }  inline void iiiyobnnln(int &y, int &t) {   t = 1;   for (; t <= y;) {     int d, n;     fin >> d >> n;      td_ll bk, bs, k, s;     fin >> k >> s;     k = d - k;     bk = k;     bs = s;     for (int i = 1; i < n; ++i) {       fin >> k >> s;       k = d - k;       if (s * bk < bs * k)         dlcempuynn(bs, s, bk, k);     }     bs *= d;     td_ll q = bs / bk, r = bs % bk;      cout << "Case #" << t << ": " << q << ".";      for (int i = 0; i < 6; ++i) {       r = r * 10;       cout << r / k;       r = r % k;     }     cout << endl;     ++t;   } }  int main() {    fin.open("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_6_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/WCG/A-small-practice.in");    int y;    fin >> y;    int t;   iiiyobnnln(y, t);    return 0; }
#include <algorithm> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <deque> #include <fstream> #include <functional> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;
const int INF = 1000000000; typedef long long LL; typedef pair<int, int> pii; typedef unsigned long long ull; typedef vector<int> vi; typedef long double ld; typedef vector<vector<int>> vvi;
int main() {   int ret_val = 0;   int tt;   cin >> tt;   for (int t = 1; t <= tt; ++t) {     int d, n;     cin >> d >> n;      LL bk, bs, k, s;     cin >> k >> s;     k = d - k;     bk = k;     bs = s;     for (int i = 1; i < n; ++i) {       cin >> k >> s;       k = d - k;       if (s * bk < bs * k) {         bs = s;         bk = k;       }     }     bs *= d;     LL q = bs / bk, r = bs % bk;      printf("Case #%d: %lld.", t, q);     for (int i = 0; i < 6; ++i) {       r = r * 10;       printf("%lld", r / k);       r = r % k;     }     printf("\n");   }   return ret_val; }
#include <bits/stdc++.h> using namespace std;
typedef pair<int, int> ii; typedef vector<int> vi; typedef vector<ii> vii; typedef long long ll; const int INF = ~(1 << 31); const double pi = acos(-1);
int main() {   cin.sync_with_stdio(false);   ofstream fout("ans2.txt");   int t;   cin >> t;   for (int u = (0); u < (t); u++) {     double n, m;     cin >> n >> m;     double t2 = 0;     for (int i = (0); i < (m); i++) {       double a, b;       cin >> a >> b;       double t = (n - a) / b;       t2 = max(t, t2);     }     fout << "Case #" << u + 1 << ": " << setprecision(10) << fixed << n / t2          << endl;   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> #include <vector> using namespace std;
typedef vector<vector<int>> vvi; typedef long double LD; typedef set<int> si; typedef long long LL; typedef pair<int, int> pii; typedef vector<pii> vii; typedef vector<int> VI; void open() {   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_8_Usenix_RF_1.0_True_MCTS_Classic_True/lazyBit/ccsnoopy/A-small-practice.in",           "r", stdin); }  inline void rtrdigrebc(double &maxi, int &d) {   int st, sp;   scanf("%d", &st);   scanf("%d", &sp);   maxi = max(maxi, 1.0 * (d - st) / sp); }
int main(void) {   int ret_val = 0;   open();   int tc;   scanf("%d", &tc);   for (int ct = 1; ct <= tc; ct++) {     int d, n;     scanf("%d", &d);     scanf("%d", &n);     double maxi = 0.0;      for (int i = 0; i < n; i++)       rtrdigrebc(maxi, d);      printf("Case #%d: %.7lf\n", ct, 1.0 * d / maxi);     cerr << "Test " << ct << " done \n";   }   return ret_val; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cctype> #include <climits> #include <complex> #include <cstring> #include <deque> #include <fstream> #include <iomanip> #include <iostream> #include <numeric> #include <sstream> #include <stack> #include <unordered_map> #include <utility> #include <vector> using namespace std;
const int MAXN = 1005;  typedef long long LL; typedef pair<int, int> ii;  void solve() {}
int main(void) {   solve();   int t;   cin >> t;    {     int N = 1;     for (; N <= t;) {       int d, n;       cin >> d;       cin >> n;       double maxi = 0.0;        for (int i = 0; i < n; i++) {         int st, sp;         cin >> st;         cin >> sp;         maxi = max(maxi, 1.0 * (d - st) / sp);       }        printf("Case #%d: %.7lf\n", N, 1.0 * d / maxi);       cerr << "Test " << N << " done \n";       N++;     }   }   return 0; }
#include <bits/stdc++.h> using namespace std;
using VI = vector<int>; using VVI = vector<VI>; using PII = pair<int, int>; using LL = long long; using VL = vector<LL>; using VVL = vector<VL>; using PLL = pair<LL, LL>; using VS = vector<string>; template <class S, class T> istream &operator>>(istream &is, pair<S, T> &p) {   return is >> p.first >> p.second; } template <class S, class T> ostream &operator<<(ostream &os, const pair<S, T> &p) {   return os << p.first << " " << p.second; } template <class T> void maxi(T &x, T y) {   if (x < y)     x = y; } template <class T> void mini(T &x, T y) {   if (x > y)     x = y; }  const double EPS = 1e-10; const double PI = acos(-1.0); const LL MOD = 1e9 + 7;
int main() {   cin.tie(0);   ios_base::sync_with_stdio(false);    int T;   cin >> T;   for (int t = (1); t < (T + 1); ++t) {     LL D, N;     cin >> D >> N;     double mn = 0;     vector<PLL> xs(N);     for (int i = (0); i < (N); ++i)       cin >> xs[i];     for (int i = (0); i < (N); ++i)       mn = max(mn, (D - xs[i].first) * 1. / xs[i].second);     double ans = D / mn;     cout << "Case #" << t << ": " << fixed << setprecision(9) << ans << endl;   }    return 0; }
#include <algorithm> #include <bitset> #include <climits> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <iostream> #include <limits> #include <list> #include <map> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <string> #include <unordered_map> #include <vector> using namespace std;
const double pi = acos(-1.), eps = 1e-6; const int Maxn = 310, Maxk = 5010, Mo = 1e9 + 7, oo = INT_MAX >> 2; const int sp[4][2] = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}}; int T; long long f[Maxn][Maxn][2], vis[Maxn][Maxn][2]; int a[Maxn]; int n, m, k, cs, ans; struct Rec {   int a, b, l; } w[Maxn];  int s[Maxn], v[Maxn], D, N; double t;
int main() {   cin >> T;   while (T--) {     printf("Case #%d: ", ++cs);     cin >> D >> N;     t = -1;     for (int i = 1; i <= N; i++) {       cin >> s[i] >> v[i];        t = max(t, 1. * (D - s[i]) / v[i]);     }       printf("%.6f\n", D / t);   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <climits> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <iostream> #include <limits> #include <list> #include <map> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <string> #include <unordered_map> #include <vector> using namespace std;
const int Maxn = 310;  int tc; int cs;   int s[Maxn], v[Maxn], D, N; double t;
int main() {   int ret_val = 0;   cin >> tc;   for (; tc--;) {     printf("Case #%d: ", ++cs);     cin >> D >> N;     t = -1;     for (int i = 1; i <= N; i++) {       cin >> s[i] >> v[i];        t = max(t, 1. * (D - s[i]) / v[i]);     }       printf("%.6f\n", D / t);   }   return ret_val; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <iostream> #include <limits> #include <list> #include <map> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;
const int Maxn = 310;  int T;  typedef unsigned long long ull; typedef vector<vector<int>> vvi; typedef long double LD; typedef long long ll; typedef pair<int, int> pii; typedef pair<int, int> PII; typedef vector<int> vi; typedef vector<int> VI;  int cs;   int solve[Maxn], v[Maxn], D, N; double t;
int main() {   ios::sync_with_stdio(0);    int ret_val = 0;   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_9_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/kuzphi/A-small-practice.in",           "r", stdin);   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_9_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/kuzphi/outer_temp/kuzphi/A-small-practice_transformation.out",           "w", stdout);   scanf("%d ", &T);   for (; T--;) {     printf("Case #%d: ", ++cs);     scanf("%d %d ", &D, &N);     t = -1;     for (int i = 1; i <= N; i++) {       scanf("%d %d ", &solve[i], &v[i]);        t = max(t, 1. * (D - solve[i]) / v[i]);     }      printf("%.6f\n", D / t);   }   return ret_val; }
#include <algorithm> #include <bits/stdc++.h> #include <climits> #include <cmath> #include <cstdio> #include <cstring> #include <fstream> #include <iomanip> #include <iostream> #include <iterator> #include <map> #include <queue> #include <set> #include <stack> #include <string> #include <unordered_map> #include <utility> #include <vector>   using namespace std;
ofstream fout;  ifstream fin;  typedef double dbl;  using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  inline void cdfovsyzzy(ll &a, ll &b, ll &t) {   a = b;   b = t; }  ll gcd(ll a, ll b) {   ll t;   for (; (t = a % b) != 0;)     cdfovsyzzy(a, b, t);   return b; }  ll do_llxae_fct(ll tc, ll n, ll m) {   if (n == 0)     return 1;   ll t = do_llxae_fct(tc, n / 2, m);   if (n % 2 == 0)     return (t * t) % m;   else     return (((t * t) % m) * tc) % m; }  bool is_set(int i, ll mask) { return (mask >> i) & 1; }  int do_intzom_fct(ll mask) {   int ans = 0;   for (int i = 0; i < 64; ++i) {     if (is_set(i, mask))       ++ans;   }   return ans; }  int first_bit(ll mask) {   int i = 0;   while (i < 64)     if (is_set(i++, mask))       return i - 1;   return -1; }  inline void owooaclhfb(dbl &mt, ll &d) {   ll k, s;   fin >> k >> s;   mt = max(mt, (d - k) / static_cast<double>(s)); }  inline void nrkauajqpv(dbl &mt, ll &d, int &j) {   owooaclhfb(mt, d);   ++j; }  inline void iysyldkqxw(ll &n, dbl &mt, ll &d) {   int j = 0;   while (j < n)     nrkauajqpv(mt, d, j); }
int main() {   fout.open("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_10_Usenix_RF_1.0_True_MCTS_Classic_True/4yn/ibrahim5253/outer_temp/ibrahim5253/A-small-practice_transformation.out");    fin.open("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_10_Usenix_RF_1.0_True_MCTS_Classic_True/4yn/ibrahim5253/A-small-practice.in");    int ret_val = 0;   int t;   fin >> t;   for (int i = 1; i <= t; ++i) {     ll d, n;     fin >> d >> n;     dbl mt = 0;     iysyldkqxw(n, mt, d);     fout << "Case #" << i << ": " << fixed << setprecision(10) << d / mt          << "\n";   }   return ret_val; }
#include <algorithm> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <string> #include <unordered_map> #include <utility> #include <vector>   using namespace std;
typedef double td_d;  const int mod = 1000000007; const double eps = 1e-9; const int MAXN = 1005; using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  ll fast_exp(ll base, ll n, ll v) {   if (n == 0)     return 1;   ll t = fast_exp(base, n / 2, v);   if (n % 2 == 0)     return (t * t) % v;   else {     return (((t * t) % v) * base) % v;   } }  bool is_set(int i, ll mask) { return (mask >> i) & 1; }  int count_bits(ll mask) {   int ans = 0;   {     int i = 0;     while (i < 64) {       if (is_set(i, mask))         ++ans;       ++i;     }   }   return ans; }  int first_bit(ll mask) {   int i = 0;   while (i < 64)     if (is_set(i++, mask))       return i - 1;   return -1; }  inline void lstogrbqes(int &t) {   int i = 1;   while (i <= t) {     ll d, n;     scanf("%lld %lld ", &d, &n);     td_d mt = 0;     {       int j = 0;       for (; j < n;) {         ll k, s;         scanf("%lld %lld ", &k, &s);         mt = max(mt, (d - k) / static_cast<double>(s));         ++j;       }     }     printf("Case #%d: %.10f\n", i, d / mt);     ++i;   } }
int main() {   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_10_Usenix_RF_1.0_True_MCTS_Classic_True/try/ibrahim5253/outer_temp/ibrahim5253/A-small-practice_transformation.out",           "w", stdout);    freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_10_Usenix_RF_1.0_True_MCTS_Classic_True/try/ibrahim5253/A-small-practice.in",           "r", stdin);    int t;   scanf("%d ", &t);   lstogrbqes(t);   return 0; }
#include <bits/stdc++.h> #include <set> #include <utility> #include <vector> using namespace std;
const int INF = 1000000000; typedef long long ll; typedef pair<int, int> pii; typedef pair<int, int> PII; typedef vector<int> vi; typedef long double LD; typedef set<int> si;  using LL = long long;
int main() {   int ret_val = 0;   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_11_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/jiian/A-small-practice.in",           "r", stdin);   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_11_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/jiian/outer_temp/jiian/A-small-practice_transformation.out",           "w", stdout);   int solve, cas = 0;   cin >> solve;   while (solve--) {     int d, n;     cin >> d >> n;     double t = 0;     while (n--) {       int k, s;       cin >> k >> s;       t = max((1.0 * d - k) / s, t);     }     double ans = d / t;     printf("Case #%d: %.10f\n", ++cas, ans);   }   return ret_val; }
#include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <cstdio> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <unordered_map> #include <vector>  using namespace std;
ofstream fout;  long long pwr(long long d, long long p, long long q = (1000000007LL)) {   long long ans = 1;   while (p) {     if (p & 1)       ans = (ans * d) % q;     d = (d * d) % q;     p /= 2;   }   return ans; }  long long gcd(long long a, long long b) {   if (b == 0)     return a;    return gcd(b, a % b); }  int n; double D, dist[1005], speed[1005];  bool possible(double mid) {   int i;   for (i = 1; i <= n; i++) {     if (speed[i] > mid)       continue;     double x = (dist[i] / speed[i]) / (1.0 / speed[i] - 1.0 / mid);     if (x <= D)       return false;   }   return true; }
int main() {   fout.open("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_13_Usenix_RF_1.0_True_MCTS_Classic_True/WCG/satyaki3794/outer_temp/satyaki3794/A-small-practice_transformation.out");    cin.tie(0);    int t, x = 1;   cin >> t;   while (t--) {      cin >> D >> n;     for (int i = 1; i <= n; i++)       cin >> dist[i] >> speed[i];      double ans = 0, lo = 0, hi = 1e18 + 2;     {       int iter = 0;       while (iter < 100) {         double mid = (lo + hi) / 2;         if (possible(mid)) {           ans = max(ans, mid);           lo = mid;         } else {           hi = mid;         }         iter++;       }     }      fout << "Case #" << x++ << ": " << fixed << setprecision(7) << ans << endl;   }    return 0; }
#include <bits/stdc++.h> using namespace std;
int main(int argc, char **argv) {   ifstream fin("/home/roman/CodeliteProjects/Competitive/GCJ17_R1B/in.txt");   ofstream fout("/home/roman/CodeliteProjects/Competitive/GCJ17_R1B/out.txt");    int t;   fin >> t;   for (int testcase = 0; testcase < t; ++testcase) {     long long int d, n, k, s;     fin >> d >> n;     double max_time = 0;     for (int i = 0; i < n; ++i) {       fin >> k >> s;         max_time = max(max_time, 1.0 * (d - k) / s);     }      fout << "Case #" << testcase + 1 << ": " << fixed << setprecision(7)          << d / max_time << endl;   }    fin.close();   fout.close();   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stdio.h> #include <stdlib.h> using namespace std;
const long double PI = 3.1415926535897932384626433832795; const int MAXN = 1005;  inline void hzhnjqxgrx(double &get, long long &d, long long &ans,                        long long &s) {   cin >> ans >> s;     get = max(get, 1.0 * (d - ans) / s); }  inline void rairljtrxk(double &get, long long &d, long long &ans, long long &s,                        int &i) {   hzhnjqxgrx(get, d, ans, s);   ++i; }  inline void tqmmxdipky(long long &n, double &get, long long &d, long long &ans,                        long long &s) {   int i = 0;   while (i < n) {     rairljtrxk(get, d, ans, s, i);   } }
int main(int argc, char **argv) {    ofstream fout("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_14_Usenix_RF_1.0_True_MCTS_Classic_True/WCG/gultai4ukr/outer_temp/gultai4ukr/A-small-practice_transformation.out");    int t;   cin >> t;   for (int x = 0; x < t; ++x) {     long long d, n, ans, s;     cin >> d >> n;     double get = 0;     tqmmxdipky(n, get, d, ans, s);      fout << "Case #" << x + 1 << ": " << fixed << setprecision(7) << d / get          << endl;   }    fout.close();   return 0; }
#include <bits/stdc++.h> #include <stdio.h>  using namespace std;
typedef vector<int> vi; typedef long long ll; typedef long double ld; typedef pair<int, int> pii; typedef pair<pii, int> para; const int inf = 1e9 + 7; const int maxN = 1e6 + 5;  int d, n, start[maxN], speed[maxN], t;
int main() {   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_15_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/Mucosolvan/outer_temp/Mucosolvan/A-small-practice_transformation.out", "w", stdout);    freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_15_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/Mucosolvan/A-small-practice.in",           "r", stdin);    scanf("%d ", &t);   for (int x = (1); x <= ((t)); ++x) {     scanf("%d %d ", &d, &n);     long double maxim = 0;     for (int i = (0); i <= ((n)-1); ++i) {       scanf("%d %d ", &start[i], &speed[i]);       long double time = (long double)(d - start[i]) / (long double)speed[i];       maxim = max(maxim, time);     }      cout << "Case #" << x << ": ";     cout << fixed << setprecision(12) << d / maxim << endl;   }   return 0; }
#include <bitset> #include <deque> #include <iomanip> #include <iostream> #include <queue> #include <set> #include <sstream> #include <stack>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>    using namespace std;
  typedef vector<int> vi; typedef vector<vi> vvi; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<string> vs;  typedef long long LL;             typedef unsigned long long ULL;   typedef unsigned uint;  const double pi = acos(-1.0);   const double eps = 1e-11;      const int MAXI = 0x7fffffff; const int dx[] = {1, 0, -1, 0}; const int dy[] = {0, 1, 0, -1}; const char dz[] = "SENW"; struct debugger {   template <typename T> debugger &operator,(const T &v) {     cerr << v << " ";     return *this;   } } dbg;  void debugarr(int *arr, int n) {   cout << "[";   for (int i = 0; i < n; i++)     cout << arr[i] << " ";   cout << "]" << endl; }
  int main() {    freopen("input.txt", "r", stdin);   ;      int n, i, j, k, l, m, t, s = 0, d, p;   scanf("%d", &t);   ;   int c = 1;   while (t--) {     scanf("%d", &d);     ;     scanf("%d", &n);     ;     double ans = 0.0;     double r;       for (i = 0; i < n; i++) {       scanf("%d", &k);       ;       scanf("%d", &s);       ;       double r = ((d - k) * 1.0) / s;         ans = max(ans, r);     }     printf("Case #%d: %0.6lf\n", c++, d / ans);   }   return (0); }
#include <bits/stdc++.h> #include <bitset> #include <cctype> #include <climits> #include <complex> #include <deque> #include <fstream> #include <iomanip> #include <iostream> #include <iterator> #include <math.h> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <unordered_map>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>    using namespace std;
const int INF = 1000000000;  typedef double td_d; typedef vector<int> vi; typedef vector<vi> vvi; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<string> vs;  typedef long long LL;             typedef unsigned long long ULL;    const double pi = acos(-1.0);   const double eps = 1e-11;       const int MAXI = 0x7fffffff; const int dx[] = {1, 0, -1, 0}; const int dy[] = {0, 1, 0, -1}; const char dz[] = "SENW"; struct debugger {   template <typename T> debugger &operator,(const T &v) {     cerr << v << " ";     return *this;   } } dbg;  void debugarr(int *arr, int n) {   cout << "[";   int i;   for (i = 0; i < n; i++)     cout << arr[i] << " ";   cout << "]" << endl; }  inline void bvkqfdcbis(int &d, int &k, int &s, double &ans) {   cin >> k;   ;   cin >> s;   ;   td_d r = ((d - k) * 1.0) / s;     ans = max(ans, r); }  inline void ujbnidshlv(int &n, int &i, int &k, int &s, int &c, int &d) {   cin >> d;   ;   cin >> n;   ;   td_d ans = 0.0;   td_d r;     for (i = 0; i < n; i++)     bvkqfdcbis(d, k, s, ans);   printf("Case #%d: %0.6lf\n", c++, d / ans); }  inline void gixghanbdi(int &n, int &i, int &k, int &s, int &c, int &d) {   ujbnidshlv(n, i, k, s, c, d); }
int main() {   ios::sync_with_stdio(true);    ;      int n, i, j, k, l, y, t, s = 0, d, p;   cin >> t;   ;   int c = 1;   while (t--)     gixghanbdi(n, i, k, s, c, d);   return (0); }
#include <bits/stdc++.h> #include <iostream> #include <stdio.h>  using namespace std;
typedef long double td_ld; typedef long long ll; typedef long long LL;  inline void jctnpwlrec(td_ld &mt, td_ld &tt) { mt = tt; }  int solve(int cc) {   LL d, n, k, s;   td_ld mt = 0;   scanf("%lld %lld ", &d, &n);   for (int i = 0; i < n; i++) {     scanf("%lld %lld ", &k, &s);     td_ld tt = (d - k);     tt /= s;     if (i == 0 || mt < tt)       jctnpwlrec(mt, tt);   }   cout << "Case #" << cc << ": " << fixed << d / mt << endl;   return 1; }
int main() {   freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_17_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/Thanabhat/outer_temp/Thanabhat/A-small-practice_transformation.out",           "w", stdout);    int ct;   scanf("%d ", &ct);   cout.precision(7);   for (int i = 1; i <= ct; i++) {     solve(i);   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <string> #include <utility> #include <vector>  using namespace std;
typedef double td_d; typedef unsigned long long ull; typedef set<int> si; typedef long double ld; typedef long long ll; typedef pair<int, int> ii; typedef pair<int, int> pii; typedef vector<int> vi; typedef long double LD;  const int N = 1010;  int solve[N]; long long b[N];  inline void zepqztokfj(int &i, LD &s, _Bool &can) {   if (b[i] < solve[i] * s) {     can = false;   } }  inline void apsaeebyvr(LD &l, LD &s) { l = s; }
int main() {    freopen("/home/tom/project/ramdisk/blackbox_8294486_5630967708385280_18_Usenix_RF_1.0_True_MCTS_Classic_True/ibrahim5253/fragusbot/A-small-practice.in",           "r", stdin);    int t;   scanf("%d", &t);   for (int y = 1; y <= t; ++y) {     td_d begt = clock();     printf("Case #%d: ", y);     int d, n;     scanf("%d %d", &d, &n);     {       int i = 0;       while (i < n) {         int foo, bar;         scanf("%d %d", &foo, &bar);         solve[i] = d - foo;         b[i] = 1LL * d * bar;         ++i;       }     }     LD l = 0, r = 1e16;     for (int it = 0; it < 1000; ++it) {       LD s = (l + r) * 0.5;       bool can = true;       for (int i = 0; i < n; ++i)         zepqztokfj(i, s, can);       if (can)         apsaeebyvr(l, s);       else         r = s;     }     printf("%.15f\n", (double)((l + r) * 0.5));     fprintf(stderr, "case %d solved in %.3f\n", y,             (clock() - begt) / CLOCKS_PER_SEC);   }   return 0; }
#include <algorithm> #include <bitset> #include <cmath> #include <cstdio> #include <cstring> #include <ctime> #include <iostream> #include <map> #include <queue> #include <set> #include <string> #include <vector> #pragma comment(linker, "/STACK:256000000")  using namespace std;
void readData() {}  const int maxN = 1100; double d; long long n; double s[maxN], k[maxN];  void solve(int test) {   if (test == 29) {     int f = 0;   }   cin >> d >> n;   for (int i = 0; i < n; ++i) {     cin >> k[i] >> s[i];   }    double l = 0.0, r = 1e18;   for (int t = 0; t < 400; ++t) {     double m = (l + r) / 2.0;     bool ok = true;      double p = d / m;     for (int j = 0; j < n; ++j) {       if (k[j] + s[j] * p < d) {         ok = false;         break;       }     }      if (ok) {       l = m;     } else {       r = m;     }   }    printf("Case #%d: %.10lf\n", test, (l + r) / 2.0); }
int main(int argc, char *argv[]) {   freopen("input.txt", "r", stdin);   freopen("output.txt", "w", stdout);    int left_bound, right_bound;       int t;   cin >> t;   left_bound = 1, right_bound = t;   for (int i = 1; i <= t; ++i) {     if (i >= left_bound && i <= right_bound) {       solve(i);     } else {       readData();     }     cerr << i << ": " << clock() << endl;   }    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cmath> #include <complex> #include <cstdio> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> #include <vector> using namespace std;
const long double PI = 3.1415926535897932384626433832795; const int MAXN = 1005; const int mod = 1000000007; ofstream fout;  ifstream fin;  inline void afcxipqhph(std::string &s, vector<pair<int, std::string>> &v) {   s += v[1].second;   v[1].first--; }  inline void iadwmfnnwv(int &c, int &t) {   t = 1;   while (t <= c) {     int j, r, o, y, g, b, v;     fin >> j >> r >> o >> y >> g >> b >> v;     string s = "";      if ((r > j / 2) || (y > j / 2) || (b > j / 2)) {       s = "IMPOSSIBLE";     } else {       vector<pair<int, string>> v;       v.push_back({r, "R"});       v.push_back({y, "Y"});       v.push_back({b, "B"});       sort(v.begin(), v.end());       reverse(v.begin(), v.end());       while (v[0].first > 0) {         s += v[0].second;         v[0].first--;         if (v[1].first > v[2].first)           afcxipqhph(s, v);         else {           s += v[2].second;           v[2].first--;         }       }       while ((v[1].first > 0) || (v[2].first > 0)) {         if (v[1].first > v[2].first) {           s += v[1].second;           v[1].first--;         } else {           s += v[2].second;           v[2].first--;         }       }     }     fout << "Case #" << t << ": " << s << endl;     ++t;   } }  int main() {   fout.open("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_6_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/WCG/outer_temp/WCG/A-small-practice_transformation.out");    fin.open("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_6_Usenix_RF_1.0_True_MCTS_Classic_True/gultai4ukr/WCG/A-small-practice.in");    int c;    fin >> c;    int t;   iadwmfnnwv(c, t);    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <complex> #include <cstdio> #include <cstring> #include <deque> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <numeric> #include <set> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> #include <vector> using namespace std;
const int MOD = 1000000007; const long double PI = 3.1415926535897932384626433832795; typedef unsigned long long ull; typedef long long ll; typedef pair<int, int> pii; typedef vector<int> vi; typedef vector<int> VI; typedef long double LD; typedef set<int> si;
int main() {   ios::sync_with_stdio(0);    int tt;    cin >> tt;    {     int t = 1;     while (t <= tt) {       int n, r, o, y, g, b, v;       cin >> n >> r >> o >> y >> g >> b >> v;       string s = "";        if ((r > n / 2) || (y > n / 2) || (b > n / 2))         s = "IMPOSSIBLE";       else {         vector<pair<int, string>> v;         v.push_back({r, "R"});         v.push_back({y, "Y"});         v.push_back({b, "B"});         sort(v.begin(), v.end());         reverse(v.begin(), v.end());         while (v[0].first > 0) {           s += v[0].second;           v[0].first--;           if (v[1].first > v[2].first) {             s += v[1].second;             v[1].first--;           } else {             s += v[2].second;             v[2].first--;           }         }         while ((v[1].first > 0) || (v[2].first > 0)) {           if (v[1].first > v[2].first) {             s += v[1].second;             v[1].first--;           } else {             s += v[2].second;             v[2].first--;           }         }       }       cout << "Case #" << t << ": " << s << endl;       ++t;     }   }    return 0; }
#include <bits/stdc++.h> using namespace std;
typedef pair<int, int> ii; typedef vector<int> vi; typedef vector<ii> vii; typedef long long ll; const int INF = ~(1 << 31); const double pi = acos(-1);
int main() {   cin.sync_with_stdio(false);   ofstream fout("ansb2.txt");   int t;   cin >> t;   string nice = "ROYGBVXXX";   for (int u = (0); u < (t); u++) {     int arr[8];     memset(arr, 0, sizeof(arr));     int n;     cin >> n;     for (int i = (0); i < (6); i++)       cin >> arr[i];     string s = "";     int last = 7;     int og = n;     bool can = true;     while (n != 0) {       int bst = 0;       int index = 0;       for (int i = (0); i < (6); i++)         if (arr[i] >= bst && nice[i] != nice[last] && arr[i] != 0) {           if (arr[i] == bst && arr[i] != 0) {             if (n != og) {               if (s[0] == nice[i]) {                 bst = arr[i];                 index = i;               }             }           } else if (arr[i] > bst) {             bst = arr[i];             index = i;           }         }       arr[index]--;       if (bst == -1) {         can = false;         break;       }       s += nice[index];       last = index;       n--;     }     if (s.size() != og)       can = false;     for (int i = (0); i < (s.size() - 1); i++)       if (s[i] == s[i + 1])         can = false;     for (int i = (1); i < (s.size()); i++)       if (s[i] == s[i - 1])         can = false;     fout << "Case #" << u + 1 << ": ";     if (s[0] == s[s.size() - 1] || !can)       fout << "IMPOSSIBLE" << endl;     else       fout << s << endl;   }   return 0; }
#include <bits/stdc++.h> #include <fstream> #include <iostream> #include <set> #include <vector> using namespace std;
const int MAXN = 1005; ifstream fin;  typedef long double ld; typedef set<int> si; typedef vector<vector<int>> vvi; typedef pair<int, int> pii; typedef vector<int> vi; typedef vector<pii> vii;  inline void vagjarjjod(std::string &s, _Bool &can) {   int i = (1);   while (i < (s.size())) {     if (s[i] == s[i - 1])       can = false;     i++;   } }  inline void oigngzinvz(int &n, int &solve, std::string &s, std::string &nice,                        int &N, int arr[8], int &index, int &i) {   if (arr[i] == N && arr[i] != 0) {     if (n != solve) {       if (s[0] == nice[i]) {         N = arr[i];         index = i;       }     }   } else if (arr[i] > N) {     N = arr[i];     index = i;   } }
int main() {   fin.open("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_7_Usenix_RF_1.0_True_MCTS_Classic_True/Thanabhat/bennikartefla/A-small-practice.in");    int t;   fin >> t;   string nice = "ROYGBVXXX";   for (int u = (0); u < (t); u++) {     int arr[8];     memset(arr, 0, sizeof(arr));     int n;     fin >> n;     for (int i = (0); i < (6); i++) {       fin >> arr[i];     }     string s = "";     int last = 7;     int solve = n;     bool can = true;     while (n != 0) {       int N = 0;       int index = 0;       for (int i = (0); i < (6); i++)         if (arr[i] >= N && nice[i] != nice[last])           if (arr[i] != 0)             oigngzinvz(n, solve, s, nice, N, arr, index, i);       arr[index]--;       if (N == -1) {         can = 0;         break;       }       s += nice[index];       last = index;       n--;     }     if (s.size() != solve)       can = false;     for (int i = (0); i < (s.size() - 1); i++)       if (s[i] == s[i + 1])         can = 0;     vagjarjjod(s, can);     cout << "Case #" << u + 1 << ": ";     if (s[0] == s[s.size() - 1] || !can)       cout << "IMPOSSIBLE" << endl;     else       cout << s << endl;   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;
typedef set<int> si; typedef unsigned long long ull; typedef long double ld; typedef long double LD; typedef vector<vector<int>> vvi; typedef long long ll; typedef long long LL; typedef pair<int, int> pii; typedef vector<pii> vii; typedef vector<int> vi; void open() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_8_Usenix_RF_1.0_True_MCTS_Classic_True/lazyBit/ccsnoopy/A-small-practice.in",           "r", stdin); }  void pr(int T) {   switch (T) {   case 0:     cout << "R";     break;   case 1:     cout << "O";     break;   case 2:     cout << "Y";     break;   case 3:     cout << "G";     break;   case 4:     cout << "B";     break;   case 5:     cout << "V";     break;   } }
int main(void) {   ios::sync_with_stdio(false);    int ret_val = 0;   open();   int tc;   scanf("%d", &tc);   for (int s = 1; s <= tc; s++) {     int n;     scanf("%d", &n);     int arr[10];     cout << "Case #" << s << ": ";     for (int i = 0; i < 6; i++) {       scanf("%d", &arr[i]);     }     bool imp = false;     for (int i = 0; i < 6; i++) {       if (arr[i] * 2 > n) {         imp = true;         cout << "IMPOSSIBLE\n";         break;       }     }      if (imp)       continue;      int maxidx = 0;     for (int i = 0; i < 6; i++) {       if (arr[maxidx] < arr[i])         maxidx = i;     }     bool palinggede = true;     int last = maxidx;     pr(maxidx);     arr[maxidx]--;     int first = last;      for (; true;) {       bool ada = false;       for (int i = 0; i < 6; i++) {         if (arr[i] > 0)           ada = true;       }        if (!ada)         break;        if (last == 0) {         if (arr[2] > arr[4]) {           last = 2;         } else if (arr[2] < arr[4]) {           last = 4;         } else {           if (first == 2) {             last = 2;           } else             last = 4;         }       } else if (last == 2) {         if (arr[0] > arr[4]) {           last = 0;         } else if (arr[0] < arr[4]) {           last = 4;         } else {           if (first == 0) {             last = 0;           } else             last = 4;         }       } else {         if (arr[0] > arr[2]) {           last = 0;         } else if (arr[0] < arr[2]) {           last = 2;         } else {           if (first == 0) {             last = 0;           } else             last = 2;         }       }       pr(last);       arr[last]--;     }     cout << "\n";      cerr << "Test " << s << " done \n";     if (first == last) {       cerr << "last equals first\n";     }   }   return ret_val; }
#include <bits/stdc++.h> using namespace std;
using VI = vector<int>; using VVI = vector<VI>; using PII = pair<int, int>; using LL = long long; using VL = vector<LL>; using VVL = vector<VL>; using PLL = pair<LL, LL>; using VS = vector<string>; template <class S, class T> istream &operator>>(istream &is, pair<S, T> &p) {   return is >> p.first >> p.second; } template <class S, class T> ostream &operator<<(ostream &os, const pair<S, T> &p) {   return os << p.first << " " << p.second; } template <class T> void maxi(T &x, T y) {   if (x < y)     x = y; } template <class T> void mini(T &x, T y) {   if (x > y)     x = y; }  const double EPS = 1e-10; const double PI = acos(-1.0); const LL MOD = 1e9 + 7;  bool check(VI tmp, const string &s) {   string col = "ROYGB";   for (int i = 0; i < int((s).size()); ++i) {     int ix = col.find(s[i]);     tmp[ix]--;   }   for (int i = (0); i < (6); ++i)     if (tmp[i] != 0)       return false;    if (s[0] == s.back())     return false;   for (int i = (0); i < (int((s).size()) - 1); ++i)     if (s[i] == s[i + 1])       return false;   return true; }
int main() {   cin.tie(0);   ios_base::sync_with_stdio(false);    int T;   cin >> T;   for (int t = (1); t < (T + 1); ++t) {     int N;     string col = "ROYGB";     VI xs(6);     cin >> N;       for (int i = (0); i < (6); ++i)       cin >> xs[i];     VI orig = xs;      int mx = max(xs[0], max(xs[1 * 2], xs[2 * 2]));     bool ok = (mx <= N - mx);      if (!ok) {       cout << "Case #" << t << ": IMPOSSIBLE" << endl;     } else {       string ans(N, '*');       int ix = -1;       for (int i = (0); i < (6); ++i)         if (xs[i] == mx)           ix = i;        for (int i = (0); i < (6); ++i)         if (i != ix && xs[i]) {           ans[0] = col[i];           xs[i]--;           ix = i;           break;         }       for (int i = 1; i < N; ++i) {         int mix = -1;         for (int j = (0); j < (6); ++j) {           if ((mix == -1 || xs[mix] < xs[j]) && j != ix)             mix = j;         }         ans[i] = col[mix];         xs[mix]--;         ix = mix;       }        if (!check(orig, ans)) {         for (int i = (0); i < (6); ++i)           cout << orig[i] << " ";         cout << endl;         cout << ans << endl;         return 1;       }        cout << "Case #" << t << ": " << ans << endl;     }   }    return 0; }
#include <bits/stdc++.h> using namespace std;
using VI = vector<int>; using VVI = vector<VI>; using PII = pair<int, int>; using LL = long long; using VL = vector<LL>; using VVL = vector<VL>; using PLL = pair<LL, LL>; using VS = vector<string>; template <class S, class T> istream &do_stdjsq_fct(istream &is, pair<S, T> &p) {   return is >> p.first >> p.second; } template <class S, class T> ostream &operator<<(ostream &os, const pair<S, T> &p) {   return os << p.first << " " << p.second; }  template <class T> void mini(T &x, T y) {   if (x > y)     x = y; }  bool check(VI tmp, const string &s) {   string col = "ROYGB";   for (int i = 0; i < int((s).size()); ++i) {     int ix = col.find(s[i]);     tmp[ix]--;   }   for (int i = (0); i < (6); ++i)     if (tmp[i] != 0)       return false;    if (s[0] == s.back())     return false;   for (int i = (0); i < (int((s).size()) - 1); ++i)     if (s[i] == s[i + 1])       return false;   return 1; }  inline void fpjyiummgn(VI &xs, int &ix, int &mix, int &j) {   if ((mix == -1 || xs[mix] < xs[j]) && j != ix)     mix = j; }  inline void qksgcnhzwp(std::string &ans, int &i, std::string &col, VI &xs,                        int &ix) {   int mix = -1;   for (int j = (0); j < (6); ++j)     fpjyiummgn(xs, ix, mix, j);   ans[i] = col[mix];   xs[mix]--;   ix = mix; }
int main() {   int ret_val = 0;    cin.tie(0);   int n;   cin >> n;   for (int t = (1); t < (n + 1); ++t) {     int N;     string col = "ROYGB";     VI xs(6);     cin >> N;       for (int i = (0); i < (6); ++i)       cin >> xs[i];     VI orig = xs;      int mx = max(xs[0], max(xs[1 * 2], xs[2 * 2]));     int ok = (mx <= N - mx);      if (!ok) {       cout << "Case #" << t << ": IMPOSSIBLE" << endl;     } else {       string ans(N, '*');       int ix = -1;       for (int i = (0); i < (6); ++i)         if (xs[i] == mx)           ix = i;        for (int i = (0); i < (6); ++i)         if (i != ix && xs[i]) {           ans[0] = col[i];           xs[i]--;           ix = i;           break;         }       for (int i = 1; i < N; ++i)         qksgcnhzwp(ans, i, col, xs, ix);        if (!check(orig, ans)) {         int ret_val = 1;         for (int i = (0); i < (6); ++i)           cout << orig[i] << " ";         cout << endl;         cout << ans << endl;         return ret_val;       }        cout << "Case #" << t << ": " << ans << endl;     }   }   return ret_val; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cctype> #include <climits> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <limits> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;
const double pi = acos(-1.), eps = 1e-6; const int Maxn = 3010, Maxk = 5010, Mo = 1e9 + 7, oo = INT_MAX >> 2; const int sp[4][2] = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}}; int T;  typedef set<int> si; typedef long double ld; typedef long long ll; typedef pair<int, int> pii; typedef vector<int> vi; typedef vector<int> VI; typedef long double LD;    int n, m, k, cs; struct Rec {   int a, b, l; };   int N, R, O, second, G, B, V; int num[10], ans[Maxn]; vector<int> w[1010];
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_9_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/kuzphi/A-small-practice.in",           "r", stdin);    freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_9_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/kuzphi/outer_temp/kuzphi/A-small-practice_transformation.out",           "w", stdout);    int ret_val = 0;   ios::sync_with_stdio(true);   scanf("%d ", &T);   while (T--) {     printf("Case #%d: ", ++cs);     scanf("%d ", &N);     for (int i = 0; i < 6; i++) {       scanf("%d ", &num[i]);     }     int Max = max(num[0], max(num[2], num[4]));     if (N - Max < Max) {       puts("IMPOSSIBLE");       continue;     }     for (int i = 1; i <= 1000; i++)       w[i].clear();     int x = 0, i = 1;     if (Max == num[0]) {       x = 0;       for (; i <= num[2]; i++)         w[(i - 1) % num[x] + 1].push_back(2);       for (; i <= N - num[x]; i++)         w[(i - 1) % num[x] + 1].push_back(4);      } else if (Max == num[2]) {       x = 2;       for (; i <= num[0]; i++)         w[(i - 1) % num[x] + 1].push_back(0);       for (; i <= N - num[x]; i++)         w[(i - 1) % num[x] + 1].push_back(4);     } else {       x = 4;       for (; i <= num[0]; i++)         w[(i - 1) % num[x] + 1].push_back(0);       for (; i <= N - num[x]; i++)         w[(i - 1) % num[x] + 1].push_back(2);     }     ans[0] = 0;     for (int i = 1; i <= num[x]; i++) {       ans[++ans[0]] = x;       for (int j = 0; j < w[i].size(); j++)         ans[++ans[0]] = w[i][j];     }        for (int i = 1; i <= N; i++) {       if (ans[i] == 0)         cout << 'R';       if (ans[i] == 2)         cout << 'Y';       if (ans[i] == 4)         cout << 'B';     }     cout << endl;     }   return ret_val; }
#include <algorithm> #include <bits/stdc++.h> #include <climits> #include <cmath> #include <cstdio> #include <cstring> #include <fstream> #include <iomanip> #include <iostream> #include <iterator> #include <map> #include <queue> #include <set> #include <stack> #include <stdio.h> #include <string> #include <unordered_map> #include <utility> #include <vector>    using namespace std;
typedef double dbl;  ifstream fin;  using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  inline void dyyxkjmkfn(ll &tc, ll &b, ll &t) {   tc = b;   b = t; }  ll gcd(ll tc, ll b) {   ll t;   while ((t = tc % b) != 0)     dyyxkjmkfn(tc, b, t);   return b; }  ll fast_exp(ll base, ll n, ll m) {   if (n == 0)     return 1;   ll t = fast_exp(base, n / 2, m);   if (n % 2 == 0)     return (t * t) % m;   else     return (((t * t) % m) * base) % m; }  bool is_set(int i, ll mask) { return (mask >> i) & 1; }  inline void snsnmssmkv(ll &mask, int &ans, int &i) {   if (is_set(i, mask))     ++ans;   ++i; }  inline void jinrytzeuh(ll &mask, int &ans) {   int i = 0;   while (i < 64)     snsnmssmkv(mask, ans, i); }  int count_bits(ll mask) {   int ans = 0;   jinrytzeuh(mask, ans);   return ans; }  int first_bit(ll mask) {   int ret_val = -1;   int i = 0;   while (i < 64)     if (is_set(i++, mask))       return i - 1;   return ret_val; }
int main() {   fin.open("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_10_Usenix_RF_1.0_True_MCTS_Classic_True/4yn/ibrahim5253/A-small-practice.in");    int ret_val = 0;    int t;   fin >> t;   for (int i = 1; i <= t; ++i) {     int n, r, o, y, g, b, v;     fin >> n >> r >> o >> y >> g >> b >> v;     int ma = n / 2;     printf("Case #%d: ", i);     if (r > ma || y > ma || b > ma) {       printf("IMPOSSIBLE\n");       continue;     }     vector<pair<int, char>> V;     V.push_back(make_pair(r, 'R')), V.push_back(make_pair(y, 'Y')),         V.push_back(make_pair(b, 'B'));     sort(V.begin(), V.end());     char s[n + 1];     int p = 0;     int tc = V[2].first;     while (tc--)       s[p] = V[2].second, p = (p + 2) % n, p = (p == 0 ? 1 : p);     tc = V[1].first;     while (tc--)       s[p] = V[1].second, p = (p + 2) % n, p = (p == 0 ? 1 : p);     tc = V[0].first;     while (tc--)       s[p] = V[0].second, p = (p + 2) % n, p = (p == 0 ? 1 : p);     {       int i = 0;       while (i < n) {         printf("%c", s[i]);         ++i;       }     }     printf("\n");   }   return ret_val; }
#include <bits/stdc++.h> using namespace std;
using LL = long long;  int a[6]; string s = "ROYGBV";
int main() {   freopen("123.in", "r", stdin);   freopen("123.out", "w", stdout);   int T, cas = 0;   cin >> T;   while (T--) {     int n;     cin >> n;     for (int i = 0; i < 6; i++)       cin >> a[i];     string ans = "";     int flag = 0;     while (ans.size() < n) {       int mx = 0, c = 0;       for (int i = 0; i < 6; i++) {         if (s[i] == ans.back())           continue;         if (a[i] == mx && ans.size() && s[i] == ans[0])           mx = a[i], c = i;         if (a[i] > mx)           mx = a[i], c = i;       }       if (s[c] == ans.back() || a[c] == 0) {         flag = 1;         break;       }       ans.push_back(s[c]);       a[c]--;     }       if (ans.size() > 1 && ans[0] == ans.back())       flag = 1;     printf("Case #%d: ", ++cas);     if (flag)       puts("IMPOSSIBLE");     else       printf("%s\n", ans.c_str());   }   return 0; }
#include <bits/stdc++.h> #include <set> #include <utility> #include <vector> using namespace std;
const double eps = 1e-9; typedef long long ll; typedef pair<int, int> pii; typedef pair<int, int> PII; typedef vector<int> vi; typedef long double LD; typedef set<int> si;  using LL = long long;  int a[6]; string s = "ROYGBV";
int main() {   int ret_val = 0;   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_11_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/jiian/A-small-practice.in",           "r", stdin);   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_11_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/jiian/outer_temp/jiian/A-small-practice_transformation.out",           "w", stdout);   int T, v = 0;   cin >> T;   for (; T--;) {     int n;     cin >> n;     for (int i = 0; i < 6; i++)       cin >> a[i];     string ans = "";     int flag = 0;     while (ans.size() < n) {       int mx = 0, c = 0;       for (int i = 0; i < 6; i++) {         if (s[i] == ans.back())           continue;         if (a[i] == mx && ans.size() && s[i] == ans[0])           mx = a[i], c = i;         if (a[i] > mx)           mx = a[i], c = i;       }       if (s[c] == ans.back() || a[c] == 0) {         flag = 1;         break;       }       ans.push_back(s[c]);       a[c]--;     }       if (ans.size() > 1 && ans[0] == ans.back())       flag = 1;     printf("Case #%d: ", ++v);     if (flag)       puts("IMPOSSIBLE");     else       printf("%s\n", ans.c_str());   }   return ret_val; }
#include <bits/stdc++.h>  using namespace std;
typedef vector<int> vi; typedef long long ll; typedef long double ld; typedef pair<int, int> pii; typedef pair<pii, int> para; const int inf = 1e9 + 7; const int maxN = 1e6 + 5; const int M = 50; const int N = 50;  int t, r, o, y, g, b, v, ans[maxN], sum; set<pii, greater<pii>> s;
int main() {   ios_base::sync_with_stdio(0);   cin >> t;   for (int test = (1); test <= ((t)); ++test) {     cin >> sum >> r >> o >> y >> g >> b >> v;     s.clear();     if (r > 0)       s.insert(pii(r, 1));     if (y > 0)       s.insert(pii(y, 2));     if (b > 0)       s.insert(pii(b, 3));     int maxim = max(r, y);     maxim = max(maxim, b);     cout << "Case #" << test << ": ";       if (maxim > sum / 2) {       cout << "IMPOSSIBLE";     } else {       pii x = *s.begin();       s.erase(s.begin());       ans[0] = x.second;       s.insert(pii(x.first - 1, x.second));        int cnt = 1;       while (cnt < sum) {         pii x = *s.begin();         if (x.second == ans[cnt - 1]) {           pii tmp = x;           s.erase(s.begin());           x = *s.begin();           ans[cnt] = x.second;           s.erase(s.begin());           if (x.first > 0)             s.insert(pii(x.first - 1, x.second));           s.insert(tmp);         } else {             ans[cnt] = x.second;           s.erase(s.begin());           if (x.first > 0)             s.insert(pii(x.first - 1, x.second));         }         cnt++;       }       if (ans[sum - 1] == ans[0]) {         swap(ans[sum - 1], ans[sum - 2]);         if (ans[sum - 2] == ans[sum - 3]) {           cout << "IMPOSSIBLE";         } else {           for (int i = (0); i <= ((sum)-1); ++i) {             if (ans[i] == 1)               cout << "R";             if (ans[i] == 2)               cout << "Y";             if (ans[i] == 3)               cout << "B";           }         }       } else {         for (int i = (0); i <= ((sum)-1); ++i) {           if (ans[i] == 1)             cout << "R";           if (ans[i] == 2)             cout << "Y";           if (ans[i] == 3)             cout << "B";         }       }     }     cout << endl;   }   return 0; }
#include <bits/stdc++.h> #include <bitset> #include <cctype> #include <climits> #include <complex> #include <deque> #include <fstream> #include <iomanip> #include <iostream> #include <iterator> #include <math.h> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <unordered_map>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>    using namespace std;
typedef set<int> si; typedef vector<int> VI; typedef vector<VI> vvi; typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<string> vs;  typedef long long ll;             typedef unsigned long long ull;  typedef unsigned uint;     const char colors[] = {'R', 'O', 'Y', 'G', 'B', 'V'};  struct debugger {   template <typename T> debugger &operator,(const T &v) {     cerr << v << " ";     return *this;   } };    vector<pair<int, int>> v;
int main() {   ios::sync_with_stdio(1);    ;     int n, i, j, q, l, m, t, s = 0, d, p;   cin >> t;   ;   int c = 1;   for (; t--;) {     cin >> n;     ;     int a[1010];     int b[1010];     v.clear();     for (i = 0; i < 6; i++) {       cin >> a[i];       ;     }     d = 0;     v.push_back(make_pair(a[0], 0));     v.push_back(make_pair(a[2], 2));     v.push_back(make_pair(a[4], 4));     if (v[2].first > v[0].first + v[1].first) {       printf("Case #%d: IMPOSSIBLE\n", c++);       continue;     }     sort(v.begin(), v.end());     while (d < n) {       if (v[2].first > 0) {         a[d++] = v[2].second;         v[2].first--;          if (v[1].first > 0) {           a[d++] = v[1].second;           v[1].first--;         } else if (v[0].first > 0) {           a[d++] = v[0].second;           v[0].first--;           if (v[2].first == 0)             break;         }       } else         break;      }     s = 0;      if (v[0].first > 0) {       for (i = 0; i < d; i++) {         b[s++] = a[i];         if (v[0].first > 0 && a[i + 1] != v[0].second) {           b[s++] = v[0].second;           v[0].first--;         }            }       for (i = 0; i < s - 1; i++) {         if (b[i] == b[i + 1]) {           printf("Case #%d: IMPOSSIBLE\n", c++);           break;         }       }       if (i != s - 1)         continue;       if (b[s - 1] == b[0]) {         printf("Case #%d: IMPOSSIBLE\n", c++);         continue;       }       printf("Case #%d: ", c++);       for (i = 0; i < s; i++)         printf("%c", colors[b[i]]);        printf("\n");     } else {       if (a[d - 1] == a[0]) {         printf("Case #%d: IMPOSSIBLE\n", c++);       } else {         printf("Case #%d: ", c++);         for (i = 0; i < d; i++) {           printf("%c", colors[a[i]]);         }         printf("\n");       }     }   }   return (0); }
#include <bits/stdc++.h> #include <bitset> #include <cctype> #include <deque> #include <fstream> #include <iomanip> #include <iostream> #include <math.h> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>    using namespace std;
const int INF = 1000000000; ofstream fout;  const int MOD = 1000000007;  typedef vector<int> vi;  typedef pair<int, int> ii; typedef vector<ii> vii; typedef vector<string> vs;  typedef long long LL;            typedef unsigned long long ULL;    const double pi = acos(-1.0);   const double eps = 1e-11;      const int MAXI = 0x7fffffff; const int dx[] = {1, 0, -1, 0}; const int dy[] = {0, 1, 0, -1}; const char colors[] = {'R', 'O', 'Y', 'G', 'B', 'V'}; const char dz[] = "SENW"; struct debugger {   template <typename T> debugger &solve(const T &v) {     cerr << v << " ";     return *this;   } } dbg;    vector<pair<int, int>> v; inline void jfpzghrcdn(int a[1010], int &i, int b[1010], int &s) {   b[s++] = a[i];   if (v[0].first > 0 && a[i + 1] != v[0].second) {     b[s++] = v[0].second;     v[0].first--;   }     }  inline void gyepldsigz(int &c, int &d, int a[1010], int &i) {   fout << "Case #" << c++ << ": ";   for (i = 0; i < d; i++) {     fout << colors[a[i]];   }   fout << endl; }  inline void wpmwsmqjcj(int b[1010], int &i) { fout << colors[b[i]]; }
int main() {   ios::sync_with_stdio(false);    fout.open("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_16_Usenix_RF_1.0_True_MCTS_Classic_True/okaduki/lazyBit/outer_temp/lazyBit/A-small-practice_transformation.out");    freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_16_Usenix_RF_1.0_True_MCTS_Classic_True/okaduki/lazyBit/A-small-practice.in",           "r", stdin);   ;      int n, i, j, k, l, m, t, s = 0, d, p;   cin >> t;   ;   int c = 1;   for (; t--;) {     cin >> n;     ;     int a[1010];     int b[1010];     v.clear();     for (i = 0; i < 6; i++) {       cin >> a[i];       ;     }     d = 0;     v.push_back(make_pair(a[0], 0));     v.push_back(make_pair(a[2], 2));     v.push_back(make_pair(a[4], 4));     if (v[2].first > v[0].first + v[1].first) {       fout << "Case #" << c++ << ": IMPOSSIBLE\n";       continue;     }     sort(v.begin(), v.end());     while (d < n) {       if (v[2].first > 0) {         a[d++] = v[2].second;         v[2].first--;          if (v[1].first > 0) {           a[d++] = v[1].second;           v[1].first--;         } else if (v[0].first > 0) {           a[d++] = v[0].second;           v[0].first--;           if (v[2].first == 0)             break;         }       } else {         break;       }       }     s = 0;       if (v[0].first > 0) {       for (i = 0; i < d; i++)         jfpzghrcdn(a, i, b, s);       for (i = 0; i < s - 1; i++) {         if (b[i] == b[i + 1]) {           fout << "Case #" << c++ << ": IMPOSSIBLE\n";           break;         }       }       if (i != s - 1)         continue;       if (b[s - 1] == b[0]) {         fout << "Case #" << c++ << ": IMPOSSIBLE\n";         continue;       }       fout << "Case #" << c++ << ": ";       for (i = 0; i < s; i++)         wpmwsmqjcj(b, i);       fout << endl;     } else if (a[d - 1] == a[0]) {       fout << "Case #" << c++ << ": IMPOSSIBLE\n";     } else       gyepldsigz(c, d, a, i);   }   return (0); }
#include <algorithm> #include <bits/stdc++.h> #include <iostream> #include <map> #include <stdio.h> #include <utility> #include <vector>  using namespace std;
typedef long long ll; typedef pair<int, int> ii; typedef vector<int> vi;  map<char, int> mmm;  struct my_sort {   inline bool kzyovwgsef(_Bool &kzyov) {     kzyov = false;     return true;     return false;   }    bool operator()(const pair<int, char> &left, const pair<int, char> &right) {     if (left.first > right.first) {       return true;     } else if (left.first < right.first) {       _Bool kzyov;       if (kzyovwgsef(kzyov)) {         return kzyov;       }     } else {       return mmm[left.second] < mmm[right.second];     }   } };  int open(int cc) {   mmm.clear();   int n, r, o, y, g, b, v;   cin >> n >> r >> o >> y >> g >> b >> v;   pair<int, char> arr[3];   arr[0] = pair<int, char>(r, 'R');   arr[1] = pair<int, char>(y, 'Y');   arr[2] = pair<int, char>(b, 'B');   sort(arr, arr + 3, greater<pair<int, char>>());      for (int i = 0; i < 3; i++) {     mmm[arr[i].second] = i;   }    printf("Case #%d: ", cc);   string sol = "";   bool im = false;   char last = '-';   for (int i = 0; i < n && !im; i++) {     int mi = -1;     sort(arr, arr + 3, my_sort());     for (int j = 0; j < 3; j++) {       if (arr[j].second != last) {         mi = j;         break;       }     }     if (mi == -1 || arr[mi].first <= 0) {       im = true;       break;     }     sol += arr[mi].second;     last = arr[mi].second;     arr[mi].first--;   }   if (im || (sol[0] == sol[n - 1])) {     printf("IMPOSSIBLE\n");   } else {     printf("%s\n", sol.c_str());   }   return 1; }
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_17_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/Thanabhat/outer_temp/Thanabhat/A-small-practice_transformation.out",           "w", stdout);    freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_17_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/Thanabhat/A-small-practice.in",           "r", stdin);    int tc;   cin >> tc;   for (int i = 1; i <= tc; i++) {     open(i);   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <cassert> #include <cctype> #include <complex> #include <cstdio> #include <cstring> #include <ctime> #include <fstream> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <queue> #include <stdio.h> #include <stdlib.h> #include <unordered_map>  using namespace std;
ofstream fout;  const long double PI = 3.1415926535897932384626433832795; const int INF = 1000000000; const double EPS = 1e-9;  map<char, int> mmm;  struct my_sort {   bool operator()(const pair<int, char> &left, const pair<int, char> &right) {     if (left.first > right.first) {       return true;     } else {       if (left.first < right.first) {         return false;       } else         return mmm[left.second] < mmm[right.second];     }   } };  inline void ydwtwsxjxc() { fout << "IMPOSSIBLE" << endl; }  int solve(int T) {   int ret_val = 1;   mmm.clear();   int n, r, o, y, g, b, v;   cin >> n >> r >> o >> y >> g >> b >> v;   pair<int, char> arr[3];   arr[0] = pair<int, char>(r, 'R');   arr[1] = pair<int, char>(y, 'Y');   arr[2] = pair<int, char>(b, 'B');   sort(arr, arr + 3, greater<pair<int, char>>());   for (int i = 0; i < 3; i++) {     mmm[arr[i].second] = i;   }   fout << "Case #" << T << ": ";   string sol = "";   bool im = 0;   char last = '-';   for (int i = 0; i < n && !im; i++) {     int get = -1;     sort(arr, arr + 3, my_sort());     int j;     for (j = 0; j < 3; j++) {       if (arr[j].second != last) {         get = j;         break;       }     }     if (get == -1 || arr[get].first <= 0) {       im = true;       break;     }     sol += arr[get].second;     last = arr[get].second;     arr[get].first--;   }   if (im || (sol[0] == sol[n - 1]))     ydwtwsxjxc();   else     fout << sol << endl;    return ret_val; }
int main() {   fout.open("/home/seal12/Downloads/ramdisk/blackbox_8294486_5654117850546176_17_Usenix_RF_1.0_True_MCTS_Classic_True/okaduki/Thanabhat/outer_temp/Thanabhat/A-small-practice_transformation.out");    ios::sync_with_stdio(false);    int t;   cin >> t;   for (int i = 1; i <= t; i++)     solve(i);    return 0; }
#include <algorithm> #include <cassert> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <string> #include <unordered_map> #include <utility> #include <vector>  using namespace std;
const double EPS = 1e-9; const int MAXN = 1005;  map<char, int> mmm;  struct my_sort {   inline bool adbpzeugvz(_Bool &adbpz) {     adbpz = false;     return true;     return false;   }    inline bool yrihhbmjvk(_Bool &adbpz, _Bool &yrihh) {     yrihh = adbpz;     return true;     return false;   }    bool operator()(const pair<int, char> &left, const pair<int, char> &right) {     if (left.first > right.first) {       return true;     } else if (left.first < right.first) {       _Bool adbpz;       if (adbpzeugvz(adbpz)) {         _Bool yrihh;         if (yrihhbmjvk(adbpz, yrihh)) {           return yrihh;         }       }     } else {       return mmm[left.second] < mmm[right.second];     }   } };  int solve(int T) {   int ret_val = 1;   mmm.clear();   int n, r, o, y, g, b, v;   cin >> n >> r >> o >> y >> g >> b >> v;   pair<int, char> arr[3];   arr[0] = pair<int, char>(r, 'R');   arr[1] = pair<int, char>(y, 'Y');   arr[2] = pair<int, char>(b, 'B');   sort(arr, arr + 3, greater<pair<int, char>>());   {     int get = 0;     while (get < 3) {       mmm[arr[get].second] = get;       get++;     }   }   printf("Case #%d: ", T);   string x = "";   int im = 0;   char last = '-';   int get;   for (get = 0; get < n && !im; get++) {     int mi = -1;     sort(arr, arr + 3, my_sort());     int j;     for (j = 0; j < 3; j++) {       if (arr[j].second != last) {         mi = j;         break;       }     }     if (mi == -1 || arr[mi].first <= 0) {       im = 1;       break;     }     x += arr[mi].second;     last = arr[mi].second;     arr[mi].first--;   }   if (im || (x[0] == x[n - 1])) {     printf("IMPOSSIBLE\n");   } else {     printf("%s\n", x.c_str());   }   return ret_val; }
int main() {   int t;   cin >> t;   int get;   for (get = 1; get <= t; get++)     solve(get);    return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector>  using namespace std;
pair<int, int> a[3]; int z[1010];  inline void ymzunbtpgm(int &n) {   int i = 0;   for (; i < n;) {     if (z[i] == 0) {       putchar('R');     } else if (z[i] == 1) {       putchar('Y');     } else {       putchar('B');     }     ++i;   } }
int main() {   ios::sync_with_stdio(false);    int tt;   cin >> tt;   for (int get = 1; get <= tt; ++get) {     double t = clock();     printf("Case #%d: ", get);     int n, R, O, Y, G, B, V;     cin >> n >> R >> O >> Y >> G >> B >> V;     a[0] = {R, 0};     a[1] = {Y, 1};     a[2] = {B, 2};     sort(a, a + 3);     memset(z, -1, sizeof z);     int i;     for (i = 2; i >= 0; --i) {       while (a[i].first > 0) {         int pos = -1;         for (int j = 0; j < n; j += 2) {           if (z[j] == -1) {             pos = j;             break;           }         }         if (pos != -1) {           z[pos] = a[i].second;           --a[i].first;           continue;         }         for (int j = 1; j < n; j += 2) {           if (z[j] == -1) {             pos = j;             break;           }         }         z[pos] = a[i].second;         --a[i].first;       }     }     bool can = true;     for (int i = 0; i < n; ++i) {       if (z[i] == z[(i + 1) % n]) {         can = false;       }     }     if (!can) {       puts("IMPOSSIBLE");     } else {       ymzunbtpgm(n);       putchar('\n');     }     fprintf(stderr, "case %d solved in %.3f\n", get,             (clock() - t) / CLOCKS_PER_SEC);   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> using namespace std;
const int INF = 1000000000; ifstream d;  int tc;
int main() {   ios::sync_with_stdio(false);    d.open("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_1_Usenix_RF_1.0_True_MCTS_Classic_True/kuzphi/4yn/A-small-practice.in");    d >> tc;   for (int t = 1; t <= tc; t++) {     int n, q;     d >> n >> q;     int e[109], s[109];     for (int i = 1; i <= n; i++) {       d >> e[i] >> s[i];     }     int adj[109][109];     for (int i = 1; i <= n; i++) {       for (int j = 1; j <= n; j++) {         d >> adj[i][j];       }     }     int dist[109];       {       int i = 1;       while (i < n) {         dist[i] = adj[i][i + 1];         i++;       }     }     printf("Case #%d: ", t);     {       int nq = 0;       for (; nq < q;) {         int u, v;         d >> u >> v;         double time_taken[109];         for (int i = 1; i <= n; i++)           time_taken[i] = -1;          time_taken[1] = 0;         for (int i = 1; i < n; i++) {                int dist_left = e[i];           int speed = s[i];           double cur_time = time_taken[i];           for (int j = i + 1; j <= n; j++) {               dist_left -= dist[j - 1];             if (dist_left < 0)               break;             cur_time += (dist[j - 1] + 0.0) / s[i];               if (time_taken[j] < 0) {               time_taken[j] = cur_time;             } else               time_taken[j] = min(time_taken[j], cur_time);           }         }         printf("%.7f\n", time_taken[v]);         nq++;       }     }   }   return 0; }
#include <bits/stdc++.h> #include <stdio.h> using namespace std;
using VI = vector<int>; using VVI = vector<VI>; using PII = pair<int, int>; using LL = long long; using VL = vector<LL>; using VVL = vector<VL>; using PLL = pair<LL, LL>; using VS = vector<string>; template <class S, class T> istream &operator>>(istream &is, pair<S, T> &p) {   return is >> p.first >> p.second; } template <class S, class T> ostream &operator<<(ostream &os, const pair<S, T> &p) {   return os << p.first << " " << p.second; }  template <class T> void mini(T &x, T y) {   if (x > y)     x = y; }  const double INF = 1e15;
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_9_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/okaduki/A-small-practice.in",           "r", stdin);    freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_9_Usenix_RF_1.0_True_MCTS_Classic_True/fragusbot/okaduki/outer_temp/okaduki/A-small-practice_transformation.out",           "w", stdout);    int ret_val = 0;   cin.tie(0);    int tt;   scanf("%d ", &tt);   for (int t_ = (1); t_ < (tt + 1); ++t_) {     int cc, Q;     scanf("%d %d ", &cc, &Q);     vector<PLL> es(cc);     for (int i = (0); i < (cc); ++i)       cin >> es[i];      VVL dist(cc, VL(cc));     for (int i = (0); i < (cc); ++i) {       for (int j = (0); j < (cc); ++j)         cin >> dist[i][j];     }      while (Q--) {       int U, V;       scanf("%d %d ", &U, &V);       --U;       --V;        vector<LL> acc(cc);       for (int i = cc - 2; i >= 0; --i)         acc[i] = dist[i][i + 1] + acc[i + 1];        vector<double> dp(cc + 1, INF);       dp[cc - 1] = 0;       int i;       for (i = cc - 2; i >= 0; --i) {         for (int j = i + 1; j < cc; ++j) {           if (acc[i] - acc[j] > es[i].first)             break;           mini(dp[i], dp[j] + (acc[i] - acc[j]) * 1. / es[i].second);         }       }       double ans = dp[0];       printf("Case #%d: %.9f\n", t_, ans);     }   }   return ret_val; }
#include <bits/stdc++.h> #include <fstream> using namespace std;
ifstream fin;  ofstream fout;  using VI = vector<int>; using VVI = vector<VI>; using PII = pair<int, int>; using LL = long long; using VL = vector<LL>; using VVL = vector<VL>; using PLL = pair<LL, LL>; using VS = vector<string>; template <class S, class T> istream &operator>>(istream &m, pair<S, T> &p) {   return m >> p.first >> p.second; }  template <class T> void do_voicuv_fct(T &x, T t) {   if (x > t) {     x = t;   } }  const double INF = 1e15;
int main() {   fin.open("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_8_Usenix_RF_1.0_True_MCTS_Classic_True/4yn/okaduki/A-small-practice.in");    fout.open("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_8_Usenix_RF_1.0_True_MCTS_Classic_True/4yn/okaduki/outer_temp/okaduki/A-small-practice_transformation.out");    int ret_val = 0;   cin.tie(0);    int n;   fin >> n;   for (int t_ = (1); t_ < (n + 1); ++t_) {     int N, Q;     fin >> N >> Q;     vector<PLL> es(N);     for (int i = (0); i < (N); ++i)       fin >> es[i];      VVL dist(N, VL(N));     for (int i = (0); i < (N); ++i)       for (int j = (0); j < (N); ++j) {         fin >> dist[i][j];       }      for (; Q--;) {       int U, V;       fin >> U >> V;       --U;       --V;        vector<LL> acc(N);       for (int i = N - 2; i >= 0; --i)         acc[i] = dist[i][i + 1] + acc[i + 1];        vector<double> dp(N + 1, INF);       dp[N - 1] = 0;       int i;       for (i = N - 2; i >= 0; --i) {         for (int j = i + 1; j < N; ++j) {           if (acc[i] - acc[j] > es[i].first)             break;           do_voicuv_fct(dp[i], dp[j] + (acc[i] - acc[j]) * 1. / es[i].second);         }       }       double ans = dp[0];       fout << "Case #" << t_ << ": " << fixed << setprecision(9) << ans << endl;     }   }   return ret_val; }
#include <algorithm> #include <bitset> #include <climits> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <iostream> #include <limits> #include <list> #include <map> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stack> #include <string> #include <unordered_map> #include <vector> using namespace std;
const double pi = acos(-1.), eps = 1e-6; const int Maxn = 110, Maxk = 5010, Mo = 1e9 + 7, oo = 2e9 + 1; const int sp[4][2] = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}}; int T;    int n, m, k, cs; struct Rec {   int a, b, l; };   int N, Q; int num[10], ans[Maxn]; long long d[Maxn][Maxn]; int S[Maxn], E[Maxn]; double t[Maxn][Maxn]; vector<int> w[1010];
int main() {   cin >> T;   while (T--) {     printf("Case #%d: ", ++cs);     cin >> n >> Q;     for (int i = 1; i <= n; i++)       cin >> E[i] >> S[i];     for (int i = 1; i <= n; i++)       for (int j = 1; j <= n; j++) {         cin >> d[i][j];         if (d[i][j] == -1)           d[i][j] = oo;       }     for (int i = 1; i <= n; i++)       d[i][i] = 0;      for (int k = 1; k <= n; k++)       for (int i = 1; i <= n; i++)         for (int j = 1; j <= n; j++)           d[i][j] = min(d[i][j], d[i][k] + d[k][j]);        for (int i = 1; i <= n; i++)       for (int j = 1; j <= n; j++) {         if (d[i][j] > E[i])           t[i][j] = 1e100;         else           t[i][j] = 1. * d[i][j] / S[i];       }     for (int k = 1; k <= n; k++)       for (int i = 1; i <= n; i++)         for (int j = 1; j <= n; j++)           t[i][j] = min(t[i][j], t[i][k] + t[k][j]);     for (int i = 1; i <= Q; i++) {       int u, v;       cin >> u >> v;       printf("%.7f", t[u][v]);       if (i < Q)         cout << " ";     }     cout << endl;   }   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <climits> #include <cmath> #include <cstdio> #include <cstring> #include <fstream> #include <iomanip> #include <iostream> #include <iterator> #include <map> #include <queue> #include <set> #include <stack> #include <string> #include <unordered_map> #include <utility> #include <vector>    using namespace std;
typedef double dbl;  ofstream fout;  using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  ll gcd(ll a, ll b) {   ll t;   for (; (t = a % b) != 0;) {     a = b;     b = t;   }   return b; }  ll do_llqsz_fct(ll tc, ll n, ll m) {   if (n == 0)     return 1;   ll t = do_llqsz_fct(tc, n / 2, m);   if (n % 2 == 0)     return (t * t) % m;   else     return (((t * t) % m) * tc) % m; }  bool is_set(int i, ll invl_Var) { return (invl_Var >> i) & 1; }  int do_intrro_fct(ll invl_Var) {   int nkai_Var = 0;   int i;   for (i = 0; i < 64; ++i)     if (is_set(i, invl_Var))       ++nkai_Var;   return nkai_Var; }  int first_bit(ll invl_Var) {   int ret_val = -1;   int i = 0;   while (i < 64)     if (is_set(i++, invl_Var))       return i - 1;   return ret_val; }
int main() {   fout.open("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_10_Usenix_RF_1.0_True_MCTS_Classic_True/4yn/ibrahim5253/outer_temp/ibrahim5253/A-small-practice_transformation.out");    int ret_val = 0;    int t;   cin >> t;   for (int i = 1; i <= t; ++i) {     int n, q;     cin >> n >> q;     ll e[n], qckl_Var[n];     for (int i = 0; i < n; ++i)       cin >> e[i] >> qckl_Var[i];     ll d[n][n];     for (int i = 0; i < n; ++i)       for (int axwi_Var = 0; axwi_Var < n; ++axwi_Var)         cin >> d[i][axwi_Var];     {       int u, mgni_Var;       cin >> u >> mgni_Var;       --u, --mgni_Var;       double dp[n];       dp[0] = 0;       for (int i = 1; i < n; ++i) {         dp[i] = 1e12;         ll dist = 0;         for (int axwi_Var = i - 1; axwi_Var >= 0; --axwi_Var) {           dist += d[axwi_Var][axwi_Var + 1];           if (e[axwi_Var] > dist)             dp[i] = min(dp[i], dp[axwi_Var] + dist / static_cast<double>(                                                          qckl_Var[axwi_Var]));         }       }       fout << "Case #" << i << ": " << fixed << setprecision(10) << dp[mgni_Var]            << "\n";     }   }   return ret_val; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <deque> #include <fstream> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector>    using namespace std;
typedef pair<int, int> ii; typedef pair<int, int> PII; typedef set<int> si; typedef long double ld; typedef long long LL; typedef vector<int> VI; typedef long double LD;  using ll = long long; using ull = unsigned long long; using pii = pair<int, int>; using pll = pair<ll, ll>; using vi = vector<int>; using vll = vector<ll>; using pill = pair<int, ll>; using vvi = vector<vi>;  ll gcd(ll a, ll b) {   ll t;   while ((t = a % b) != 0) {     a = b;     b = t;   }   return b; }  ll fast_exp(ll base, ll n, ll p) {   if (n == 0)     return 1;   ll t = fast_exp(base, n / 2, p);   if (n % 2 == 0)     return (t * t) % p;   else     return (((t * t) % p) * base) % p; }  bool is_set(int i, ll mask) { return (mask >> i) & 1; }  int count_bits(ll mask) {   int ans = 0;   for (int i = 0; i < 64; ++i)     if (is_set(i, mask))       ++ans;   return ans; }  int first_bit(ll mask) {   int i = 0;   while (i < 64)     if (is_set(i++, mask))       return i - 1;   return -1; }
int main() {   int ret_val = 0;   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_10_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/ibrahim5253/outer_temp/ibrahim5253/A-small-practice_transformation.out",           "w", stdout);   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_10_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/ibrahim5253/A-small-practice.in",           "r", stdin);   int t;   scanf("%d ", &t);   for (int i = 1; i <= t; ++i) {     int n, q;     scanf("%d %d ", &n, &q);     ll e[n], s[n];     for (int i = 0; i < n; ++i)       scanf("%lld %lld ", &e[i], &s[i]);     ll d[n][n];     for (int i = 0; i < n; ++i)       for (int j = 0; j < n; ++j)         scanf("%lld ", &d[i][j]);     {       int u, v;       scanf("%d %d ", &u, &v);       --u, --v;       double dp[n];       dp[0] = 0;       for (int i = 1; i < n; ++i) {         dp[i] = 1e12;         ll dist = 0;         for (int j = i - 1; j >= 0; --j) {           dist += d[j][j + 1];           if (e[j] > dist)             dp[i] = min(dp[i], dp[j] + dist / static_cast<double>(s[j]));         }       }       printf("Case #%d: %.10f\n", i, dp[v]);     }   }   return ret_val; }
#include <algorithm> #include <cstdio> #include <cstring> #include <iomanip> #include <iostream> #include <stdio.h> using namespace std;
const int mod = 1000000007; const double EPS = 1e-9; const double eps = 1e-9; const int INF = 1000000000; const int MAXN = 1005;  int N, Q, U, V; int e[200]; double s[200]; int d[200][200]; int go[200];  double ans[200];
int main(void) {   int ret_val = 0;   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_12_Usenix_RF_1.0_True_MCTS_Classic_True/try/iPeter/outer_temp/iPeter/A-small-practice_transformation.out",           "w", stdout);   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_12_Usenix_RF_1.0_True_MCTS_Classic_True/try/iPeter/A-small-practice.in",           "r", stdin);   int t;   scanf("%d", &t);   for (int tt = 1; tt <= t; tt++) {     scanf("%d%d", &N, &Q);     for (int i = 0; i < N; ++i)       scanf("%d%lf", &e[i], &s[i]);     for (int i = 0; i < N; ++i)       for (int j = 0; j < N; ++j)         scanf("%d", &d[i][j]);      for (int get = 0; get < N; ++get)       for (int i = 0; i < N; ++i)         for (int j = 0; j < N; ++j) {           if (i == j || d[i][get] < 0 || d[get][j] < 0)             continue;           if (d[i][j] < 0 || d[i][j] >= d[i][get] + d[get][j])             d[i][j] = d[i][get] + d[get][j];         }      printf("Case #%d:", tt);      for (; Q--;) {       scanf("%d%d", &U, &V);       --U, --V;       {         int i = 0;         while (i < N) {           ans[i] = -1;           go[i] = false;           ++i;         }       }       ans[U] = 0;          int cur = U;       while (1) {         go[cur] = 1;         {           int i = 0;           while (i < N) {             if (d[cur][i] > e[cur] || d[cur][i] < 0) {               ++i;               continue;             }             if (ans[i] < 0 || ans[i] > ans[cur] + d[cur][i] / s[cur])               ans[i] = ans[cur] + d[cur][i] / s[cur];             ++i;           }         }          double mind = -1;         for (int i = 0; i < N; ++i) {           if (go[i] || ans[i] < 0)             continue;           if (mind > ans[i]) {             cur = i;             mind = ans[i];           } else if (mind < 0) {             cur = i;             mind = ans[i];           }         }          if (mind < 0)           break;       }        printf(" %lf", ans[V]);     }      puts("");   }   return ret_val; }
#include <algorithm> #include <cstdio> #include <cstring> #include <iostream> using namespace std;
int N, Q, U, V; int e[200]; double s[200]; int d[200][200]; int go[200];  double ans[200];
int main(void) {   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_12_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/iPeter/outer_temp/iPeter/A-small-practice_transformation.out",           "w", stdout);    int t;   cin >> t;   for (int tt = 1; tt <= t; tt++) {     cin >> N >> Q;     for (int i = 0; i < N; ++i)       cin >> e[i] >> s[i];     for (int i = 0; i < N; ++i)       for (int j = 0; j < N; ++j)         cin >> d[i][j];      for (int k = 0; k < N; ++k)       for (int i = 0; i < N; ++i)         for (int j = 0; j < N; ++j) {           if (i == j || d[i][k] < 0 || d[k][j] < 0)             continue;           if (d[i][j] < 0 || d[i][j] >= d[i][k] + d[k][j]) {             d[i][j] = d[i][k] + d[k][j];           }         }      printf("Case #%d:", tt);      for (; Q--;) {       cin >> U >> V;       --U, --V;       for (int i = 0; i < N; ++i) {         ans[i] = -1;         go[i] = false;       }       ans[U] = 0;          int cur = U;       while (true) {         go[cur] = true;         for (int i = 0; i < N; ++i) {           if (d[cur][i] > e[cur] || d[cur][i] < 0)             continue;           if (ans[i] < 0 || ans[i] > ans[cur] + d[cur][i] / s[cur])             ans[i] = ans[cur] + d[cur][i] / s[cur];         }          double mind = -1;         for (int i = 0; i < N; ++i) {           if (go[i] || ans[i] < 0)             continue;           if (mind < 0 || mind > ans[i]) {             cur = i;             mind = ans[i];           }         }          if (mind < 0)           break;       }        printf(" %lf", ans[V]);     }      puts("");   }   return 0; }
#include <bits/stdc++.h>  using namespace std;
typedef long long ll; typedef pair<int, int> ii; typedef pair<int, ii> iii;  ll pwr(ll base, ll p, ll mod = (1000000007LL)) {   ll ans = 1;   while (p) {     if (p & 1)       ans = (ans * base) % mod;     base = (base * base) % mod;     p /= 2;   }   return ans; }  ll gcd(ll a, ll b) {   if (b == 0)     return a;   return gcd(b, a % b); }  const int N = 102; int n, q; double endurance[N], speed[N], adj[N][N], dist[N][N];  typedef pair<double, int> pdi; void dijkstra(int src) {   for (int i = 1; i <= n; i++)     dist[src][i] = 1e15;   priority_queue<pdi> pq;   dist[src][src] = 0;   pq.push(pdi(0, src));   while (!pq.empty()) {      int v = pq.top().second;     double d = -pq.top().first;     pq.pop();     if (d > dist[src][v])       continue;      for (int vv = 1; vv <= n; vv++) {       if (adj[v][vv] > endurance[v])         continue;       double dd = d + adj[v][vv] / speed[v];       if (dd < dist[src][vv]) {         dist[src][vv] = dd;         pq.push(pdi(-dd, vv));       }     }   } }
int main() {    ios_base::sync_with_stdio(0);   cin.tie(0);    freopen("C-small-attempt0.in", "r", stdin);   freopen("output.txt", "w", stdout);    int t, x = 1;   cin >> t;   while (t--) {      cin >> n >> q;     for (int i = 1; i <= n; i++)       cin >> endurance[i] >> speed[i];      for (int i = 1; i <= n; i++) {       for (int j = 1; j <= n; j++) {         cin >> adj[i][j];         if (adj[i][j] == -1)           adj[i][j] = 1e15;       }     }      for (int k = 1; k <= n; k++)       for (int i = 1; i <= n; i++)         for (int j = 1; j <= n; j++)           adj[i][j] = min(adj[i][j], adj[i][k] + adj[k][j]);      for (int i = 1; i <= n; i++)       dijkstra(i);      cout << "Case #" << x++ << ":";     while (q--) {       int a, b;       cin >> a >> b;       cout << fixed << setprecision(7) << " " << dist[a][b];     }     cout << endl;   }    return 0; }
#include <bits/stdc++.h> #include <fstream> #include <vector>  using namespace std;
typedef unsigned long long ull; typedef vector<int> VI; typedef long double LD; typedef vector<vector<int>> vvi;  ifstream fin;  long long solve(long long a, long long b) {   if (b == 0)     return a;   return solve(b, a % b); }  const int N = 102; int n, q; double endurance[N], speed[N], adj[N][N], dist[N][N];  inline void nhsbdbujcf(int &src, priority_queue<pair<double, int>> &pq,                        double &dd, int &vv) {   dist[src][vv] = dd;   pq.push(pair<double, int>(-dd, vv)); }  void dijkstra(int src) {   for (int i = 1; i <= n; i++)     dist[src][i] = 1e15;   priority_queue<pair<double, int>> pq;   dist[src][src] = 0;   pq.push(pair<double, int>(0, src));   while (!pq.empty()) {      int v = pq.top().second;     double d = -pq.top().first;     pq.pop();     if (d > dist[src][v])       continue;      for (int vv = 1; vv <= n; vv++) {       if (adj[v][vv] > endurance[v])         continue;       double dd = d + adj[v][vv] / speed[v];       if (dd < dist[src][vv])         nhsbdbujcf(src, pq, dd, vv);     }   } }  inline void jvubjeotno() {   int a, b;   fin >> a >> b;   cout << fixed << setprecision(7) << " " << dist[a][b]; }
int main() {   fin.open("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_13_Usenix_RF_1.0_True_MCTS_Classic_True/sammyMaX/satyaki3794/A-small-practice.in");    int ret_val = 0;    cin.tie(0);    int t, x = 1;   fin >> t;   while (t--) {      fin >> n >> q;     for (int i = 1; i <= n; i++)       fin >> endurance[i] >> speed[i];      for (int i = 1; i <= n; i++) {       for (int j = 1; j <= n; j++) {         fin >> adj[i][j];         if (adj[i][j] == -1)           adj[i][j] = 1e15;       }     }      for (int k = 1; k <= n; k++)       for (int i = 1; i <= n; i++)         for (int j = 1; j <= n; j++)           adj[i][j] = min(adj[i][j], adj[i][k] + adj[k][j]);      for (int i = 1; i <= n; i++)       dijkstra(i);      cout << "Case #" << x++ << ":";     while (q--)       jvubjeotno();     cout << endl;   }   return ret_val; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cstdio> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <queue> #include <set> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <string> #include <utility> #include <vector>  using namespace std;
long long gcd(long long a, long long b) {   if (b == 0)     return a;   return gcd(b, a % b); }  const int N = 102; int n, q; double endurance[N], speed[N], adj[N][N], dist[N][N];  void dijkstra(int src) {   for (int i = 1; i <= n; i++)     dist[src][i] = 1e15;   priority_queue<pair<double, int>> pq;   dist[src][src] = 0;   pq.push(pair<double, int>(0, src));   while (!pq.empty()) {      int v = pq.top().second;     double d = -pq.top().first;     pq.pop();     if (d > dist[src][v])       continue;      for (int vv = 1; vv <= n; vv++) {       if (adj[v][vv] > endurance[v])         continue;       double dd = d + adj[v][vv] / speed[v];       if (dd < dist[src][vv]) {         dist[src][vv] = dd;         pq.push(pair<double, int>(-dd, vv));       }     }   } }  inline void bkbsvawzxu() {   int a, b;   cin >> a >> b;   printf(" %.7f", dist[a][b]); }
int main() {    cin.tie(0);    freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_13_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/satyaki3794/A-small-practice.in",           "r", stdin);   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_13_Usenix_RF_1.0_True_MCTS_Classic_True/Tashi711/satyaki3794/outer_temp/satyaki3794/A-small-practice_transformation.out",           "w", stdout);    int t, x = 1;   cin >> t;   while (t--) {      cin >> n >> q;     for (int i = 1; i <= n; i++)       cin >> endurance[i] >> speed[i];      for (int i = 1; i <= n; i++) {       for (int j = 1; j <= n; j++) {         cin >> adj[i][j];         if (adj[i][j] == -1)           adj[i][j] = 1e15;       }     }      for (int k = 1; k <= n; k++)       for (int i = 1; i <= n; i++)         for (int j = 1; j <= n; j++)           adj[i][j] = min(adj[i][j], adj[i][k] + adj[k][j]);      for (int i = 1; i <= n; i++)       dijkstra(i);      printf("Case #%d:", x++);     while (q--)       bkbsvawzxu();     printf("\n");   }    return 0; }
#include <bits/stdc++.h> using namespace std;
bool comp(pair<int, char> &l, pair<int, char> &r) { return l.first < r.first; }
int main(int argc, char **argv) {   ifstream fin("/home/roman/CodeliteProjects/Competitive/GCJ17_R1B/in.txt");   ofstream fout("/home/roman/CodeliteProjects/Competitive/GCJ17_R1B/out.txt");    int t;   fin >> t;   for (int testcase = 0; testcase < t; ++testcase) {     int n, q, u, v;     fin >> n >> q;     assert(q == 1);     vector<long long int> e(n), s(n);     for (int i = 0; i < n; ++i) {       fin >> e[i] >> s[i];     }     vector<vector<long long int>> d(n, vector<long long int>(n));     for (int i = 0; i < n; ++i) {       for (int j = 0; j < n; ++j) {         fin >> d[i][j];       }     }     fin >> u >> v;      vector<vector<long long int>> dist(n, vector<long long int>(n, -1));     for (int from = 0; from < n; ++from) {       dist[from][from] = 0;       for (int to = from + 1; to < n; ++to) {         dist[from][to] = dist[from][to - 1] + d[to - 1][to];               }     }      vector<double> dp(n, 1e18);     dp[0] = 0;     for (int to = 1; to < n; ++to) {       for (int from = 0; from < to; ++from) {         if (dist[from][to] <= e[from]) {           dp[to] = min(dp[to], dp[from] + 1.0 * dist[from][to] / s[from]);         }       }     }      fout << "Case #" << testcase + 1 << ": " << fixed << setprecision(7)          << dp[n - 1] << endl;   }    fin.close();   fout.close();   return 0; }
#include <algorithm> #include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <math.h> #include <numeric> #include <queue> #include <set> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <unordered_map> #include <utility> #include <vector>  using namespace std;
const int mod = 1000000007; const double eps = 1e-9; const int INF = 1000000000;  typedef pair<int, int> PII; typedef unsigned long long ull; typedef set<int> si; typedef long long LL;  typedef pair<LL, LL> pii;  const LL inf = 1e16 + 7; const LL maxN = 1e3 + 5;  int n, q, u, v, t; int horse[maxN], dist[maxN][maxN], speed[maxN]; LL pref[maxN]; long double dp[maxN];  inline void czdagdprtn(LL &i, LL &get) { cin >> dist[i][get]; }  inline void cgitffatoe(LL &i) {   for (LL get = (1); get <= ((n)); ++get) {     czdagdprtn(i, get);   } }
int main() {    cin >> t;   for (LL x = (1); x <= ((t)); ++x) {     cin >> n >> q;     LL i;     for (i = (1); i <= ((n)); ++i)       cin >> horse[i] >> speed[i];     for (LL i = (1); i <= ((n)); ++i)       cgitffatoe(i);     pref[1] = 0;     for (LL i = (2); i <= (n); ++i) {       pref[i] = pref[i - 1] + dist[i - 1][i];     }     cout << "Case #" << x << ": ";     for (LL _ = (0); _ <= ((q)-1); ++_) {       cin >> u >> v;       for (LL i = (1); i <= ((n)); ++i)         dp[i] = (long double)inf;       dp[1] = 0;       for (LL i = (1); i <= ((n)); ++i) {         for (LL get = (i + 1); get <= (n); ++get) {             if (pref[get] - pref[i] > horse[i])             break;           dp[get] = min(dp[get],                         dp[i] + (pref[get] - pref[i]) / (long double)speed[i]);         }       }       cout << fixed << setprecision(9) << dp[n];     }     cout << endl;   }   return 0; }
#include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstring> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <map> #include <numeric> #include <set> #include <sstream> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector>  using namespace std;
const int MOD = 1000000007; const int INF = 1000000000; ofstream fout;  typedef vector<int> vi; typedef long long ll; typedef long double ld; typedef pair<ll, ll> pii;  const ll inf = 1e16 + 7; const ll maxN = 1e3 + 5;  int n, q, u, v, t; int horse[maxN], dist[maxN][maxN], speed[maxN]; ll pref[maxN]; ld dp[maxN];  inline void zvvhmusrrt(ll &N) { dp[N] = (ld)inf; }  inline void plqxbfsuas(ll &N) {   for (ll p = (1); p <= ((n)); ++p)     cin >> dist[N][p]; }
int main() {   fout.open("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_15_Usenix_RF_1.0_True_MCTS_Classic_True/bennikartefla/Mucosolvan/outer_temp/Mucosolvan/A-small-practice_transformation.out");    ios_base::sync_with_stdio(0);   cin >> t;   for (ll x = (1); x <= ((t)); ++x) {     cin >> n >> q;     ll N;     for (N = (1); N <= ((n)); ++N) {       cin >> horse[N] >> speed[N];     }     for (ll N = (1); N <= ((n)); ++N)       plqxbfsuas(N);     pref[1] = 0;     for (ll N = (2); N <= (n); ++N)       pref[N] = pref[N - 1] + dist[N - 1][N];      fout << "Case #" << x << ": ";     for (ll _ = (0); _ <= ((q)-1); ++_) {       cin >> u >> v;       for (ll N = (1); N <= ((n)); ++N)         zvvhmusrrt(N);       dp[1] = 0;       {         ll N = (1);         while (N <= ((n))) {           for (ll p = (N + 1); p <= (n); ++p) {               if (pref[p] - pref[N] > horse[N])               break;             dp[p] = min(dp[p], dp[N] + (pref[p] - pref[N]) / (ld)speed[N]);           }           ++N;         }       }       fout << fixed << setprecision(9) << dp[n];     }     fout << endl;   }   return 0; }
#include <bits/stdc++.h> #include <bitset> #include <cctype> #include <climits> #include <deque> #include <fstream> #include <iomanip> #include <iostream> #include <iterator> #include <math.h> #include <queue> #include <set> #include <sstream> #include <stack> #include <stdio.h> #include <stdlib.h>  #include <cassert> #include <cmath> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <string>  #include <algorithm> #include <functional> #include <list> #include <map> #include <numeric> #include <utility> #include <vector>    using namespace std;
const int MOD = 1000000007;  typedef long long td_ll; typedef long double LD; typedef set<int> si; typedef vector<int> vi; typedef vector<vi> vvi; typedef pair<int, int> pii; typedef vector<pii> vii; typedef vector<string> vs;  typedef long long ll;            typedef unsigned long long ULL;    const double pi = acos(-1.0);  const double eps = 1e-11;       const int MAXI = 0x7fffffff; const int dx[] = {1, 0, -1, 0}; const int dy[] = {0, 1, 0, -1}; const char colors[] = {'R', 'O', 'Y', 'G', 'B', 'V'}; const char dz[] = "SENW"; struct debugger {   template <typename T> debugger &operator,(const T &v) {     cerr << v << " ";     return *this;   } } dbg;  double besttime[1010]; ll c[110], d[110], dist[110][110], a[110], b[110], dd[110]; long double best[110][110]; inline void btcleiwsdi(int &i, int &j) {   best[i][j] = besttime[j] + ((dd[i] - dd[j]) * 1.0) / d[j]; }
int main() {   ios::sync_with_stdio(true);    ;      td_ll n, k, l, m, t, s = 0, p, q;   int i, j;   cin >> t;   int ct = 1;   for (; t--;) {     cin >> n;     ;     cin >> q;     ;     for (i = 0; i < n; i++) {       cin >> c[i];       ;       cin >> d[i];       ;     }     for (i = 0; i < n; i++) {       for (j = 0; j < n; j++) {         cin >> dist[i][j];         ;       }     }     for (i = 0; i < q; i++) {       cin >> a[i];       ;       cin >> b[i];       ;     }     dd[0] = 0;     for (i = 1; i < n; i++) {       dd[i] = dd[i - 1] + dist[i - 1][i];     }     besttime[0] = 0.0;     LD r;     {       i = 1;       while (i < n) {         r = 1e18;         for (j = 0; j < i; j++) {           if (dd[i] - dd[j] <= c[j])             btcleiwsdi(i, j);           else             best[i][j] = 1e18;            r = min(r, best[i][j]);         }         besttime[i] = r;         i++;       }     }        printf("Case #%d: %0.6lf\n", ct++, besttime[n - 1]);   }   return (0); }
#include <bits/stdc++.h> #include <iostream> #include <stdio.h> #include <vector>  using namespace std;
typedef long long ll; typedef vector<int> vi;  inline void tjpdviaymp(long long &temp) { scanf("%lld ", &temp); }  int solve(int cc) {   ll n, q, e[105], s[105], d[105], temp;   scanf("%lld %lld ", &n, &q);   for (int i = 0; i < n; i++) {     scanf("%lld %lld ", &e[i], &s[i]);   }   for (int i = 0; i < n; i++) {     for (int j = 0; j < n; j++) {       if (j == i + 1) {         scanf("%lld ", &d[i]);       } else         tjpdviaymp(temp);     }   }   scanf("%lld %lld ", &temp, &temp);       long double dp[105];   for (int i = 0; i < n; i++) {     dp[i] = 1e11;   }   dp[n - 1] = 0;   for (int i = n - 2; i >= 0; i--) {     long double sss = 0;     ll ee = e[i];     long double tt = 0;     for (int j = i; j < n - 1; j++) {       ee -= d[j];       if (ee < 0) {         break;       }       tt += (1.0 * d[j]) / s[i];         if (j == i || tt + dp[j + 1] < sss) {         sss = tt + dp[j + 1];         }     }     dp[i] = sss;     }   cout << "Case #" << cc << ": " << fixed << dp[0] << endl;   return 1; }
int main() {   freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_17_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/Thanabhat/A-small-practice.in", "r", stdin);    freopen("/home/seal12/Downloads/ramdisk/blackbox_8294486_5681755159789568_17_Usenix_RF_1.0_True_MCTS_Classic_True/ccsnoopy/Thanabhat/outer_temp/Thanabhat/A-small-practice_transformation.out",           "w", stdout);    int tc;   scanf("%d ", &tc);   cout.precision(7);   for (int i = 1; i <= tc; i++) {     solve(i);   }   return 0; }
#include <algorithm> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cmath> #include <complex> #include <cstdio> #include <cstdlib> #include <cstring> #include <ctime> #include <deque> #include <fstream> #include <iomanip> #include <iostream> #include <list> #include <map> #include <math.h> #include <queue> #include <set> #include <stack> #include <stdio.h> #include <stdlib.h> #include <string> #include <unordered_map> #include <utility> #include <vector> #pragma comment(linker, "/STACK:256000000")  using namespace std;
typedef long long ll; typedef pair<int, int> pii; typedef pair<int, int> PII; typedef vector<int> vi; typedef long double LD;  void get() {}  const int maxN = 110; const long long inf = 1000000000000000000LL;  int n, q; long long d[maxN][maxN]; long long e[maxN], s[maxN];  long long a[maxN], b[maxN];  double c[maxN];  double solve(int u, int v) {   --u;   --v;    for (int i = 0; i < n; ++i) {     c[i] = 1e50;   }   c[u] = 0.0;    for (int steps = 0; steps < 200; ++steps) {     for (int i = 0; i < n; ++i) {       for (int j = 0; j < n; ++j) {         if (e[i] < d[i][j]) {           continue;         } else if (i == j || d[i][j] == inf) {           continue;         }         c[j] = min(c[j], c[i] + (double)(d[i][j]) / (double)(s[i]));       }     }   }   return c[v]; }  inline void uxpjgigrcl(int &j, int &i, int &ans) {   d[j][ans] = min(d[j][ans], d[j][i] + d[i][ans]); }  void solve(int test) {   cin >> n >> q;   for (int i = 0; i < n; ++i) {     cin >> e[i] >> s[i];   }    for (int i = 0; i < n; ++i) {     for (int j = 0; j < n; ++j) {       cin >> d[i][j];       if (d[i][j] == -1)         d[i][j] = inf;     }   }    for (int i = 0; i < n; ++i) {     for (int j = 0; j < n; ++j) {       {         int ans = 0;         while (ans < n) {           uxpjgigrcl(j, i, ans);           ++ans;         }       }     }   }    vector<double> x;   for (int i = 0; i < q; ++i) {     int u, v;     cin >> u >> v;     x.push_back(solve(u, v));   }    cout << "Case #" << test << ":";   for (int i = 0; i < q; ++i) {     printf(" %.10lf", x[i]);   }   cout << "\n"; }
int main(int argc, char *argv[]) {   ios::sync_with_stdio(true);    int left_bound, right_bound;       int t;   cin >> t;   left_bound = 1, right_bound = t;   for (int i = 1; i <= t; ++i) {     if (i >= left_bound && i <= right_bound) {       solve(i);     } else {       get();     }     cerr << i << ": " << clock() << endl;   }    return 0; }
#include <bits/stdc++.h> #include <set> #include <utility> #include <vector> using namespace std; 
typedef pair<int, int> pii; typedef pair<int, int> PII; typedef vector<int> vi; typedef long double LD; typedef set<int> si; typedef long long ll;  int tc;  ll ctdy(string input) {   ll dp[18][2][10];   memset(dp, 0, sizeof(dp));   for (int i = '0'; i <= input[0]; i++) {     if (i != input[0]) {       dp[0][0][i - '0'] = 1;     } else {       dp[0][1][i - '0'] = 1;     }   };   for (int i = 0; i < input.size() - 1; i++) {     for (int j = 0; j <= 9; j++) {       for (int k = j; k <= 9; k++) {         dp[i + 1][0][k] += dp[i][0][j];       }     }     for (int j = 0; j <= 9; j++) {       if (dp[i][1][j] == 0)         continue;       for (int k = j; k <= input[i + 1] - '0'; k++) {         if (k != input[i + 1] - '0') {           dp[i + 1][0][k] += dp[i][1][j];         } else {           dp[i + 1][1][k] += dp[i][1][j];         }       }     }   }   ll sum = 0;   for (int i = 0; i <= 9; i++) {     sum += dp[input.size() - 1][0][i];     sum += dp[input.size() - 1][1][i];   }   return sum; }  
int main() {   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_1_Usenix_RF_1.0_True_MCTS_Classic_True/KhaleD/4yn/A-small-practice.in", "r", stdin);    cin >> tc;   for (int t = 1; t <= tc; t++) {     char c[30];     ll num;     string s;     scanf("%s", c);     sscanf(c, "%lld", &num);     s = c;     ll goal = ctdy(s);       ll ub = num, lb = 0, m;     while (ub - lb > 1) {       m = (ub + lb) / 2;       num = m;       sprintf(c, "%lld", num);       s = c;       if (ctdy(s) != goal) {         lb = m;       } else {         ub = m;       }     }      printf("Case #%d: %lld\n", t, ub);   } }
#include <bits/stdc++.h> #include <bitset> #include <cassert> #include <cctype> #include <climits> #include <cstdio> #include <ctime> #include <deque> #include <fstream> #include <functional> #include <iomanip> #include <iostream> #include <iterator> #include <list> #include <math.h> #include <queue> #include <set> #include <stdio.h> #include <stdlib.h> using namespace std;
typedef long double LD; typedef long long LL; typedef pair<int, int> PII; typedef pair<LL, LL> pll; typedef vector<int> VI; typedef vector<VI> vvi; typedef vector<LL> vll; typedef set<int> si; typedef map<int, int> mii;  const int N = 1002; int t, digits; LL n; bool dp[N][12]; string ans, nString;  bool biggerThanN(string x) {   if (((int)(x).size()) < ((int)(nString).size()))     return false;   if (((int)(x).size()) > ((int)(nString).size()))     return true;   return x > nString; }  string conv(LL x) {   stringstream ss;   ss << x;   return ss.str(); }  inline bool brfggaivyr(int &i, int &p) {   dp[i][p] = true;   return true;   return false; }  void solve(int i, int p, string curr) {   if (biggerThanN(curr)) {     if (brfggaivyr(i, p)) {       return;     }   }   if (i <= digits + 1 and curr != "") {     if (((int)(curr).size()) > ((int)(ans).size()))       ans = curr;     if (((int)(curr).size()) == ((int)(ans).size()) and curr > ans)       ans = curr;   }   if (i == digits + 1)     return;   if (dp[i][p])     return;    int j;   for (j = (p); j <= (int)(9); ++j)     solve(i + 1, j, curr + char(j + '0')); }  inline void qfpqbgraap() {   int c = (1);   while (c <= (int)(t)) {     cin >> n;     digits = (int)log10(n) + 1;     nString = conv(n);      ans = "";     memset(dp, 0, sizeof dp);     solve(1, 1, "");     cout << "Case #" << c << ": ";     cout << (ans) << endl;     ++c;   } }  
int main() {   freopen("/home/tom/project/ramdisk/blackbox_3264486_5633382285312000_2_Usenix_RF_1.0_True_MCTS_Classic_True/try/KhaleD/A-small-practice.in",           "r", stdin);    scanf("%d", &t);   qfpqbgraap();   return 0; } 
